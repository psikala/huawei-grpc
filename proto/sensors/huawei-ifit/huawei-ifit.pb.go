// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sensors/huawei-ifit/huawei-ifit.proto

package huawei_ifit

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ifit_FlowStatistics_FlowStatistic_Direction int32

const (
	Ifit_FlowStatistics_FlowStatistic_INVALID_ENUM_VALUE_Direction Ifit_FlowStatistics_FlowStatistic_Direction = 0
	Ifit_FlowStatistics_FlowStatistic_Direction_INGRESS            Ifit_FlowStatistics_FlowStatistic_Direction = 1
	Ifit_FlowStatistics_FlowStatistic_Direction_TRANSITX_INPUT     Ifit_FlowStatistics_FlowStatistic_Direction = 2
	Ifit_FlowStatistics_FlowStatistic_Direction_TRANSITX_OUTPUT    Ifit_FlowStatistics_FlowStatistic_Direction = 3
	Ifit_FlowStatistics_FlowStatistic_Direction_EGRESS             Ifit_FlowStatistics_FlowStatistic_Direction = 4
)

var Ifit_FlowStatistics_FlowStatistic_Direction_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_Direction",
	1: "Direction_INGRESS",
	2: "Direction_TRANSITX_INPUT",
	3: "Direction_TRANSITX_OUTPUT",
	4: "Direction_EGRESS",
}

var Ifit_FlowStatistics_FlowStatistic_Direction_value = map[string]int32{
	"INVALID_ENUM_VALUE_Direction": 0,
	"Direction_INGRESS":            1,
	"Direction_TRANSITX_INPUT":     2,
	"Direction_TRANSITX_OUTPUT":    3,
	"Direction_EGRESS":             4,
}

func (x Ifit_FlowStatistics_FlowStatistic_Direction) String() string {
	return proto.EnumName(Ifit_FlowStatistics_FlowStatistic_Direction_name, int32(x))
}

func (Ifit_FlowStatistics_FlowStatistic_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 1, 0, 0}
}

type Ifit_FlowStatistics_FlowStatistic_AddressFamily int32

const (
	Ifit_FlowStatistics_FlowStatistic_AddressFamily_IPV4 Ifit_FlowStatistics_FlowStatistic_AddressFamily = 0
	Ifit_FlowStatistics_FlowStatistic_AddressFamily_IPV6 Ifit_FlowStatistics_FlowStatistic_AddressFamily = 1
)

var Ifit_FlowStatistics_FlowStatistic_AddressFamily_name = map[int32]string{
	0: "AddressFamily_IPV4",
	1: "AddressFamily_IPV6",
}

var Ifit_FlowStatistics_FlowStatistic_AddressFamily_value = map[string]int32{
	"AddressFamily_IPV4": 0,
	"AddressFamily_IPV6": 1,
}

func (x Ifit_FlowStatistics_FlowStatistic_AddressFamily) String() string {
	return proto.EnumName(Ifit_FlowStatistics_FlowStatistic_AddressFamily_name, int32(x))
}

func (Ifit_FlowStatistics_FlowStatistic_AddressFamily) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 1, 0, 1}
}

type Ifit_FlowHopStatistics_FlowHopStatistic_Direction int32

const (
	Ifit_FlowHopStatistics_FlowHopStatistic_INVALID_ENUM_VALUE_Direction Ifit_FlowHopStatistics_FlowHopStatistic_Direction = 0
	Ifit_FlowHopStatistics_FlowHopStatistic_Direction_INGRESS            Ifit_FlowHopStatistics_FlowHopStatistic_Direction = 1
	Ifit_FlowHopStatistics_FlowHopStatistic_Direction_TRANSITX_INPUT     Ifit_FlowHopStatistics_FlowHopStatistic_Direction = 2
	Ifit_FlowHopStatistics_FlowHopStatistic_Direction_TRANSITX_OUTPUT    Ifit_FlowHopStatistics_FlowHopStatistic_Direction = 3
	Ifit_FlowHopStatistics_FlowHopStatistic_Direction_EGRESS             Ifit_FlowHopStatistics_FlowHopStatistic_Direction = 4
)

var Ifit_FlowHopStatistics_FlowHopStatistic_Direction_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_Direction",
	1: "Direction_INGRESS",
	2: "Direction_TRANSITX_INPUT",
	3: "Direction_TRANSITX_OUTPUT",
	4: "Direction_EGRESS",
}

var Ifit_FlowHopStatistics_FlowHopStatistic_Direction_value = map[string]int32{
	"INVALID_ENUM_VALUE_Direction": 0,
	"Direction_INGRESS":            1,
	"Direction_TRANSITX_INPUT":     2,
	"Direction_TRANSITX_OUTPUT":    3,
	"Direction_EGRESS":             4,
}

func (x Ifit_FlowHopStatistics_FlowHopStatistic_Direction) String() string {
	return proto.EnumName(Ifit_FlowHopStatistics_FlowHopStatistic_Direction_name, int32(x))
}

func (Ifit_FlowHopStatistics_FlowHopStatistic_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 2, 0, 0}
}

type Ifit struct {
	Global               *Ifit_Global            `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	FlowStatistics       *Ifit_FlowStatistics    `protobuf:"bytes,2,opt,name=flow_statistics,json=flow-statistics,proto3" json:"flow_statistics,omitempty"`
	FlowHopStatistics    *Ifit_FlowHopStatistics `protobuf:"bytes,3,opt,name=flow_hop_statistics,json=flow-hop-statistics,proto3" json:"flow_hop_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Ifit) Reset()         { *m = Ifit{} }
func (m *Ifit) String() string { return proto.CompactTextString(m) }
func (*Ifit) ProtoMessage()    {}
func (*Ifit) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0}
}

func (m *Ifit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifit.Unmarshal(m, b)
}
func (m *Ifit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifit.Marshal(b, m, deterministic)
}
func (m *Ifit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifit.Merge(m, src)
}
func (m *Ifit) XXX_Size() int {
	return xxx_messageInfo_Ifit.Size(m)
}
func (m *Ifit) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifit.DiscardUnknown(m)
}

var xxx_messageInfo_Ifit proto.InternalMessageInfo

func (m *Ifit) GetGlobal() *Ifit_Global {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *Ifit) GetFlowStatistics() *Ifit_FlowStatistics {
	if m != nil {
		return m.FlowStatistics
	}
	return nil
}

func (m *Ifit) GetFlowHopStatistics() *Ifit_FlowHopStatistics {
	if m != nil {
		return m.FlowHopStatistics
	}
	return nil
}

type Ifit_Global struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	NodeId               uint32   `protobuf:"varint,2,opt,name=node_id,json=node-id,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ifit_Global) Reset()         { *m = Ifit_Global{} }
func (m *Ifit_Global) String() string { return proto.CompactTextString(m) }
func (*Ifit_Global) ProtoMessage()    {}
func (*Ifit_Global) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 0}
}

func (m *Ifit_Global) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifit_Global.Unmarshal(m, b)
}
func (m *Ifit_Global) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifit_Global.Marshal(b, m, deterministic)
}
func (m *Ifit_Global) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifit_Global.Merge(m, src)
}
func (m *Ifit_Global) XXX_Size() int {
	return xxx_messageInfo_Ifit_Global.Size(m)
}
func (m *Ifit_Global) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifit_Global.DiscardUnknown(m)
}

var xxx_messageInfo_Ifit_Global proto.InternalMessageInfo

func (m *Ifit_Global) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *Ifit_Global) GetNodeId() uint32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

type Ifit_FlowStatistics struct {
	FlowStatistic        []*Ifit_FlowStatistics_FlowStatistic `protobuf:"bytes,1,rep,name=flow_statistic,json=flow-statistic,proto3" json:"flow_statistic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Ifit_FlowStatistics) Reset()         { *m = Ifit_FlowStatistics{} }
func (m *Ifit_FlowStatistics) String() string { return proto.CompactTextString(m) }
func (*Ifit_FlowStatistics) ProtoMessage()    {}
func (*Ifit_FlowStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 1}
}

func (m *Ifit_FlowStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifit_FlowStatistics.Unmarshal(m, b)
}
func (m *Ifit_FlowStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifit_FlowStatistics.Marshal(b, m, deterministic)
}
func (m *Ifit_FlowStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifit_FlowStatistics.Merge(m, src)
}
func (m *Ifit_FlowStatistics) XXX_Size() int {
	return xxx_messageInfo_Ifit_FlowStatistics.Size(m)
}
func (m *Ifit_FlowStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifit_FlowStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_Ifit_FlowStatistics proto.InternalMessageInfo

func (m *Ifit_FlowStatistics) GetFlowStatistic() []*Ifit_FlowStatistics_FlowStatistic {
	if m != nil {
		return m.FlowStatistic
	}
	return nil
}

type Ifit_FlowStatistics_FlowStatistic struct {
	FlowId               uint64                                          `protobuf:"varint,1,opt,name=flow_id,json=flow-id,proto3" json:"flow_id,omitempty"`
	Direction            Ifit_FlowStatistics_FlowStatistic_Direction     `protobuf:"varint,2,opt,name=direction,proto3,enum=huawei_ifit.Ifit_FlowStatistics_FlowStatistic_Direction" json:"direction,omitempty"`
	AddressFamily        Ifit_FlowStatistics_FlowStatistic_AddressFamily `protobuf:"varint,3,opt,name=address_family,json=address-family,proto3,enum=huawei_ifit.Ifit_FlowStatistics_FlowStatistic_AddressFamily" json:"address_family,omitempty"`
	SourceIp             string                                          `protobuf:"bytes,4,opt,name=source_ip,json=source-ip,proto3" json:"source_ip,omitempty"`
	DestinationIp        string                                          `protobuf:"bytes,5,opt,name=destination_ip,json=destination-ip,proto3" json:"destination_ip,omitempty"`
	SourceMask           uint32                                          `protobuf:"varint,6,opt,name=source_mask,json=source-mask,proto3" json:"source_mask,omitempty"`
	DestinationMask      uint32                                          `protobuf:"varint,7,opt,name=destination_mask,json=destination-mask,proto3" json:"destination_mask,omitempty"`
	SourcePort           uint32                                          `protobuf:"varint,8,opt,name=source_port,json=source-port,proto3" json:"source_port,omitempty"`
	DestinationPort      uint32                                          `protobuf:"varint,9,opt,name=destination_port,json=destination-port,proto3" json:"destination_port,omitempty"`
	Protocol             uint32                                          `protobuf:"varint,10,opt,name=protocol,proto3" json:"protocol,omitempty"`
	VpnName              string                                          `protobuf:"bytes,11,opt,name=vpn_name,json=vpn-name,proto3" json:"vpn_name,omitempty"`
	IfIndex              uint32                                          `protobuf:"varint,12,opt,name=if_index,json=if-index,proto3" json:"if_index,omitempty"`
	ErrorInfo            uint32                                          `protobuf:"varint,13,opt,name=error_info,json=error-info,proto3" json:"error_info,omitempty"`
	Interval             uint32                                          `protobuf:"varint,14,opt,name=interval,proto3" json:"interval,omitempty"`
	PeriodId             uint64                                          `protobuf:"varint,15,opt,name=period_id,json=period-id,proto3" json:"period_id,omitempty"`
	PacketCount          uint64                                          `protobuf:"varint,16,opt,name=packet_count,json=packet-count,proto3" json:"packet_count,omitempty"`
	ByteCount            uint64                                          `protobuf:"varint,17,opt,name=byte_count,json=byte-count,proto3" json:"byte_count,omitempty"`
	TimestampSecond      uint32                                          `protobuf:"varint,18,opt,name=timestamp_second,json=timestamp-second,proto3" json:"timestamp_second,omitempty"`
	TimestampNanosecond  uint32                                          `protobuf:"varint,19,opt,name=timestamp_nanosecond,json=timestamp-nanosecond,proto3" json:"timestamp_nanosecond,omitempty"`
	Ttl                  uint32                                          `protobuf:"varint,21,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *Ifit_FlowStatistics_FlowStatistic) Reset()         { *m = Ifit_FlowStatistics_FlowStatistic{} }
func (m *Ifit_FlowStatistics_FlowStatistic) String() string { return proto.CompactTextString(m) }
func (*Ifit_FlowStatistics_FlowStatistic) ProtoMessage()    {}
func (*Ifit_FlowStatistics_FlowStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 1, 0}
}

func (m *Ifit_FlowStatistics_FlowStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifit_FlowStatistics_FlowStatistic.Unmarshal(m, b)
}
func (m *Ifit_FlowStatistics_FlowStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifit_FlowStatistics_FlowStatistic.Marshal(b, m, deterministic)
}
func (m *Ifit_FlowStatistics_FlowStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifit_FlowStatistics_FlowStatistic.Merge(m, src)
}
func (m *Ifit_FlowStatistics_FlowStatistic) XXX_Size() int {
	return xxx_messageInfo_Ifit_FlowStatistics_FlowStatistic.Size(m)
}
func (m *Ifit_FlowStatistics_FlowStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifit_FlowStatistics_FlowStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_Ifit_FlowStatistics_FlowStatistic proto.InternalMessageInfo

func (m *Ifit_FlowStatistics_FlowStatistic) GetFlowId() uint64 {
	if m != nil {
		return m.FlowId
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetDirection() Ifit_FlowStatistics_FlowStatistic_Direction {
	if m != nil {
		return m.Direction
	}
	return Ifit_FlowStatistics_FlowStatistic_INVALID_ENUM_VALUE_Direction
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetAddressFamily() Ifit_FlowStatistics_FlowStatistic_AddressFamily {
	if m != nil {
		return m.AddressFamily
	}
	return Ifit_FlowStatistics_FlowStatistic_AddressFamily_IPV4
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetSourceIp() string {
	if m != nil {
		return m.SourceIp
	}
	return ""
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetDestinationIp() string {
	if m != nil {
		return m.DestinationIp
	}
	return ""
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetSourceMask() uint32 {
	if m != nil {
		return m.SourceMask
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetDestinationMask() uint32 {
	if m != nil {
		return m.DestinationMask
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetVpnName() string {
	if m != nil {
		return m.VpnName
	}
	return ""
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetIfIndex() uint32 {
	if m != nil {
		return m.IfIndex
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetErrorInfo() uint32 {
	if m != nil {
		return m.ErrorInfo
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetInterval() uint32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetPeriodId() uint64 {
	if m != nil {
		return m.PeriodId
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetPacketCount() uint64 {
	if m != nil {
		return m.PacketCount
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetByteCount() uint64 {
	if m != nil {
		return m.ByteCount
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetTimestampSecond() uint32 {
	if m != nil {
		return m.TimestampSecond
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetTimestampNanosecond() uint32 {
	if m != nil {
		return m.TimestampNanosecond
	}
	return 0
}

func (m *Ifit_FlowStatistics_FlowStatistic) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type Ifit_FlowHopStatistics struct {
	FlowHopStatistic     []*Ifit_FlowHopStatistics_FlowHopStatistic `protobuf:"bytes,1,rep,name=flow_hop_statistic,json=flow-hop-statistic,proto3" json:"flow_hop_statistic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *Ifit_FlowHopStatistics) Reset()         { *m = Ifit_FlowHopStatistics{} }
func (m *Ifit_FlowHopStatistics) String() string { return proto.CompactTextString(m) }
func (*Ifit_FlowHopStatistics) ProtoMessage()    {}
func (*Ifit_FlowHopStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 2}
}

func (m *Ifit_FlowHopStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifit_FlowHopStatistics.Unmarshal(m, b)
}
func (m *Ifit_FlowHopStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifit_FlowHopStatistics.Marshal(b, m, deterministic)
}
func (m *Ifit_FlowHopStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifit_FlowHopStatistics.Merge(m, src)
}
func (m *Ifit_FlowHopStatistics) XXX_Size() int {
	return xxx_messageInfo_Ifit_FlowHopStatistics.Size(m)
}
func (m *Ifit_FlowHopStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifit_FlowHopStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_Ifit_FlowHopStatistics proto.InternalMessageInfo

func (m *Ifit_FlowHopStatistics) GetFlowHopStatistic() []*Ifit_FlowHopStatistics_FlowHopStatistic {
	if m != nil {
		return m.FlowHopStatistic
	}
	return nil
}

type Ifit_FlowHopStatistics_FlowHopStatistic struct {
	FlowId               uint64                                            `protobuf:"varint,1,opt,name=flow_id,json=flow-id,proto3" json:"flow_id,omitempty"`
	Direction            Ifit_FlowHopStatistics_FlowHopStatistic_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=huawei_ifit.Ifit_FlowHopStatistics_FlowHopStatistic_Direction" json:"direction,omitempty"`
	IfIndex              uint32                                            `protobuf:"varint,3,opt,name=if_index,json=if-index,proto3" json:"if_index,omitempty"`
	ErrorInfo            uint32                                            `protobuf:"varint,4,opt,name=error_info,json=error-info,proto3" json:"error_info,omitempty"`
	PeriodId             uint64                                            `protobuf:"varint,5,opt,name=period_id,json=period-id,proto3" json:"period_id,omitempty"`
	PacketCount          uint64                                            `protobuf:"varint,6,opt,name=packet_count,json=packet-count,proto3" json:"packet_count,omitempty"`
	ByteCount            uint64                                            `protobuf:"varint,7,opt,name=byte_count,json=byte-count,proto3" json:"byte_count,omitempty"`
	TimestampSecond      uint32                                            `protobuf:"varint,8,opt,name=timestamp_second,json=timestamp-second,proto3" json:"timestamp_second,omitempty"`
	TimestampNanosecond  uint32                                            `protobuf:"varint,9,opt,name=timestamp_nanosecond,json=timestamp-nanosecond,proto3" json:"timestamp_nanosecond,omitempty"`
	Ttl                  uint32                                            `protobuf:"varint,11,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) Reset() {
	*m = Ifit_FlowHopStatistics_FlowHopStatistic{}
}
func (m *Ifit_FlowHopStatistics_FlowHopStatistic) String() string { return proto.CompactTextString(m) }
func (*Ifit_FlowHopStatistics_FlowHopStatistic) ProtoMessage()    {}
func (*Ifit_FlowHopStatistics_FlowHopStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d5259dbba260b1f, []int{0, 2, 0}
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifit_FlowHopStatistics_FlowHopStatistic.Unmarshal(m, b)
}
func (m *Ifit_FlowHopStatistics_FlowHopStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifit_FlowHopStatistics_FlowHopStatistic.Marshal(b, m, deterministic)
}
func (m *Ifit_FlowHopStatistics_FlowHopStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifit_FlowHopStatistics_FlowHopStatistic.Merge(m, src)
}
func (m *Ifit_FlowHopStatistics_FlowHopStatistic) XXX_Size() int {
	return xxx_messageInfo_Ifit_FlowHopStatistics_FlowHopStatistic.Size(m)
}
func (m *Ifit_FlowHopStatistics_FlowHopStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifit_FlowHopStatistics_FlowHopStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_Ifit_FlowHopStatistics_FlowHopStatistic proto.InternalMessageInfo

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetFlowId() uint64 {
	if m != nil {
		return m.FlowId
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetDirection() Ifit_FlowHopStatistics_FlowHopStatistic_Direction {
	if m != nil {
		return m.Direction
	}
	return Ifit_FlowHopStatistics_FlowHopStatistic_INVALID_ENUM_VALUE_Direction
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetIfIndex() uint32 {
	if m != nil {
		return m.IfIndex
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetErrorInfo() uint32 {
	if m != nil {
		return m.ErrorInfo
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetPeriodId() uint64 {
	if m != nil {
		return m.PeriodId
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetPacketCount() uint64 {
	if m != nil {
		return m.PacketCount
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetByteCount() uint64 {
	if m != nil {
		return m.ByteCount
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetTimestampSecond() uint32 {
	if m != nil {
		return m.TimestampSecond
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetTimestampNanosecond() uint32 {
	if m != nil {
		return m.TimestampNanosecond
	}
	return 0
}

func (m *Ifit_FlowHopStatistics_FlowHopStatistic) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func init() {
	proto.RegisterEnum("huawei_ifit.Ifit_FlowStatistics_FlowStatistic_Direction", Ifit_FlowStatistics_FlowStatistic_Direction_name, Ifit_FlowStatistics_FlowStatistic_Direction_value)
	proto.RegisterEnum("huawei_ifit.Ifit_FlowStatistics_FlowStatistic_AddressFamily", Ifit_FlowStatistics_FlowStatistic_AddressFamily_name, Ifit_FlowStatistics_FlowStatistic_AddressFamily_value)
	proto.RegisterEnum("huawei_ifit.Ifit_FlowHopStatistics_FlowHopStatistic_Direction", Ifit_FlowHopStatistics_FlowHopStatistic_Direction_name, Ifit_FlowHopStatistics_FlowHopStatistic_Direction_value)
	proto.RegisterType((*Ifit)(nil), "huawei_ifit.Ifit")
	proto.RegisterType((*Ifit_Global)(nil), "huawei_ifit.Ifit.Global")
	proto.RegisterType((*Ifit_FlowStatistics)(nil), "huawei_ifit.Ifit.FlowStatistics")
	proto.RegisterType((*Ifit_FlowStatistics_FlowStatistic)(nil), "huawei_ifit.Ifit.FlowStatistics.FlowStatistic")
	proto.RegisterType((*Ifit_FlowHopStatistics)(nil), "huawei_ifit.Ifit.FlowHopStatistics")
	proto.RegisterType((*Ifit_FlowHopStatistics_FlowHopStatistic)(nil), "huawei_ifit.Ifit.FlowHopStatistics.FlowHopStatistic")
}

func init() {
	proto.RegisterFile("proto/sensors/huawei-ifit/huawei-ifit.proto", fileDescriptor_4d5259dbba260b1f)
}

var fileDescriptor_4d5259dbba260b1f = []byte{
	// 778 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x94, 0xdd, 0x6e, 0xeb, 0x44,
	0x10, 0xc7, 0x4f, 0x4e, 0xd2, 0x34, 0x99, 0x9c, 0xf8, 0xb8, 0x7b, 0x3e, 0xb4, 0x44, 0x05, 0x45,
	0x41, 0x42, 0x55, 0x91, 0x53, 0x14, 0x2a, 0x84, 0x10, 0x02, 0x45, 0x6a, 0x5a, 0x82, 0x4a, 0xa8,
	0x9c, 0x0f, 0x71, 0x81, 0xb4, 0x72, 0xe2, 0x0d, 0x5d, 0xd5, 0xf1, 0x5a, 0xf6, 0xb6, 0xa5, 0x6f,
	0xc0, 0x1b, 0xf0, 0x1a, 0x5c, 0xf0, 0x00, 0xbc, 0x13, 0x2f, 0x80, 0x76, 0xec, 0xc6, 0x76, 0x1d,
	0x35, 0x2d, 0x77, 0xe7, 0x2e, 0xf3, 0x9f, 0xdf, 0xfc, 0x3d, 0xbb, 0x99, 0x1d, 0xf8, 0x3c, 0x08,
	0xa5, 0x92, 0x47, 0x11, 0xf7, 0x23, 0x19, 0x46, 0x47, 0x97, 0xd7, 0xce, 0x2d, 0x17, 0x96, 0x58,
	0x0a, 0x95, 0xfd, 0xdd, 0x45, 0x8a, 0x34, 0x62, 0x89, 0x69, 0xa9, 0xf3, 0x8f, 0x09, 0x95, 0xe1,
	0x52, 0x28, 0xf2, 0x05, 0x54, 0x7f, 0xf3, 0xe4, 0xdc, 0xf1, 0x68, 0xa9, 0x5d, 0x3a, 0x68, 0xf4,
	0x68, 0x37, 0x83, 0x75, 0x35, 0xd2, 0x3d, 0xc3, 0xbc, 0x9d, 0x70, 0xe4, 0x47, 0x78, 0xbd, 0xf4,
	0xe4, 0x2d, 0x8b, 0x94, 0xa3, 0x44, 0xa4, 0xc4, 0x22, 0xa2, 0x2f, 0xb1, 0xb4, 0x5d, 0x2c, 0x3d,
	0xf5, 0xe4, 0xed, 0x78, 0xcd, 0xd9, 0x58, 0x68, 0xa5, 0x85, 0x64, 0x0a, 0x6f, 0xd0, 0xeb, 0x52,
	0x06, 0x59, 0xbf, 0x32, 0xfa, 0x7d, 0xba, 0xd9, 0xef, 0x07, 0x19, 0x64, 0x2c, 0xb1, 0xde, 0xba,
	0x94, 0x41, 0xc6, 0xb6, 0xf5, 0x0d, 0x54, 0xe3, 0xa6, 0xc9, 0x7b, 0xa8, 0x72, 0xdf, 0x99, 0x7b,
	0x1c, 0x8f, 0x57, 0xb3, 0x93, 0x88, 0x50, 0xd8, 0xf5, 0xa5, 0xcb, 0x99, 0x70, 0xb1, 0xf9, 0xa6,
	0x8d, 0xa1, 0x25, 0xdc, 0xd6, 0xbf, 0x35, 0x30, 0xf2, 0x6d, 0x93, 0x19, 0x18, 0xf9, 0x13, 0xd3,
	0x52, 0xbb, 0x7c, 0xd0, 0xe8, 0x75, 0xb7, 0x1d, 0x38, 0x1f, 0xda, 0x46, 0xfe, 0xf8, 0xad, 0x3f,
	0x6a, 0xd0, 0xcc, 0x11, 0xba, 0x2d, 0xfc, 0x92, 0x70, 0xb1, 0xdf, 0x8a, 0x8d, 0xa1, 0x25, 0x5c,
	0x32, 0x83, 0xba, 0x2b, 0x42, 0xbe, 0x50, 0x42, 0xfa, 0xd8, 0xb2, 0xd1, 0xfb, 0xfa, 0x79, 0x9f,
	0xef, 0x9e, 0xdc, 0xd7, 0xdb, 0xa9, 0x15, 0x71, 0xc1, 0x70, 0x5c, 0x37, 0xe4, 0x51, 0xc4, 0x96,
	0xce, 0x4a, 0x78, 0x77, 0x78, 0xf9, 0x46, 0xef, 0xdb, 0x67, 0x9a, 0xf7, 0x63, 0x93, 0x53, 0xf4,
	0xb0, 0xef, 0x3d, 0xad, 0xd8, 0x93, 0xec, 0x43, 0x3d, 0x92, 0xd7, 0xe1, 0x82, 0x33, 0x11, 0xd0,
	0x4a, 0xbb, 0x74, 0x50, 0xb7, 0x13, 0xc1, 0x12, 0x01, 0xf9, 0x0c, 0x0c, 0x97, 0x47, 0x4a, 0xf8,
	0x8e, 0x6e, 0x49, 0x23, 0x3b, 0x88, 0x64, 0x55, 0xcd, 0xb5, 0xa1, 0x91, 0xb8, 0xac, 0x9c, 0xe8,
	0x8a, 0x56, 0xf1, 0x8f, 0x4b, 0x24, 0x4b, 0x4b, 0xe4, 0x10, 0xcc, 0xac, 0x13, 0x62, 0xbb, 0x88,
	0x65, 0xf5, 0x98, 0x4d, 0xdd, 0x02, 0x19, 0x2a, 0x5a, 0xcb, 0xb9, 0x69, 0xe9, 0xa1, 0x1b, 0x62,
	0xf5, 0xa2, 0x1b, 0xb2, 0x2d, 0xa8, 0xe1, 0x33, 0x5b, 0x48, 0x8f, 0x02, 0x32, 0xeb, 0x58, 0xe7,
	0x6e, 0x02, 0x9f, 0xf9, 0xce, 0x8a, 0xd3, 0x06, 0x9e, 0x4c, 0xc7, 0x96, 0x8e, 0x75, 0x4e, 0x2c,
	0x99, 0xf0, 0x5d, 0xfe, 0x3b, 0x7d, 0x15, 0xd7, 0x89, 0xa5, 0x85, 0x31, 0xf9, 0x04, 0x80, 0x87,
	0xa1, 0x0c, 0x99, 0xf0, 0x97, 0x92, 0x36, 0x31, 0x1b, 0x2b, 0x96, 0x56, 0xb0, 0xd6, 0x57, 0x3c,
	0xbc, 0x71, 0x3c, 0x6a, 0x24, 0xb5, 0x49, 0xac, 0x6f, 0x3c, 0xe0, 0xa1, 0x90, 0xae, 0x9e, 0xa5,
	0xd7, 0x38, 0x4b, 0x89, 0xa0, 0xa7, 0xa9, 0x03, 0xaf, 0x02, 0x67, 0x71, 0xc5, 0x15, 0x5b, 0xc8,
	0x6b, 0x5f, 0x51, 0x13, 0x81, 0x44, 0xb3, 0x50, 0xd3, 0x5f, 0x9f, 0xdf, 0x29, 0x9e, 0x10, 0x7b,
	0x48, 0xa0, 0x92, 0xe4, 0x0f, 0xc1, 0x54, 0x62, 0xc5, 0x23, 0xe5, 0xac, 0x02, 0x16, 0xf1, 0x85,
	0xf4, 0x5d, 0x4a, 0xe2, 0xdb, 0x59, 0xeb, 0x56, 0xac, 0x93, 0x1e, 0xbc, 0x4d, 0x59, 0xdf, 0xf1,
	0x65, 0xc2, 0xbf, 0x41, 0x3e, 0xcd, 0x59, 0x69, 0x8e, 0x98, 0x50, 0x56, 0xca, 0xa3, 0xef, 0x10,
	0xd1, 0x3f, 0x3b, 0x7f, 0x96, 0xa0, 0xbe, 0x1e, 0x62, 0xd2, 0x86, 0xfd, 0xe1, 0x68, 0xd6, 0x3f,
	0x1f, 0x9e, 0xb0, 0xc1, 0x68, 0xfa, 0x13, 0x9b, 0xf5, 0xcf, 0xa7, 0x03, 0xb6, 0xce, 0x9b, 0x2f,
	0xc8, 0x3b, 0xd8, 0x5b, 0x87, 0x6c, 0x38, 0x3a, 0xb3, 0x07, 0xe3, 0xb1, 0x59, 0x22, 0xfb, 0x40,
	0x53, 0x79, 0x62, 0xf7, 0x47, 0xe3, 0xe1, 0xe4, 0x17, 0x36, 0x1c, 0x5d, 0x4c, 0x27, 0xe6, 0x4b,
	0xf2, 0x31, 0x7c, 0xb4, 0x21, 0xfb, 0xf3, 0x74, 0xa2, 0xd3, 0x65, 0xf2, 0x16, 0xcc, 0x34, 0x3d,
	0x88, 0x2d, 0x2b, 0x9d, 0xef, 0xa1, 0x99, 0x7b, 0x00, 0xe4, 0x3d, 0x90, 0x9c, 0xc0, 0x86, 0x17,
	0xb3, 0x63, 0xf3, 0xc5, 0x46, 0xfd, 0x2b, 0xb3, 0xd4, 0xfa, 0x6b, 0x07, 0xf6, 0x0a, 0xcb, 0x8d,
	0xb8, 0x40, 0x8a, 0xeb, 0x31, 0x59, 0x3e, 0xc7, 0x4f, 0xd8, 0x8e, 0x05, 0xc5, 0x26, 0xc5, 0x75,
	0xd9, 0xfa, 0xbb, 0x02, 0xe6, 0x43, 0xf0, 0x91, 0x4d, 0xf4, 0x6b, 0x71, 0x13, 0x7d, 0xf7, 0x7f,
	0x7a, 0xd9, 0xbc, 0x8f, 0xb2, 0xef, 0xa1, 0xfc, 0xe8, 0x7b, 0xa8, 0x14, 0xde, 0x43, 0x6e, 0xe6,
	0x77, 0xb6, 0xcd, 0x7c, 0x75, 0xeb, 0xcc, 0xef, 0x3e, 0x69, 0xe6, 0x6b, 0xcf, 0x9c, 0xf9, 0xfa,
	0xf6, 0x99, 0x6f, 0x7c, 0x00, 0x33, 0x3f, 0xaf, 0xe2, 0x7e, 0xfb, 0xf2, 0xbf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc9, 0xa5, 0x13, 0xa1, 0x85, 0x08, 0x00, 0x00,
}
