// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sensors/huawei-devm/huawei-devm.proto

package huawei_devm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Devm_PhysicalEntitys_PhysicalEntity_Class int32

const (
	Devm_PhysicalEntitys_PhysicalEntity_Class_OTHER       Devm_PhysicalEntitys_PhysicalEntity_Class = 0
	Devm_PhysicalEntitys_PhysicalEntity_Class_CHASSIS     Devm_PhysicalEntitys_PhysicalEntity_Class = 1
	Devm_PhysicalEntitys_PhysicalEntity_Class_MPUMODULE   Devm_PhysicalEntitys_PhysicalEntity_Class = 4
	Devm_PhysicalEntitys_PhysicalEntity_Class_LPUMODULE   Devm_PhysicalEntitys_PhysicalEntity_Class = 5
	Devm_PhysicalEntitys_PhysicalEntity_Class_SFUMODULE   Devm_PhysicalEntitys_PhysicalEntity_Class = 6
	Devm_PhysicalEntitys_PhysicalEntity_Class_CLOCKMODULE Devm_PhysicalEntitys_PhysicalEntity_Class = 7
	Devm_PhysicalEntitys_PhysicalEntity_Class_CARDMODULE  Devm_PhysicalEntitys_PhysicalEntity_Class = 9
	Devm_PhysicalEntitys_PhysicalEntity_Class_PORT        Devm_PhysicalEntitys_PhysicalEntity_Class = 10
	Devm_PhysicalEntitys_PhysicalEntity_Class_FAN         Devm_PhysicalEntitys_PhysicalEntity_Class = 16
	Devm_PhysicalEntitys_PhysicalEntity_Class_POWERSUPPLY Devm_PhysicalEntitys_PhysicalEntity_Class = 17
	Devm_PhysicalEntitys_PhysicalEntity_Class_CONTAINER   Devm_PhysicalEntitys_PhysicalEntity_Class = 18
	Devm_PhysicalEntitys_PhysicalEntity_Class_PPMODULE    Devm_PhysicalEntitys_PhysicalEntity_Class = 4108
	Devm_PhysicalEntitys_PhysicalEntity_Class_SWFMODULE   Devm_PhysicalEntitys_PhysicalEntity_Class = 4109
	Devm_PhysicalEntitys_PhysicalEntity_Class_ECUMODULE   Devm_PhysicalEntitys_PhysicalEntity_Class = 4110
	Devm_PhysicalEntitys_PhysicalEntity_Class_ICUMODULE   Devm_PhysicalEntitys_PhysicalEntity_Class = 4111
	Devm_PhysicalEntitys_PhysicalEntity_Class_LFE         Devm_PhysicalEntitys_PhysicalEntity_Class = 4162
	Devm_PhysicalEntitys_PhysicalEntity_Class_CFMODULE    Devm_PhysicalEntitys_PhysicalEntity_Class = 4170
	Devm_PhysicalEntitys_PhysicalEntity_Class_LCD         Devm_PhysicalEntitys_PhysicalEntity_Class = 4181
	Devm_PhysicalEntitys_PhysicalEntity_Class_PEM         Devm_PhysicalEntitys_PhysicalEntity_Class = 5006
	Devm_PhysicalEntitys_PhysicalEntity_Class_CMUMODULE   Devm_PhysicalEntitys_PhysicalEntity_Class = 5010
	Devm_PhysicalEntitys_PhysicalEntity_Class_PIC         Devm_PhysicalEntitys_PhysicalEntity_Class = 5011
	Devm_PhysicalEntitys_PhysicalEntity_Class_TSU         Devm_PhysicalEntitys_PhysicalEntity_Class = 5012
	Devm_PhysicalEntitys_PhysicalEntity_Class_PM          Devm_PhysicalEntitys_PhysicalEntity_Class = 5032
)

var Devm_PhysicalEntitys_PhysicalEntity_Class_name = map[int32]string{
	0:    "Class_OTHER",
	1:    "Class_CHASSIS",
	4:    "Class_MPUMODULE",
	5:    "Class_LPUMODULE",
	6:    "Class_SFUMODULE",
	7:    "Class_CLOCKMODULE",
	9:    "Class_CARDMODULE",
	10:   "Class_PORT",
	16:   "Class_FAN",
	17:   "Class_POWERSUPPLY",
	18:   "Class_CONTAINER",
	4108: "Class_PPMODULE",
	4109: "Class_SWFMODULE",
	4110: "Class_ECUMODULE",
	4111: "Class_ICUMODULE",
	4162: "Class_LFE",
	4170: "Class_CFMODULE",
	4181: "Class_LCD",
	5006: "Class_PEM",
	5010: "Class_CMUMODULE",
	5011: "Class_PIC",
	5012: "Class_TSU",
	5032: "Class_PM",
}

var Devm_PhysicalEntitys_PhysicalEntity_Class_value = map[string]int32{
	"Class_OTHER":       0,
	"Class_CHASSIS":     1,
	"Class_MPUMODULE":   4,
	"Class_LPUMODULE":   5,
	"Class_SFUMODULE":   6,
	"Class_CLOCKMODULE": 7,
	"Class_CARDMODULE":  9,
	"Class_PORT":        10,
	"Class_FAN":         16,
	"Class_POWERSUPPLY": 17,
	"Class_CONTAINER":   18,
	"Class_PPMODULE":    4108,
	"Class_SWFMODULE":   4109,
	"Class_ECUMODULE":   4110,
	"Class_ICUMODULE":   4111,
	"Class_LFE":         4162,
	"Class_CFMODULE":    4170,
	"Class_LCD":         4181,
	"Class_PEM":         5006,
	"Class_CMUMODULE":   5010,
	"Class_PIC":         5011,
	"Class_TSU":         5012,
	"Class_PM":          5032,
}

func (x Devm_PhysicalEntitys_PhysicalEntity_Class) String() string {
	return proto.EnumName(Devm_PhysicalEntitys_PhysicalEntity_Class_name, int32(x))
}

func (Devm_PhysicalEntitys_PhysicalEntity_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 0, 0, 0}
}

type Devm_PhysicalEntitys_PhysicalEntity_AdminState int32

const (
	Devm_PhysicalEntitys_PhysicalEntity_AdminState_INACTIVE     Devm_PhysicalEntitys_PhysicalEntity_AdminState = 0
	Devm_PhysicalEntitys_PhysicalEntity_AdminState_ACTIVE       Devm_PhysicalEntitys_PhysicalEntity_AdminState = 1
	Devm_PhysicalEntitys_PhysicalEntity_AdminState_NOTSUPPORTED Devm_PhysicalEntitys_PhysicalEntity_AdminState = 2
)

var Devm_PhysicalEntitys_PhysicalEntity_AdminState_name = map[int32]string{
	0: "AdminState_INACTIVE",
	1: "AdminState_ACTIVE",
	2: "AdminState_NOTSUPPORTED",
}

var Devm_PhysicalEntitys_PhysicalEntity_AdminState_value = map[string]int32{
	"AdminState_INACTIVE":     0,
	"AdminState_ACTIVE":       1,
	"AdminState_NOTSUPPORTED": 2,
}

func (x Devm_PhysicalEntitys_PhysicalEntity_AdminState) String() string {
	return proto.EnumName(Devm_PhysicalEntitys_PhysicalEntity_AdminState_name, int32(x))
}

func (Devm_PhysicalEntitys_PhysicalEntity_AdminState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 0, 0, 1}
}

type Devm_PhysicalEntitys_PhysicalEntity_RunningState int32

const (
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_UNKNOWN              Devm_PhysicalEntitys_PhysicalEntity_RunningState = 0
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_NORMAL               Devm_PhysicalEntitys_PhysicalEntity_RunningState = 1
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_FAULT                Devm_PhysicalEntitys_PhysicalEntity_RunningState = 2
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_OFFLINE              Devm_PhysicalEntitys_PhysicalEntity_RunningState = 3
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_NOTSUPPORTED         Devm_PhysicalEntitys_PhysicalEntity_RunningState = 4
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_OPTICALNOTEQUIPPED   Devm_PhysicalEntitys_PhysicalEntity_RunningState = 5
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_NOTINSTALL           Devm_PhysicalEntitys_PhysicalEntity_RunningState = 6
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_WRONGTYPE            Devm_PhysicalEntitys_PhysicalEntity_RunningState = 7
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_REGISTERED           Devm_PhysicalEntitys_PhysicalEntity_RunningState = 8
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_UNREGISTERED         Devm_PhysicalEntitys_PhysicalEntity_RunningState = 9
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_POWEROFF             Devm_PhysicalEntitys_PhysicalEntity_RunningState = 10
	Devm_PhysicalEntitys_PhysicalEntity_RunningState_PORTX_PHYSICALX_DOWN Devm_PhysicalEntitys_PhysicalEntity_RunningState = 11
)

var Devm_PhysicalEntitys_PhysicalEntity_RunningState_name = map[int32]string{
	0:  "RunningState_UNKNOWN",
	1:  "RunningState_NORMAL",
	2:  "RunningState_FAULT",
	3:  "RunningState_OFFLINE",
	4:  "RunningState_NOTSUPPORTED",
	5:  "RunningState_OPTICALNOTEQUIPPED",
	6:  "RunningState_NOTINSTALL",
	7:  "RunningState_WRONGTYPE",
	8:  "RunningState_REGISTERED",
	9:  "RunningState_UNREGISTERED",
	10: "RunningState_POWEROFF",
	11: "RunningState_PORTX_PHYSICALX_DOWN",
}

var Devm_PhysicalEntitys_PhysicalEntity_RunningState_value = map[string]int32{
	"RunningState_UNKNOWN":              0,
	"RunningState_NORMAL":               1,
	"RunningState_FAULT":                2,
	"RunningState_OFFLINE":              3,
	"RunningState_NOTSUPPORTED":         4,
	"RunningState_OPTICALNOTEQUIPPED":   5,
	"RunningState_NOTINSTALL":           6,
	"RunningState_WRONGTYPE":            7,
	"RunningState_REGISTERED":           8,
	"RunningState_UNREGISTERED":         9,
	"RunningState_POWEROFF":             10,
	"RunningState_PORTX_PHYSICALX_DOWN": 11,
}

func (x Devm_PhysicalEntitys_PhysicalEntity_RunningState) String() string {
	return proto.EnumName(Devm_PhysicalEntitys_PhysicalEntity_RunningState_name, int32(x))
}

func (Devm_PhysicalEntitys_PhysicalEntity_RunningState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 0, 0, 2}
}

type Devm_PhysicalEntitys_PhysicalEntity_StandbyState int32

const (
	Devm_PhysicalEntitys_PhysicalEntity_StandbyState_MASTER       Devm_PhysicalEntitys_PhysicalEntity_StandbyState = 0
	Devm_PhysicalEntitys_PhysicalEntity_StandbyState_SLAVE        Devm_PhysicalEntitys_PhysicalEntity_StandbyState = 1
	Devm_PhysicalEntitys_PhysicalEntity_StandbyState_NOTSUPPORTED Devm_PhysicalEntitys_PhysicalEntity_StandbyState = 2
	Devm_PhysicalEntitys_PhysicalEntity_StandbyState_SYSTEMMASTER Devm_PhysicalEntitys_PhysicalEntity_StandbyState = 3
	Devm_PhysicalEntitys_PhysicalEntity_StandbyState_SYSTEMSLAVE  Devm_PhysicalEntitys_PhysicalEntity_StandbyState = 4
)

var Devm_PhysicalEntitys_PhysicalEntity_StandbyState_name = map[int32]string{
	0: "StandbyState_MASTER",
	1: "StandbyState_SLAVE",
	2: "StandbyState_NOTSUPPORTED",
	3: "StandbyState_SYSTEMMASTER",
	4: "StandbyState_SYSTEMSLAVE",
}

var Devm_PhysicalEntitys_PhysicalEntity_StandbyState_value = map[string]int32{
	"StandbyState_MASTER":       0,
	"StandbyState_SLAVE":        1,
	"StandbyState_NOTSUPPORTED": 2,
	"StandbyState_SYSTEMMASTER": 3,
	"StandbyState_SYSTEMSLAVE":  4,
}

func (x Devm_PhysicalEntitys_PhysicalEntity_StandbyState) String() string {
	return proto.EnumName(Devm_PhysicalEntitys_PhysicalEntity_StandbyState_name, int32(x))
}

func (Devm_PhysicalEntitys_PhysicalEntity_StandbyState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 0, 0, 3}
}

type Devm_LogicEntitys_LogicEntity_Class int32

const (
	Devm_LogicEntitys_LogicEntity_Class_OTHER       Devm_LogicEntitys_LogicEntity_Class = 0
	Devm_LogicEntitys_LogicEntity_Class_CHASSIS     Devm_LogicEntitys_LogicEntity_Class = 1
	Devm_LogicEntitys_LogicEntity_Class_MPUMODULE   Devm_LogicEntitys_LogicEntity_Class = 4
	Devm_LogicEntitys_LogicEntity_Class_LPUMODULE   Devm_LogicEntitys_LogicEntity_Class = 5
	Devm_LogicEntitys_LogicEntity_Class_SFUMODULE   Devm_LogicEntitys_LogicEntity_Class = 6
	Devm_LogicEntitys_LogicEntity_Class_CLOCKMODULE Devm_LogicEntitys_LogicEntity_Class = 7
	Devm_LogicEntitys_LogicEntity_Class_CARDMODULE  Devm_LogicEntitys_LogicEntity_Class = 9
	Devm_LogicEntitys_LogicEntity_Class_PORT        Devm_LogicEntitys_LogicEntity_Class = 10
	Devm_LogicEntitys_LogicEntity_Class_FAN         Devm_LogicEntitys_LogicEntity_Class = 16
	Devm_LogicEntitys_LogicEntity_Class_POWERSUPPLY Devm_LogicEntitys_LogicEntity_Class = 17
	Devm_LogicEntitys_LogicEntity_Class_CONTAINER   Devm_LogicEntitys_LogicEntity_Class = 18
	Devm_LogicEntitys_LogicEntity_Class_PPMODULE    Devm_LogicEntitys_LogicEntity_Class = 4108
	Devm_LogicEntitys_LogicEntity_Class_SWFMODULE   Devm_LogicEntitys_LogicEntity_Class = 4109
	Devm_LogicEntitys_LogicEntity_Class_ECUMODULE   Devm_LogicEntitys_LogicEntity_Class = 4110
	Devm_LogicEntitys_LogicEntity_Class_ICUMODULE   Devm_LogicEntitys_LogicEntity_Class = 4111
	Devm_LogicEntitys_LogicEntity_Class_LFE         Devm_LogicEntitys_LogicEntity_Class = 4162
	Devm_LogicEntitys_LogicEntity_Class_CFMODULE    Devm_LogicEntitys_LogicEntity_Class = 4170
	Devm_LogicEntitys_LogicEntity_Class_LCD         Devm_LogicEntitys_LogicEntity_Class = 4181
	Devm_LogicEntitys_LogicEntity_Class_PEM         Devm_LogicEntitys_LogicEntity_Class = 5006
	Devm_LogicEntitys_LogicEntity_Class_CMUMODULE   Devm_LogicEntitys_LogicEntity_Class = 5010
	Devm_LogicEntitys_LogicEntity_Class_PIC         Devm_LogicEntitys_LogicEntity_Class = 5011
	Devm_LogicEntitys_LogicEntity_Class_TSU         Devm_LogicEntitys_LogicEntity_Class = 5012
	Devm_LogicEntitys_LogicEntity_Class_PM          Devm_LogicEntitys_LogicEntity_Class = 5032
)

var Devm_LogicEntitys_LogicEntity_Class_name = map[int32]string{
	0:    "Class_OTHER",
	1:    "Class_CHASSIS",
	4:    "Class_MPUMODULE",
	5:    "Class_LPUMODULE",
	6:    "Class_SFUMODULE",
	7:    "Class_CLOCKMODULE",
	9:    "Class_CARDMODULE",
	10:   "Class_PORT",
	16:   "Class_FAN",
	17:   "Class_POWERSUPPLY",
	18:   "Class_CONTAINER",
	4108: "Class_PPMODULE",
	4109: "Class_SWFMODULE",
	4110: "Class_ECUMODULE",
	4111: "Class_ICUMODULE",
	4162: "Class_LFE",
	4170: "Class_CFMODULE",
	4181: "Class_LCD",
	5006: "Class_PEM",
	5010: "Class_CMUMODULE",
	5011: "Class_PIC",
	5012: "Class_TSU",
	5032: "Class_PM",
}

var Devm_LogicEntitys_LogicEntity_Class_value = map[string]int32{
	"Class_OTHER":       0,
	"Class_CHASSIS":     1,
	"Class_MPUMODULE":   4,
	"Class_LPUMODULE":   5,
	"Class_SFUMODULE":   6,
	"Class_CLOCKMODULE": 7,
	"Class_CARDMODULE":  9,
	"Class_PORT":        10,
	"Class_FAN":         16,
	"Class_POWERSUPPLY": 17,
	"Class_CONTAINER":   18,
	"Class_PPMODULE":    4108,
	"Class_SWFMODULE":   4109,
	"Class_ECUMODULE":   4110,
	"Class_ICUMODULE":   4111,
	"Class_LFE":         4162,
	"Class_CFMODULE":    4170,
	"Class_LCD":         4181,
	"Class_PEM":         5006,
	"Class_CMUMODULE":   5010,
	"Class_PIC":         5011,
	"Class_TSU":         5012,
	"Class_PM":          5032,
}

func (x Devm_LogicEntitys_LogicEntity_Class) String() string {
	return proto.EnumName(Devm_LogicEntitys_LogicEntity_Class_name, int32(x))
}

func (Devm_LogicEntitys_LogicEntity_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 1, 0, 0}
}

type Devm_LogicEntitys_LogicEntity_VendorType int32

const (
	Devm_LogicEntitys_LogicEntity_VendorType_UNKNOWN                 Devm_LogicEntitys_LogicEntity_VendorType = 0
	Devm_LogicEntitys_LogicEntity_VendorType_CHASSIS                 Devm_LogicEntitys_LogicEntity_VendorType = 3
	Devm_LogicEntitys_LogicEntity_VendorType_BOARDSLOT               Devm_LogicEntitys_LogicEntity_VendorType = 4
	Devm_LogicEntitys_LogicEntity_VendorType_MPUSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 5
	Devm_LogicEntitys_LogicEntity_VendorType_LPUSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 6
	Devm_LogicEntitys_LogicEntity_VendorType_SFUSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 7
	Devm_LogicEntitys_LogicEntity_VendorType_ICUSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 8
	Devm_LogicEntitys_LogicEntity_VendorType_ECUSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 9
	Devm_LogicEntitys_LogicEntity_VendorType_CLKSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 10
	Devm_LogicEntitys_LogicEntity_VendorType_FANSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 11
	Devm_LogicEntitys_LogicEntity_VendorType_POWERSLOT               Devm_LogicEntitys_LogicEntity_VendorType = 12
	Devm_LogicEntitys_LogicEntity_VendorType_PICSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 13
	Devm_LogicEntitys_LogicEntity_VendorType_OFCSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 14
	Devm_LogicEntitys_LogicEntity_VendorType_LCDSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 15
	Devm_LogicEntitys_LogicEntity_VendorType_CFCARDSLOT              Devm_LogicEntitys_LogicEntity_VendorType = 16
	Devm_LogicEntitys_LogicEntity_VendorType_CMUSLOT                 Devm_LogicEntitys_LogicEntity_VendorType = 17
	Devm_LogicEntitys_LogicEntity_VendorType_FNAME8090UNKNOWN        Devm_LogicEntitys_LogicEntity_VendorType = 18
	Devm_LogicEntitys_LogicEntity_VendorType_FNAME8090WHOLE          Devm_LogicEntitys_LogicEntity_VendorType = 19
	Devm_LogicEntitys_LogicEntity_VendorType_FNAME8090NE5000EX       Devm_LogicEntitys_LogicEntity_VendorType = 20
	Devm_LogicEntitys_LogicEntity_VendorType_FNAME8090CLUSTERCENTRAL Devm_LogicEntitys_LogicEntity_VendorType = 21
	Devm_LogicEntitys_LogicEntity_VendorType_FNAME8090NE5000EXX_VB   Devm_LogicEntitys_LogicEntity_VendorType = 22
	Devm_LogicEntitys_LogicEntity_VendorType_CHASSIS1                Devm_LogicEntitys_LogicEntity_VendorType = 24
	Devm_LogicEntitys_LogicEntity_VendorType_CHASSIS2                Devm_LogicEntitys_LogicEntity_VendorType = 25
	Devm_LogicEntitys_LogicEntity_VendorType_CCCCHASSIS              Devm_LogicEntitys_LogicEntity_VendorType = 26
	Devm_LogicEntitys_LogicEntity_VendorType_CE585048T4S2QEI         Devm_LogicEntitys_LogicEntity_VendorType = 27
	Devm_LogicEntitys_LogicEntity_VendorType_CE685048S4QEI           Devm_LogicEntitys_LogicEntity_VendorType = 28
	Devm_LogicEntitys_LogicEntity_VendorType_CE685048T4QEI           Devm_LogicEntitys_LogicEntity_VendorType = 29
	Devm_LogicEntitys_LogicEntity_VendorType_CR52MPUA                Devm_LogicEntitys_LogicEntity_VendorType = 30
	Devm_LogicEntitys_LogicEntity_VendorType_CR52MPUB                Devm_LogicEntitys_LogicEntity_VendorType = 31
	Devm_LogicEntitys_LogicEntity_VendorType_CR55MPUA                Devm_LogicEntitys_LogicEntity_VendorType = 32
	Devm_LogicEntitys_LogicEntity_VendorType_C55MPUA                 Devm_LogicEntitys_LogicEntity_VendorType = 33
	Devm_LogicEntitys_LogicEntity_VendorType_C56MPUC                 Devm_LogicEntitys_LogicEntity_VendorType = 34
	Devm_LogicEntitys_LogicEntity_VendorType_CR55MPUAB               Devm_LogicEntitys_LogicEntity_VendorType = 35
	Devm_LogicEntitys_LogicEntity_VendorType_CR56RPUA                Devm_LogicEntitys_LogicEntity_VendorType = 36
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUA                Devm_LogicEntitys_LogicEntity_VendorType = 37
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUB                Devm_LogicEntitys_LogicEntity_VendorType = 38
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUC                Devm_LogicEntitys_LogicEntity_VendorType = 39
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUE                Devm_LogicEntitys_LogicEntity_VendorType = 40
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUR                Devm_LogicEntitys_LogicEntity_VendorType = 41
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUF                Devm_LogicEntitys_LogicEntity_VendorType = 42
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUG                Devm_LogicEntitys_LogicEntity_VendorType = 43
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUH                Devm_LogicEntitys_LogicEntity_VendorType = 44
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUI                Devm_LogicEntitys_LogicEntity_VendorType = 45
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUK                Devm_LogicEntitys_LogicEntity_VendorType = 46
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUM                Devm_LogicEntitys_LogicEntity_VendorType = 47
	Devm_LogicEntitys_LogicEntity_VendorType_CR52LPUN                Devm_LogicEntitys_LogicEntity_VendorType = 48
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SPUC                Devm_LogicEntitys_LogicEntity_VendorType = 49
	Devm_LogicEntitys_LogicEntity_VendorType_CR56LPUF100A            Devm_LogicEntitys_LogicEntity_VendorType = 50
	Devm_LogicEntitys_LogicEntity_VendorType_CR56LPUF100B            Devm_LogicEntitys_LogicEntity_VendorType = 51
	Devm_LogicEntitys_LogicEntity_VendorType_CR56LPUI100A            Devm_LogicEntitys_LogicEntity_VendorType = 52
	Devm_LogicEntitys_LogicEntity_VendorType_CR56LPUI100B            Devm_LogicEntitys_LogicEntity_VendorType = 53
	Devm_LogicEntitys_LogicEntity_VendorType_CR56LPUI100C            Devm_LogicEntitys_LogicEntity_VendorType = 54
	Devm_LogicEntitys_LogicEntity_VendorType_CR56LPUF200A            Devm_LogicEntitys_LogicEntity_VendorType = 55
	Devm_LogicEntitys_LogicEntity_VendorType_RNRLPUB                 Devm_LogicEntitys_LogicEntity_VendorType = 56
	Devm_LogicEntitys_LogicEntity_VendorType_RNRLPUD                 Devm_LogicEntitys_LogicEntity_VendorType = 57
	Devm_LogicEntitys_LogicEntity_VendorType_RNRLPUF                 Devm_LogicEntitys_LogicEntity_VendorType = 58
	Devm_LogicEntitys_LogicEntity_VendorType_RNRNS                   Devm_LogicEntitys_LogicEntity_VendorType = 59
	Devm_LogicEntitys_LogicEntity_VendorType_RNRGRE                  Devm_LogicEntitys_LogicEntity_VendorType = 60
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SFUA                Devm_LogicEntitys_LogicEntity_VendorType = 61
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SRUA                Devm_LogicEntitys_LogicEntity_VendorType = 62
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SFUD                Devm_LogicEntitys_LogicEntity_VendorType = 63
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SFUF                Devm_LogicEntitys_LogicEntity_VendorType = 64
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SFUG                Devm_LogicEntitys_LogicEntity_VendorType = 65
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SFUC                Devm_LogicEntitys_LogicEntity_VendorType = 66
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SFEA                Devm_LogicEntitys_LogicEntity_VendorType = 67
	Devm_LogicEntitys_LogicEntity_VendorType_CR52KX_SFEA             Devm_LogicEntitys_LogicEntity_VendorType = 68
	Devm_LogicEntitys_LogicEntity_VendorType_CR55SFUA                Devm_LogicEntitys_LogicEntity_VendorType = 69
	Devm_LogicEntitys_LogicEntity_VendorType_CR55ECUA                Devm_LogicEntitys_LogicEntity_VendorType = 70
	Devm_LogicEntitys_LogicEntity_VendorType_CR55CX_ECUA             Devm_LogicEntitys_LogicEntity_VendorType = 71
	Devm_LogicEntitys_LogicEntity_VendorType_CR55ICUA                Devm_LogicEntitys_LogicEntity_VendorType = 72
	Devm_LogicEntitys_LogicEntity_VendorType_CR56SFUF100B            Devm_LogicEntitys_LogicEntity_VendorType = 73
	Devm_LogicEntitys_LogicEntity_VendorType_CR55SFUI100A            Devm_LogicEntitys_LogicEntity_VendorType = 74
	Devm_LogicEntitys_LogicEntity_VendorType_CR56SFUF100C            Devm_LogicEntitys_LogicEntity_VendorType = 75
	Devm_LogicEntitys_LogicEntity_VendorType_CR56SFU200A             Devm_LogicEntitys_LogicEntity_VendorType = 76
	Devm_LogicEntitys_LogicEntity_VendorType_CR55ECU100A             Devm_LogicEntitys_LogicEntity_VendorType = 77
	Devm_LogicEntitys_LogicEntity_VendorType_CR52SFEB                Devm_LogicEntitys_LogicEntity_VendorType = 78
	Devm_LogicEntitys_LogicEntity_VendorType_DE51SRU1A               Devm_LogicEntitys_LogicEntity_VendorType = 79
	Devm_LogicEntitys_LogicEntity_VendorType_DE51SRU1B               Devm_LogicEntitys_LogicEntity_VendorType = 80
	Devm_LogicEntitys_LogicEntity_VendorType_DE51SRU1C               Devm_LogicEntitys_LogicEntity_VendorType = 81
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DSFUFA06C            Devm_LogicEntitys_LogicEntity_VendorType = 82
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DSFUIK060            Devm_LogicEntitys_LogicEntity_VendorType = 83
	Devm_LogicEntitys_LogicEntity_VendorType_BOOTROM                 Devm_LogicEntitys_LogicEntity_VendorType = 84
	Devm_LogicEntitys_LogicEntity_VendorType_FLASH                   Devm_LogicEntitys_LogicEntity_VendorType = 85
	Devm_LogicEntitys_LogicEntity_VendorType_EPLD1                   Devm_LogicEntitys_LogicEntity_VendorType = 86
	Devm_LogicEntitys_LogicEntity_VendorType_EPLD2                   Devm_LogicEntitys_LogicEntity_VendorType = 87
	Devm_LogicEntitys_LogicEntity_VendorType_CR52E1XX                Devm_LogicEntitys_LogicEntity_VendorType = 88
	Devm_LogicEntitys_LogicEntity_VendorType_CR52W1XX                Devm_LogicEntitys_LogicEntity_VendorType = 89
	Devm_LogicEntitys_LogicEntity_VendorType_CR52EAGF                Devm_LogicEntitys_LogicEntity_VendorType = 90
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P4UF                Devm_LogicEntitys_LogicEntity_VendorType = 91
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P1XX                Devm_LogicEntitys_LogicEntity_VendorType = 92
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P4HF                Devm_LogicEntitys_LogicEntity_VendorType = 93
	Devm_LogicEntitys_LogicEntity_VendorType_CR52E2XX                Devm_LogicEntitys_LogicEntity_VendorType = 94
	Devm_LogicEntitys_LogicEntity_VendorType_CR52W2XX                Devm_LogicEntitys_LogicEntity_VendorType = 95
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P2XX                Devm_LogicEntitys_LogicEntity_VendorType = 96
	Devm_LogicEntitys_LogicEntity_VendorType_CR52EMGE                Devm_LogicEntitys_LogicEntity_VendorType = 97
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P8CF                Devm_LogicEntitys_LogicEntity_VendorType = 98
	Devm_LogicEntitys_LogicEntity_VendorType_CR52EFGE                Devm_LogicEntitys_LogicEntity_VendorType = 99
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P1UF                Devm_LogicEntitys_LogicEntity_VendorType = 100
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P2UF                Devm_LogicEntitys_LogicEntity_VendorType = 101
	Devm_LogicEntitys_LogicEntity_VendorType_CR52E5GF                Devm_LogicEntitys_LogicEntity_VendorType = 102
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P4CF                Devm_LogicEntitys_LogicEntity_VendorType = 103
	Devm_LogicEntitys_LogicEntity_VendorType_CR53P1MZ                Devm_LogicEntitys_LogicEntity_VendorType = 104
	Devm_LogicEntitys_LogicEntity_VendorType_CR52D1MV                Devm_LogicEntitys_LogicEntity_VendorType = 105
	Devm_LogicEntitys_LogicEntity_VendorType_CR52E4XX                Devm_LogicEntitys_LogicEntity_VendorType = 106
	Devm_LogicEntitys_LogicEntity_VendorType_CR56P2XX                Devm_LogicEntitys_LogicEntity_VendorType = 107
	Devm_LogicEntitys_LogicEntity_VendorType_CR56L2XX                Devm_LogicEntitys_LogicEntity_VendorType = 108
	Devm_LogicEntitys_LogicEntity_VendorType_CR56E2XX                Devm_LogicEntitys_LogicEntity_VendorType = 109
	Devm_LogicEntitys_LogicEntity_VendorType_CR56D2XX                Devm_LogicEntitys_LogicEntity_VendorType = 110
	Devm_LogicEntitys_LogicEntity_VendorType_CR56L5XX                Devm_LogicEntitys_LogicEntity_VendorType = 111
	Devm_LogicEntitys_LogicEntity_VendorType_CR56E5XX                Devm_LogicEntitys_LogicEntity_VendorType = 112
	Devm_LogicEntitys_LogicEntity_VendorType_CR56P1MZ                Devm_LogicEntitys_LogicEntity_VendorType = 113
	Devm_LogicEntitys_LogicEntity_VendorType_CR56E1NC                Devm_LogicEntitys_LogicEntity_VendorType = 114
	Devm_LogicEntitys_LogicEntity_VendorType_CR56EFGF                Devm_LogicEntitys_LogicEntity_VendorType = 115
	Devm_LogicEntitys_LogicEntity_VendorType_CR52EKGFY               Devm_LogicEntitys_LogicEntity_VendorType = 116
	Devm_LogicEntitys_LogicEntity_VendorType_CR57EFGF                Devm_LogicEntitys_LogicEntity_VendorType = 117
	Devm_LogicEntitys_LogicEntity_VendorType_CR56E1NCC               Devm_LogicEntitys_LogicEntity_VendorType = 118
	Devm_LogicEntitys_LogicEntity_VendorType_CR52P1XZ                Devm_LogicEntitys_LogicEntity_VendorType = 119
	Devm_LogicEntitys_LogicEntity_VendorType_CR52E1XZ                Devm_LogicEntitys_LogicEntity_VendorType = 120
	Devm_LogicEntitys_LogicEntity_VendorType_CR52W1XZ                Devm_LogicEntitys_LogicEntity_VendorType = 121
	Devm_LogicEntitys_LogicEntity_VendorType_SPU                     Devm_LogicEntitys_LogicEntity_VendorType = 122
	Devm_LogicEntitys_LogicEntity_VendorType_TSUA                    Devm_LogicEntitys_LogicEntity_VendorType = 123
	Devm_LogicEntitys_LogicEntity_VendorType_CR56E1MC                Devm_LogicEntitys_LogicEntity_VendorType = 124
	Devm_LogicEntitys_LogicEntity_VendorType_CR56LAXFA               Devm_LogicEntitys_LogicEntity_VendorType = 125
	Devm_LogicEntitys_LogicEntity_VendorType_CR55OFCA                Devm_LogicEntitys_LogicEntity_VendorType = 126
	Devm_LogicEntitys_LogicEntity_VendorType_CR55CX_OFCA             Devm_LogicEntitys_LogicEntity_VendorType = 127
	Devm_LogicEntitys_LogicEntity_VendorType_CR52OFCB                Devm_LogicEntitys_LogicEntity_VendorType = 128
	Devm_LogicEntitys_LogicEntity_VendorType_CR55OFC40               Devm_LogicEntitys_LogicEntity_VendorType = 129
	Devm_LogicEntitys_LogicEntity_VendorType_CR55OFC100A             Devm_LogicEntitys_LogicEntity_VendorType = 130
	Devm_LogicEntitys_LogicEntity_VendorType_CR55OFC100B             Devm_LogicEntitys_LogicEntity_VendorType = 131
	Devm_LogicEntitys_LogicEntity_VendorType_CR52OFCV                Devm_LogicEntitys_LogicEntity_VendorType = 132
	Devm_LogicEntitys_LogicEntity_VendorType_ETH                     Devm_LogicEntitys_LogicEntity_VendorType = 133
	Devm_LogicEntitys_LogicEntity_VendorType_POS                     Devm_LogicEntitys_LogicEntity_VendorType = 134
	Devm_LogicEntitys_LogicEntity_VendorType_GE                      Devm_LogicEntitys_LogicEntity_VendorType = 135
	Devm_LogicEntitys_LogicEntity_VendorType_X_10GE                  Devm_LogicEntitys_LogicEntity_VendorType = 136
	Devm_LogicEntitys_LogicEntity_VendorType_GF                      Devm_LogicEntitys_LogicEntity_VendorType = 137
	Devm_LogicEntitys_LogicEntity_VendorType_X_10GF                  Devm_LogicEntitys_LogicEntity_VendorType = 138
	Devm_LogicEntitys_LogicEntity_VendorType_X_40GF                  Devm_LogicEntitys_LogicEntity_VendorType = 139
	Devm_LogicEntitys_LogicEntity_VendorType_X_10GFCOM               Devm_LogicEntitys_LogicEntity_VendorType = 140
	Devm_LogicEntitys_LogicEntity_VendorType_X_40GFSPLIT             Devm_LogicEntitys_LogicEntity_VendorType = 141
	Devm_LogicEntitys_LogicEntity_VendorType_VSR                     Devm_LogicEntitys_LogicEntity_VendorType = 142
	Devm_LogicEntitys_LogicEntity_VendorType_LFE                     Devm_LogicEntitys_LogicEntity_VendorType = 143
	Devm_LogicEntitys_LogicEntity_VendorType_POWER                   Devm_LogicEntitys_LogicEntity_VendorType = 144
	Devm_LogicEntitys_LogicEntity_VendorType_CLOCK                   Devm_LogicEntitys_LogicEntity_VendorType = 145
	Devm_LogicEntitys_LogicEntity_VendorType_FAN                     Devm_LogicEntitys_LogicEntity_VendorType = 146
	Devm_LogicEntitys_LogicEntity_VendorType_LCD                     Devm_LogicEntitys_LogicEntity_VendorType = 147
	Devm_LogicEntitys_LogicEntity_VendorType_CFCARD                  Devm_LogicEntitys_LogicEntity_VendorType = 148
	Devm_LogicEntitys_LogicEntity_VendorType_CMU                     Devm_LogicEntitys_LogicEntity_VendorType = 149
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00EKGF60            Devm_LogicEntitys_LogicEntity_VendorType = 150
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00P4XX60            Devm_LogicEntitys_LogicEntity_VendorType = 151
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00P8UF60            Devm_LogicEntitys_LogicEntity_VendorType = 152
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00E4XX60            Devm_LogicEntitys_LogicEntity_VendorType = 153
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00W4XX60            Devm_LogicEntitys_LogicEntity_VendorType = 154
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DLPUFA060            Devm_LogicEntitys_LogicEntity_VendorType = 155
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00LEXF60            Devm_LogicEntitys_LogicEntity_VendorType = 156
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00E2NC60            Devm_LogicEntitys_LogicEntity_VendorType = 157
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DE1NLAX60            Devm_LogicEntitys_LogicEntity_VendorType = 158
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DSFEBA06B            Devm_LogicEntitys_LogicEntity_VendorType = 159
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D0MPUB460            Devm_LogicEntitys_LogicEntity_VendorType = 160
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DSFUFA06B            Devm_LogicEntitys_LogicEntity_VendorType = 161
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DSFUIE060            Devm_LogicEntitys_LogicEntity_VendorType = 162
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D0MPUA450            Devm_LogicEntitys_LogicEntity_VendorType = 163
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DECUFA050            Devm_LogicEntitys_LogicEntity_VendorType = 164
	Devm_LogicEntitys_LogicEntity_VendorType_CR5DSFUIA050            Devm_LogicEntitys_LogicEntity_VendorType = 165
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00L5XX60            Devm_LogicEntitys_LogicEntity_VendorType = 166
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00E5XX60            Devm_LogicEntitys_LogicEntity_VendorType = 167
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00L2XX60            Devm_LogicEntitys_LogicEntity_VendorType = 168
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00E2XX60            Devm_LogicEntitys_LogicEntity_VendorType = 169
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00EFGF60            Devm_LogicEntitys_LogicEntity_VendorType = 170
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00P1MZ60            Devm_LogicEntitys_LogicEntity_VendorType = 171
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00P2XX60            Devm_LogicEntitys_LogicEntity_VendorType = 172
	Devm_LogicEntitys_LogicEntity_VendorType_CR5M00E1MC60            Devm_LogicEntitys_LogicEntity_VendorType = 173
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00E1NC60            Devm_LogicEntitys_LogicEntity_VendorType = 174
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D00LAXX60            Devm_LogicEntitys_LogicEntity_VendorType = 175
	Devm_LogicEntitys_LogicEntity_VendorType_CR5D0OFCA060            Devm_LogicEntitys_LogicEntity_VendorType = 176
	Devm_LogicEntitys_LogicEntity_VendorType_T1XCS                   Devm_LogicEntitys_LogicEntity_VendorType = 177
	Devm_LogicEntitys_LogicEntity_VendorType_T1EXL2                  Devm_LogicEntitys_LogicEntity_VendorType = 178
	Devm_LogicEntitys_LogicEntity_VendorType_T1EX12                  Devm_LogicEntitys_LogicEntity_VendorType = 179
	Devm_LogicEntitys_LogicEntity_VendorType_T1EX8                   Devm_LogicEntitys_LogicEntity_VendorType = 180
	Devm_LogicEntitys_LogicEntity_VendorType_T1EH1                   Devm_LogicEntitys_LogicEntity_VendorType = 181
	Devm_LogicEntitys_LogicEntity_VendorType_T1EG24                  Devm_LogicEntitys_LogicEntity_VendorType = 182
	Devm_LogicEntitys_LogicEntity_VendorType_T1CH1                   Devm_LogicEntitys_LogicEntity_VendorType = 183
	Devm_LogicEntitys_LogicEntity_VendorType_T1CQ4                   Devm_LogicEntitys_LogicEntity_VendorType = 184
	Devm_LogicEntitys_LogicEntity_VendorType_T1SCA                   Devm_LogicEntitys_LogicEntity_VendorType = 185
	Devm_LogicEntitys_LogicEntity_VendorType_T1FAN                   Devm_LogicEntitys_LogicEntity_VendorType = 186
	Devm_LogicEntitys_LogicEntity_VendorType_T1PIU                   Devm_LogicEntitys_LogicEntity_VendorType = 187
	Devm_LogicEntitys_LogicEntity_VendorType_T1EFI                   Devm_LogicEntitys_LogicEntity_VendorType = 188
	Devm_LogicEntitys_LogicEntity_VendorType_XCA                     Devm_LogicEntitys_LogicEntity_VendorType = 189
	Devm_LogicEntitys_LogicEntity_VendorType_TNU1SCC                 Devm_LogicEntitys_LogicEntity_VendorType = 190
	Devm_LogicEntitys_LogicEntity_VendorType_C52MPUA                 Devm_LogicEntitys_LogicEntity_VendorType = 191
	Devm_LogicEntitys_LogicEntity_VendorType_C52MPUB                 Devm_LogicEntitys_LogicEntity_VendorType = 192
	Devm_LogicEntitys_LogicEntity_VendorType_LPUE                    Devm_LogicEntitys_LogicEntity_VendorType = 193
	Devm_LogicEntitys_LogicEntity_VendorType_LPUF                    Devm_LogicEntitys_LogicEntity_VendorType = 194
	Devm_LogicEntitys_LogicEntity_VendorType_TPA1EFI                 Devm_LogicEntitys_LogicEntity_VendorType = 195
	Devm_LogicEntitys_LogicEntity_VendorType_TNT1EX8                 Devm_LogicEntitys_LogicEntity_VendorType = 196
	Devm_LogicEntitys_LogicEntity_VendorType_OTHER                   Devm_LogicEntitys_LogicEntity_VendorType = 197
)

var Devm_LogicEntitys_LogicEntity_VendorType_name = map[int32]string{
	0:   "VendorType_UNKNOWN",
	3:   "VendorType_CHASSIS",
	4:   "VendorType_BOARDSLOT",
	5:   "VendorType_MPUSLOT",
	6:   "VendorType_LPUSLOT",
	7:   "VendorType_SFUSLOT",
	8:   "VendorType_ICUSLOT",
	9:   "VendorType_ECUSLOT",
	10:  "VendorType_CLKSLOT",
	11:  "VendorType_FANSLOT",
	12:  "VendorType_POWERSLOT",
	13:  "VendorType_PICSLOT",
	14:  "VendorType_OFCSLOT",
	15:  "VendorType_LCDSLOT",
	16:  "VendorType_CFCARDSLOT",
	17:  "VendorType_CMUSLOT",
	18:  "VendorType_FNAME8090UNKNOWN",
	19:  "VendorType_FNAME8090WHOLE",
	20:  "VendorType_FNAME8090NE5000EX",
	21:  "VendorType_FNAME8090CLUSTERCENTRAL",
	22:  "VendorType_FNAME8090NE5000EXX_VB",
	24:  "VendorType_CHASSIS1",
	25:  "VendorType_CHASSIS2",
	26:  "VendorType_CCCCHASSIS",
	27:  "VendorType_CE585048T4S2QEI",
	28:  "VendorType_CE685048S4QEI",
	29:  "VendorType_CE685048T4QEI",
	30:  "VendorType_CR52MPUA",
	31:  "VendorType_CR52MPUB",
	32:  "VendorType_CR55MPUA",
	33:  "VendorType_C55MPUA",
	34:  "VendorType_C56MPUC",
	35:  "VendorType_CR55MPUAB",
	36:  "VendorType_CR56RPUA",
	37:  "VendorType_CR52LPUA",
	38:  "VendorType_CR52LPUB",
	39:  "VendorType_CR52LPUC",
	40:  "VendorType_CR52LPUE",
	41:  "VendorType_CR52LPUR",
	42:  "VendorType_CR52LPUF",
	43:  "VendorType_CR52LPUG",
	44:  "VendorType_CR52LPUH",
	45:  "VendorType_CR52LPUI",
	46:  "VendorType_CR52LPUK",
	47:  "VendorType_CR52LPUM",
	48:  "VendorType_CR52LPUN",
	49:  "VendorType_CR52SPUC",
	50:  "VendorType_CR56LPUF100A",
	51:  "VendorType_CR56LPUF100B",
	52:  "VendorType_CR56LPUI100A",
	53:  "VendorType_CR56LPUI100B",
	54:  "VendorType_CR56LPUI100C",
	55:  "VendorType_CR56LPUF200A",
	56:  "VendorType_RNRLPUB",
	57:  "VendorType_RNRLPUD",
	58:  "VendorType_RNRLPUF",
	59:  "VendorType_RNRNS",
	60:  "VendorType_RNRGRE",
	61:  "VendorType_CR52SFUA",
	62:  "VendorType_CR52SRUA",
	63:  "VendorType_CR52SFUD",
	64:  "VendorType_CR52SFUF",
	65:  "VendorType_CR52SFUG",
	66:  "VendorType_CR52SFUC",
	67:  "VendorType_CR52SFEA",
	68:  "VendorType_CR52KX_SFEA",
	69:  "VendorType_CR55SFUA",
	70:  "VendorType_CR55ECUA",
	71:  "VendorType_CR55CX_ECUA",
	72:  "VendorType_CR55ICUA",
	73:  "VendorType_CR56SFUF100B",
	74:  "VendorType_CR55SFUI100A",
	75:  "VendorType_CR56SFUF100C",
	76:  "VendorType_CR56SFU200A",
	77:  "VendorType_CR55ECU100A",
	78:  "VendorType_CR52SFEB",
	79:  "VendorType_DE51SRU1A",
	80:  "VendorType_DE51SRU1B",
	81:  "VendorType_DE51SRU1C",
	82:  "VendorType_CR5DSFUFA06C",
	83:  "VendorType_CR5DSFUIK060",
	84:  "VendorType_BOOTROM",
	85:  "VendorType_FLASH",
	86:  "VendorType_EPLD1",
	87:  "VendorType_EPLD2",
	88:  "VendorType_CR52E1XX",
	89:  "VendorType_CR52W1XX",
	90:  "VendorType_CR52EAGF",
	91:  "VendorType_CR52P4UF",
	92:  "VendorType_CR52P1XX",
	93:  "VendorType_CR52P4HF",
	94:  "VendorType_CR52E2XX",
	95:  "VendorType_CR52W2XX",
	96:  "VendorType_CR52P2XX",
	97:  "VendorType_CR52EMGE",
	98:  "VendorType_CR52P8CF",
	99:  "VendorType_CR52EFGE",
	100: "VendorType_CR52P1UF",
	101: "VendorType_CR52P2UF",
	102: "VendorType_CR52E5GF",
	103: "VendorType_CR52P4CF",
	104: "VendorType_CR53P1MZ",
	105: "VendorType_CR52D1MV",
	106: "VendorType_CR52E4XX",
	107: "VendorType_CR56P2XX",
	108: "VendorType_CR56L2XX",
	109: "VendorType_CR56E2XX",
	110: "VendorType_CR56D2XX",
	111: "VendorType_CR56L5XX",
	112: "VendorType_CR56E5XX",
	113: "VendorType_CR56P1MZ",
	114: "VendorType_CR56E1NC",
	115: "VendorType_CR56EFGF",
	116: "VendorType_CR52EKGFY",
	117: "VendorType_CR57EFGF",
	118: "VendorType_CR56E1NCC",
	119: "VendorType_CR52P1XZ",
	120: "VendorType_CR52E1XZ",
	121: "VendorType_CR52W1XZ",
	122: "VendorType_SPU",
	123: "VendorType_TSUA",
	124: "VendorType_CR56E1MC",
	125: "VendorType_CR56LAXFA",
	126: "VendorType_CR55OFCA",
	127: "VendorType_CR55CX_OFCA",
	128: "VendorType_CR52OFCB",
	129: "VendorType_CR55OFC40",
	130: "VendorType_CR55OFC100A",
	131: "VendorType_CR55OFC100B",
	132: "VendorType_CR52OFCV",
	133: "VendorType_ETH",
	134: "VendorType_POS",
	135: "VendorType_GE",
	136: "VendorType_X_10GE",
	137: "VendorType_GF",
	138: "VendorType_X_10GF",
	139: "VendorType_X_40GF",
	140: "VendorType_X_10GFCOM",
	141: "VendorType_X_40GFSPLIT",
	142: "VendorType_VSR",
	143: "VendorType_LFE",
	144: "VendorType_POWER",
	145: "VendorType_CLOCK",
	146: "VendorType_FAN",
	147: "VendorType_LCD",
	148: "VendorType_CFCARD",
	149: "VendorType_CMU",
	150: "VendorType_CR5D00EKGF60",
	151: "VendorType_CR5D00P4XX60",
	152: "VendorType_CR5D00P8UF60",
	153: "VendorType_CR5D00E4XX60",
	154: "VendorType_CR5D00W4XX60",
	155: "VendorType_CR5DLPUFA060",
	156: "VendorType_CR5D00LEXF60",
	157: "VendorType_CR5D00E2NC60",
	158: "VendorType_CR5DE1NLAX60",
	159: "VendorType_CR5DSFEBA06B",
	160: "VendorType_CR5D0MPUB460",
	161: "VendorType_CR5DSFUFA06B",
	162: "VendorType_CR5DSFUIE060",
	163: "VendorType_CR5D0MPUA450",
	164: "VendorType_CR5DECUFA050",
	165: "VendorType_CR5DSFUIA050",
	166: "VendorType_CR5D00L5XX60",
	167: "VendorType_CR5D00E5XX60",
	168: "VendorType_CR5D00L2XX60",
	169: "VendorType_CR5D00E2XX60",
	170: "VendorType_CR5D00EFGF60",
	171: "VendorType_CR5D00P1MZ60",
	172: "VendorType_CR5D00P2XX60",
	173: "VendorType_CR5M00E1MC60",
	174: "VendorType_CR5D00E1NC60",
	175: "VendorType_CR5D00LAXX60",
	176: "VendorType_CR5D0OFCA060",
	177: "VendorType_T1XCS",
	178: "VendorType_T1EXL2",
	179: "VendorType_T1EX12",
	180: "VendorType_T1EX8",
	181: "VendorType_T1EH1",
	182: "VendorType_T1EG24",
	183: "VendorType_T1CH1",
	184: "VendorType_T1CQ4",
	185: "VendorType_T1SCA",
	186: "VendorType_T1FAN",
	187: "VendorType_T1PIU",
	188: "VendorType_T1EFI",
	189: "VendorType_XCA",
	190: "VendorType_TNU1SCC",
	191: "VendorType_C52MPUA",
	192: "VendorType_C52MPUB",
	193: "VendorType_LPUE",
	194: "VendorType_LPUF",
	195: "VendorType_TPA1EFI",
	196: "VendorType_TNT1EX8",
	197: "VendorType_OTHER",
}

var Devm_LogicEntitys_LogicEntity_VendorType_value = map[string]int32{
	"VendorType_UNKNOWN":                 0,
	"VendorType_CHASSIS":                 3,
	"VendorType_BOARDSLOT":               4,
	"VendorType_MPUSLOT":                 5,
	"VendorType_LPUSLOT":                 6,
	"VendorType_SFUSLOT":                 7,
	"VendorType_ICUSLOT":                 8,
	"VendorType_ECUSLOT":                 9,
	"VendorType_CLKSLOT":                 10,
	"VendorType_FANSLOT":                 11,
	"VendorType_POWERSLOT":               12,
	"VendorType_PICSLOT":                 13,
	"VendorType_OFCSLOT":                 14,
	"VendorType_LCDSLOT":                 15,
	"VendorType_CFCARDSLOT":              16,
	"VendorType_CMUSLOT":                 17,
	"VendorType_FNAME8090UNKNOWN":        18,
	"VendorType_FNAME8090WHOLE":          19,
	"VendorType_FNAME8090NE5000EX":       20,
	"VendorType_FNAME8090CLUSTERCENTRAL": 21,
	"VendorType_FNAME8090NE5000EXX_VB":   22,
	"VendorType_CHASSIS1":                24,
	"VendorType_CHASSIS2":                25,
	"VendorType_CCCCHASSIS":              26,
	"VendorType_CE585048T4S2QEI":         27,
	"VendorType_CE685048S4QEI":           28,
	"VendorType_CE685048T4QEI":           29,
	"VendorType_CR52MPUA":                30,
	"VendorType_CR52MPUB":                31,
	"VendorType_CR55MPUA":                32,
	"VendorType_C55MPUA":                 33,
	"VendorType_C56MPUC":                 34,
	"VendorType_CR55MPUAB":               35,
	"VendorType_CR56RPUA":                36,
	"VendorType_CR52LPUA":                37,
	"VendorType_CR52LPUB":                38,
	"VendorType_CR52LPUC":                39,
	"VendorType_CR52LPUE":                40,
	"VendorType_CR52LPUR":                41,
	"VendorType_CR52LPUF":                42,
	"VendorType_CR52LPUG":                43,
	"VendorType_CR52LPUH":                44,
	"VendorType_CR52LPUI":                45,
	"VendorType_CR52LPUK":                46,
	"VendorType_CR52LPUM":                47,
	"VendorType_CR52LPUN":                48,
	"VendorType_CR52SPUC":                49,
	"VendorType_CR56LPUF100A":            50,
	"VendorType_CR56LPUF100B":            51,
	"VendorType_CR56LPUI100A":            52,
	"VendorType_CR56LPUI100B":            53,
	"VendorType_CR56LPUI100C":            54,
	"VendorType_CR56LPUF200A":            55,
	"VendorType_RNRLPUB":                 56,
	"VendorType_RNRLPUD":                 57,
	"VendorType_RNRLPUF":                 58,
	"VendorType_RNRNS":                   59,
	"VendorType_RNRGRE":                  60,
	"VendorType_CR52SFUA":                61,
	"VendorType_CR52SRUA":                62,
	"VendorType_CR52SFUD":                63,
	"VendorType_CR52SFUF":                64,
	"VendorType_CR52SFUG":                65,
	"VendorType_CR52SFUC":                66,
	"VendorType_CR52SFEA":                67,
	"VendorType_CR52KX_SFEA":             68,
	"VendorType_CR55SFUA":                69,
	"VendorType_CR55ECUA":                70,
	"VendorType_CR55CX_ECUA":             71,
	"VendorType_CR55ICUA":                72,
	"VendorType_CR56SFUF100B":            73,
	"VendorType_CR55SFUI100A":            74,
	"VendorType_CR56SFUF100C":            75,
	"VendorType_CR56SFU200A":             76,
	"VendorType_CR55ECU100A":             77,
	"VendorType_CR52SFEB":                78,
	"VendorType_DE51SRU1A":               79,
	"VendorType_DE51SRU1B":               80,
	"VendorType_DE51SRU1C":               81,
	"VendorType_CR5DSFUFA06C":            82,
	"VendorType_CR5DSFUIK060":            83,
	"VendorType_BOOTROM":                 84,
	"VendorType_FLASH":                   85,
	"VendorType_EPLD1":                   86,
	"VendorType_EPLD2":                   87,
	"VendorType_CR52E1XX":                88,
	"VendorType_CR52W1XX":                89,
	"VendorType_CR52EAGF":                90,
	"VendorType_CR52P4UF":                91,
	"VendorType_CR52P1XX":                92,
	"VendorType_CR52P4HF":                93,
	"VendorType_CR52E2XX":                94,
	"VendorType_CR52W2XX":                95,
	"VendorType_CR52P2XX":                96,
	"VendorType_CR52EMGE":                97,
	"VendorType_CR52P8CF":                98,
	"VendorType_CR52EFGE":                99,
	"VendorType_CR52P1UF":                100,
	"VendorType_CR52P2UF":                101,
	"VendorType_CR52E5GF":                102,
	"VendorType_CR52P4CF":                103,
	"VendorType_CR53P1MZ":                104,
	"VendorType_CR52D1MV":                105,
	"VendorType_CR52E4XX":                106,
	"VendorType_CR56P2XX":                107,
	"VendorType_CR56L2XX":                108,
	"VendorType_CR56E2XX":                109,
	"VendorType_CR56D2XX":                110,
	"VendorType_CR56L5XX":                111,
	"VendorType_CR56E5XX":                112,
	"VendorType_CR56P1MZ":                113,
	"VendorType_CR56E1NC":                114,
	"VendorType_CR56EFGF":                115,
	"VendorType_CR52EKGFY":               116,
	"VendorType_CR57EFGF":                117,
	"VendorType_CR56E1NCC":               118,
	"VendorType_CR52P1XZ":                119,
	"VendorType_CR52E1XZ":                120,
	"VendorType_CR52W1XZ":                121,
	"VendorType_SPU":                     122,
	"VendorType_TSUA":                    123,
	"VendorType_CR56E1MC":                124,
	"VendorType_CR56LAXFA":               125,
	"VendorType_CR55OFCA":                126,
	"VendorType_CR55CX_OFCA":             127,
	"VendorType_CR52OFCB":                128,
	"VendorType_CR55OFC40":               129,
	"VendorType_CR55OFC100A":             130,
	"VendorType_CR55OFC100B":             131,
	"VendorType_CR52OFCV":                132,
	"VendorType_ETH":                     133,
	"VendorType_POS":                     134,
	"VendorType_GE":                      135,
	"VendorType_X_10GE":                  136,
	"VendorType_GF":                      137,
	"VendorType_X_10GF":                  138,
	"VendorType_X_40GF":                  139,
	"VendorType_X_10GFCOM":               140,
	"VendorType_X_40GFSPLIT":             141,
	"VendorType_VSR":                     142,
	"VendorType_LFE":                     143,
	"VendorType_POWER":                   144,
	"VendorType_CLOCK":                   145,
	"VendorType_FAN":                     146,
	"VendorType_LCD":                     147,
	"VendorType_CFCARD":                  148,
	"VendorType_CMU":                     149,
	"VendorType_CR5D00EKGF60":            150,
	"VendorType_CR5D00P4XX60":            151,
	"VendorType_CR5D00P8UF60":            152,
	"VendorType_CR5D00E4XX60":            153,
	"VendorType_CR5D00W4XX60":            154,
	"VendorType_CR5DLPUFA060":            155,
	"VendorType_CR5D00LEXF60":            156,
	"VendorType_CR5D00E2NC60":            157,
	"VendorType_CR5DE1NLAX60":            158,
	"VendorType_CR5DSFEBA06B":            159,
	"VendorType_CR5D0MPUB460":            160,
	"VendorType_CR5DSFUFA06B":            161,
	"VendorType_CR5DSFUIE060":            162,
	"VendorType_CR5D0MPUA450":            163,
	"VendorType_CR5DECUFA050":            164,
	"VendorType_CR5DSFUIA050":            165,
	"VendorType_CR5D00L5XX60":            166,
	"VendorType_CR5D00E5XX60":            167,
	"VendorType_CR5D00L2XX60":            168,
	"VendorType_CR5D00E2XX60":            169,
	"VendorType_CR5D00EFGF60":            170,
	"VendorType_CR5D00P1MZ60":            171,
	"VendorType_CR5D00P2XX60":            172,
	"VendorType_CR5M00E1MC60":            173,
	"VendorType_CR5D00E1NC60":            174,
	"VendorType_CR5D00LAXX60":            175,
	"VendorType_CR5D0OFCA060":            176,
	"VendorType_T1XCS":                   177,
	"VendorType_T1EXL2":                  178,
	"VendorType_T1EX12":                  179,
	"VendorType_T1EX8":                   180,
	"VendorType_T1EH1":                   181,
	"VendorType_T1EG24":                  182,
	"VendorType_T1CH1":                   183,
	"VendorType_T1CQ4":                   184,
	"VendorType_T1SCA":                   185,
	"VendorType_T1FAN":                   186,
	"VendorType_T1PIU":                   187,
	"VendorType_T1EFI":                   188,
	"VendorType_XCA":                     189,
	"VendorType_TNU1SCC":                 190,
	"VendorType_C52MPUA":                 191,
	"VendorType_C52MPUB":                 192,
	"VendorType_LPUE":                    193,
	"VendorType_LPUF":                    194,
	"VendorType_TPA1EFI":                 195,
	"VendorType_TNT1EX8":                 196,
	"VendorType_OTHER":                   197,
}

func (x Devm_LogicEntitys_LogicEntity_VendorType) String() string {
	return proto.EnumName(Devm_LogicEntitys_LogicEntity_VendorType_name, int32(x))
}

func (Devm_LogicEntitys_LogicEntity_VendorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 1, 0, 1}
}

type Devm_LogicEntitys_LogicEntity_OperState int32

const (
	Devm_LogicEntitys_LogicEntity_OperState_UNKNOWN              Devm_LogicEntitys_LogicEntity_OperState = 0
	Devm_LogicEntitys_LogicEntity_OperState_NORMAL               Devm_LogicEntitys_LogicEntity_OperState = 1
	Devm_LogicEntitys_LogicEntity_OperState_FAULT                Devm_LogicEntitys_LogicEntity_OperState = 2
	Devm_LogicEntitys_LogicEntity_OperState_OFFLINE              Devm_LogicEntitys_LogicEntity_OperState = 3
	Devm_LogicEntitys_LogicEntity_OperState_NOTSUPPORTED         Devm_LogicEntitys_LogicEntity_OperState = 4
	Devm_LogicEntitys_LogicEntity_OperState_OPTICALNOTEQUIPPED   Devm_LogicEntitys_LogicEntity_OperState = 5
	Devm_LogicEntitys_LogicEntity_OperState_NOTINSTALL           Devm_LogicEntitys_LogicEntity_OperState = 6
	Devm_LogicEntitys_LogicEntity_OperState_WRONGTYPE            Devm_LogicEntitys_LogicEntity_OperState = 7
	Devm_LogicEntitys_LogicEntity_OperState_REGISTERED           Devm_LogicEntitys_LogicEntity_OperState = 8
	Devm_LogicEntitys_LogicEntity_OperState_UNREGISTERED         Devm_LogicEntitys_LogicEntity_OperState = 9
	Devm_LogicEntitys_LogicEntity_OperState_POWEROFF             Devm_LogicEntitys_LogicEntity_OperState = 10
	Devm_LogicEntitys_LogicEntity_OperState_PORTX_PHYSICALX_DOWN Devm_LogicEntitys_LogicEntity_OperState = 11
)

var Devm_LogicEntitys_LogicEntity_OperState_name = map[int32]string{
	0:  "OperState_UNKNOWN",
	1:  "OperState_NORMAL",
	2:  "OperState_FAULT",
	3:  "OperState_OFFLINE",
	4:  "OperState_NOTSUPPORTED",
	5:  "OperState_OPTICALNOTEQUIPPED",
	6:  "OperState_NOTINSTALL",
	7:  "OperState_WRONGTYPE",
	8:  "OperState_REGISTERED",
	9:  "OperState_UNREGISTERED",
	10: "OperState_POWEROFF",
	11: "OperState_PORTX_PHYSICALX_DOWN",
}

var Devm_LogicEntitys_LogicEntity_OperState_value = map[string]int32{
	"OperState_UNKNOWN":              0,
	"OperState_NORMAL":               1,
	"OperState_FAULT":                2,
	"OperState_OFFLINE":              3,
	"OperState_NOTSUPPORTED":         4,
	"OperState_OPTICALNOTEQUIPPED":   5,
	"OperState_NOTINSTALL":           6,
	"OperState_WRONGTYPE":            7,
	"OperState_REGISTERED":           8,
	"OperState_UNREGISTERED":         9,
	"OperState_POWEROFF":             10,
	"OperState_PORTX_PHYSICALX_DOWN": 11,
}

func (x Devm_LogicEntitys_LogicEntity_OperState) String() string {
	return proto.EnumName(Devm_LogicEntitys_LogicEntity_OperState_name, int32(x))
}

func (Devm_LogicEntitys_LogicEntity_OperState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 1, 0, 2}
}

type Devm_Chassiss_Chassis_CurrentRunMode int32

const (
	Devm_Chassiss_Chassis_CurrentRunMode_UNKNOWN Devm_Chassiss_Chassis_CurrentRunMode = 0
	Devm_Chassiss_Chassis_CurrentRunMode_SINGLE  Devm_Chassiss_Chassis_CurrentRunMode = 1
	Devm_Chassiss_Chassis_CurrentRunMode_CCCX_0  Devm_Chassiss_Chassis_CurrentRunMode = 2
	Devm_Chassiss_Chassis_CurrentRunMode_CCCX_1  Devm_Chassiss_Chassis_CurrentRunMode = 3
	Devm_Chassiss_Chassis_CurrentRunMode_CCCX_2  Devm_Chassiss_Chassis_CurrentRunMode = 4
)

var Devm_Chassiss_Chassis_CurrentRunMode_name = map[int32]string{
	0: "CurrentRunMode_UNKNOWN",
	1: "CurrentRunMode_SINGLE",
	2: "CurrentRunMode_CCCX_0",
	3: "CurrentRunMode_CCCX_1",
	4: "CurrentRunMode_CCCX_2",
}

var Devm_Chassiss_Chassis_CurrentRunMode_value = map[string]int32{
	"CurrentRunMode_UNKNOWN": 0,
	"CurrentRunMode_SINGLE":  1,
	"CurrentRunMode_CCCX_0":  2,
	"CurrentRunMode_CCCX_1":  3,
	"CurrentRunMode_CCCX_2":  4,
}

func (x Devm_Chassiss_Chassis_CurrentRunMode) String() string {
	return proto.EnumName(Devm_Chassiss_Chassis_CurrentRunMode_name, int32(x))
}

func (Devm_Chassiss_Chassis_CurrentRunMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 2, 0, 0}
}

type Devm_Chassiss_Chassis_NextRunMode int32

const (
	Devm_Chassiss_Chassis_NextRunMode_UNKNOWN Devm_Chassiss_Chassis_NextRunMode = 0
	Devm_Chassiss_Chassis_NextRunMode_SINGLE  Devm_Chassiss_Chassis_NextRunMode = 1
	Devm_Chassiss_Chassis_NextRunMode_CCCX_0  Devm_Chassiss_Chassis_NextRunMode = 2
	Devm_Chassiss_Chassis_NextRunMode_CCCX_1  Devm_Chassiss_Chassis_NextRunMode = 3
	Devm_Chassiss_Chassis_NextRunMode_CCCX_2  Devm_Chassiss_Chassis_NextRunMode = 4
)

var Devm_Chassiss_Chassis_NextRunMode_name = map[int32]string{
	0: "NextRunMode_UNKNOWN",
	1: "NextRunMode_SINGLE",
	2: "NextRunMode_CCCX_0",
	3: "NextRunMode_CCCX_1",
	4: "NextRunMode_CCCX_2",
}

var Devm_Chassiss_Chassis_NextRunMode_value = map[string]int32{
	"NextRunMode_UNKNOWN": 0,
	"NextRunMode_SINGLE":  1,
	"NextRunMode_CCCX_0":  2,
	"NextRunMode_CCCX_1":  3,
	"NextRunMode_CCCX_2":  4,
}

func (x Devm_Chassiss_Chassis_NextRunMode) String() string {
	return proto.EnumName(Devm_Chassiss_Chassis_NextRunMode_name, int32(x))
}

func (Devm_Chassiss_Chassis_NextRunMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 2, 0, 1}
}

type Devm_LogicContainers_LogicContainer_ContainerType int32

const (
	Devm_LogicContainers_LogicContainer_ContainerType_UNKNOWN        Devm_LogicContainers_LogicContainer_ContainerType = 0
	Devm_LogicContainers_LogicContainer_ContainerType_BOARDSLOT      Devm_LogicContainers_LogicContainer_ContainerType = 1
	Devm_LogicContainers_LogicContainer_ContainerType_MPUSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 2
	Devm_LogicContainers_LogicContainer_ContainerType_LPUSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 3
	Devm_LogicContainers_LogicContainer_ContainerType_SFUSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 4
	Devm_LogicContainers_LogicContainer_ContainerType_ICUSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 5
	Devm_LogicContainers_LogicContainer_ContainerType_ECUSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 6
	Devm_LogicContainers_LogicContainer_ContainerType_CLKSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 7
	Devm_LogicContainers_LogicContainer_ContainerType_CMUSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 8
	Devm_LogicContainers_LogicContainer_ContainerType_FANSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 9
	Devm_LogicContainers_LogicContainer_ContainerType_POWERSLOT      Devm_LogicContainers_LogicContainer_ContainerType = 10
	Devm_LogicContainers_LogicContainer_ContainerType_LCDSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 11
	Devm_LogicContainers_LogicContainer_ContainerType_PICSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 12
	Devm_LogicContainers_LogicContainer_ContainerType_OFCSLOT        Devm_LogicContainers_LogicContainer_ContainerType = 13
	Devm_LogicContainers_LogicContainer_ContainerType_CFCARDSLOT     Devm_LogicContainers_LogicContainer_ContainerType = 14
	Devm_LogicContainers_LogicContainer_ContainerType_VIRTUALSLOT    Devm_LogicContainers_LogicContainer_ContainerType = 15
	Devm_LogicContainers_LogicContainer_ContainerType_VIRTUALSUBSLOT Devm_LogicContainers_LogicContainer_ContainerType = 16
)

var Devm_LogicContainers_LogicContainer_ContainerType_name = map[int32]string{
	0:  "ContainerType_UNKNOWN",
	1:  "ContainerType_BOARDSLOT",
	2:  "ContainerType_MPUSLOT",
	3:  "ContainerType_LPUSLOT",
	4:  "ContainerType_SFUSLOT",
	5:  "ContainerType_ICUSLOT",
	6:  "ContainerType_ECUSLOT",
	7:  "ContainerType_CLKSLOT",
	8:  "ContainerType_CMUSLOT",
	9:  "ContainerType_FANSLOT",
	10: "ContainerType_POWERSLOT",
	11: "ContainerType_LCDSLOT",
	12: "ContainerType_PICSLOT",
	13: "ContainerType_OFCSLOT",
	14: "ContainerType_CFCARDSLOT",
	15: "ContainerType_VIRTUALSLOT",
	16: "ContainerType_VIRTUALSUBSLOT",
}

var Devm_LogicContainers_LogicContainer_ContainerType_value = map[string]int32{
	"ContainerType_UNKNOWN":        0,
	"ContainerType_BOARDSLOT":      1,
	"ContainerType_MPUSLOT":        2,
	"ContainerType_LPUSLOT":        3,
	"ContainerType_SFUSLOT":        4,
	"ContainerType_ICUSLOT":        5,
	"ContainerType_ECUSLOT":        6,
	"ContainerType_CLKSLOT":        7,
	"ContainerType_CMUSLOT":        8,
	"ContainerType_FANSLOT":        9,
	"ContainerType_POWERSLOT":      10,
	"ContainerType_LCDSLOT":        11,
	"ContainerType_PICSLOT":        12,
	"ContainerType_OFCSLOT":        13,
	"ContainerType_CFCARDSLOT":     14,
	"ContainerType_VIRTUALSLOT":    15,
	"ContainerType_VIRTUALSUBSLOT": 16,
}

func (x Devm_LogicContainers_LogicContainer_ContainerType) String() string {
	return proto.EnumName(Devm_LogicContainers_LogicContainer_ContainerType_name, int32(x))
}

func (Devm_LogicContainers_LogicContainer_ContainerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 3, 0, 0}
}

type Devm_LogicContainers_LogicContainer_EquipedEntityType int32

const (
	Devm_LogicContainers_LogicContainer_EquipedEntityType_UNKNOWN                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 0
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CHASSIS                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 3
	Devm_LogicContainers_LogicContainer_EquipedEntityType_BOARDSLOT               Devm_LogicContainers_LogicContainer_EquipedEntityType = 4
	Devm_LogicContainers_LogicContainer_EquipedEntityType_MPUSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 5
	Devm_LogicContainers_LogicContainer_EquipedEntityType_LPUSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 6
	Devm_LogicContainers_LogicContainer_EquipedEntityType_SFUSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 7
	Devm_LogicContainers_LogicContainer_EquipedEntityType_ICUSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 8
	Devm_LogicContainers_LogicContainer_EquipedEntityType_ECUSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 9
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CLKSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 10
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FANSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 11
	Devm_LogicContainers_LogicContainer_EquipedEntityType_POWERSLOT               Devm_LogicContainers_LogicContainer_EquipedEntityType = 12
	Devm_LogicContainers_LogicContainer_EquipedEntityType_PICSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 13
	Devm_LogicContainers_LogicContainer_EquipedEntityType_OFCSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 14
	Devm_LogicContainers_LogicContainer_EquipedEntityType_LCDSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 15
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CFCARDSLOT              Devm_LogicContainers_LogicContainer_EquipedEntityType = 16
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CMUSLOT                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 17
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FNAME8090UNKNOWN        Devm_LogicContainers_LogicContainer_EquipedEntityType = 18
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FNAME8090WHOLE          Devm_LogicContainers_LogicContainer_EquipedEntityType = 19
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FNAME8090NE5000EX       Devm_LogicContainers_LogicContainer_EquipedEntityType = 20
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FNAME8090CLUSTERCENTRAL Devm_LogicContainers_LogicContainer_EquipedEntityType = 21
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FNAME8090NE5000EXX_VB   Devm_LogicContainers_LogicContainer_EquipedEntityType = 22
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CHASSIS1                Devm_LogicContainers_LogicContainer_EquipedEntityType = 24
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CHASSIS2                Devm_LogicContainers_LogicContainer_EquipedEntityType = 25
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CCCCHASSIS              Devm_LogicContainers_LogicContainer_EquipedEntityType = 26
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CE585048T4S2QEI         Devm_LogicContainers_LogicContainer_EquipedEntityType = 27
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CE685048S4QEI           Devm_LogicContainers_LogicContainer_EquipedEntityType = 28
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CE685048T4QEI           Devm_LogicContainers_LogicContainer_EquipedEntityType = 29
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52MPUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 30
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52MPUB                Devm_LogicContainers_LogicContainer_EquipedEntityType = 31
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55MPUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 32
	Devm_LogicContainers_LogicContainer_EquipedEntityType_C55MPUA                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 33
	Devm_LogicContainers_LogicContainer_EquipedEntityType_C56MPUC                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 34
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55MPUAB               Devm_LogicContainers_LogicContainer_EquipedEntityType = 35
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56RPUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 36
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 37
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUB                Devm_LogicContainers_LogicContainer_EquipedEntityType = 38
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUC                Devm_LogicContainers_LogicContainer_EquipedEntityType = 39
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUE                Devm_LogicContainers_LogicContainer_EquipedEntityType = 40
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUR                Devm_LogicContainers_LogicContainer_EquipedEntityType = 41
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 42
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUG                Devm_LogicContainers_LogicContainer_EquipedEntityType = 43
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUH                Devm_LogicContainers_LogicContainer_EquipedEntityType = 44
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUI                Devm_LogicContainers_LogicContainer_EquipedEntityType = 45
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUK                Devm_LogicContainers_LogicContainer_EquipedEntityType = 46
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUM                Devm_LogicContainers_LogicContainer_EquipedEntityType = 47
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52LPUN                Devm_LogicContainers_LogicContainer_EquipedEntityType = 48
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SPUC                Devm_LogicContainers_LogicContainer_EquipedEntityType = 49
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56LPUF100A            Devm_LogicContainers_LogicContainer_EquipedEntityType = 50
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56LPUF100B            Devm_LogicContainers_LogicContainer_EquipedEntityType = 51
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56LPUI100A            Devm_LogicContainers_LogicContainer_EquipedEntityType = 52
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56LPUI100B            Devm_LogicContainers_LogicContainer_EquipedEntityType = 53
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56LPUI100C            Devm_LogicContainers_LogicContainer_EquipedEntityType = 54
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56LPUF200A            Devm_LogicContainers_LogicContainer_EquipedEntityType = 55
	Devm_LogicContainers_LogicContainer_EquipedEntityType_RNRLPUB                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 56
	Devm_LogicContainers_LogicContainer_EquipedEntityType_RNRLPUD                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 57
	Devm_LogicContainers_LogicContainer_EquipedEntityType_RNRLPUF                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 58
	Devm_LogicContainers_LogicContainer_EquipedEntityType_RNRNS                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 59
	Devm_LogicContainers_LogicContainer_EquipedEntityType_RNRGRE                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 60
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SFUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 61
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SRUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 62
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SFUD                Devm_LogicContainers_LogicContainer_EquipedEntityType = 63
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SFUF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 64
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SFUG                Devm_LogicContainers_LogicContainer_EquipedEntityType = 65
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SFUC                Devm_LogicContainers_LogicContainer_EquipedEntityType = 66
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SFEA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 67
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52KX_SFEA             Devm_LogicContainers_LogicContainer_EquipedEntityType = 68
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55SFUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 69
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55ECUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 70
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55CX_ECUA             Devm_LogicContainers_LogicContainer_EquipedEntityType = 71
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55ICUA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 72
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56SFUF100B            Devm_LogicContainers_LogicContainer_EquipedEntityType = 73
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55SFUI100A            Devm_LogicContainers_LogicContainer_EquipedEntityType = 74
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56SFUF100C            Devm_LogicContainers_LogicContainer_EquipedEntityType = 75
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56SFU200A             Devm_LogicContainers_LogicContainer_EquipedEntityType = 76
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55ECU100A             Devm_LogicContainers_LogicContainer_EquipedEntityType = 77
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52SFEB                Devm_LogicContainers_LogicContainer_EquipedEntityType = 78
	Devm_LogicContainers_LogicContainer_EquipedEntityType_DE51SRU1A               Devm_LogicContainers_LogicContainer_EquipedEntityType = 79
	Devm_LogicContainers_LogicContainer_EquipedEntityType_DE51SRU1B               Devm_LogicContainers_LogicContainer_EquipedEntityType = 80
	Devm_LogicContainers_LogicContainer_EquipedEntityType_DE51SRU1C               Devm_LogicContainers_LogicContainer_EquipedEntityType = 81
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DSFUFA06C            Devm_LogicContainers_LogicContainer_EquipedEntityType = 82
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DSFUIK060            Devm_LogicContainers_LogicContainer_EquipedEntityType = 83
	Devm_LogicContainers_LogicContainer_EquipedEntityType_BOOTROM                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 84
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FLASH                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 85
	Devm_LogicContainers_LogicContainer_EquipedEntityType_EPLD1                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 86
	Devm_LogicContainers_LogicContainer_EquipedEntityType_EPLD2                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 87
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52E1XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 88
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52W1XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 89
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52EAGF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 90
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P4UF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 91
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P1XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 92
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P4HF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 93
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52E2XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 94
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52W2XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 95
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P2XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 96
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52EMGE                Devm_LogicContainers_LogicContainer_EquipedEntityType = 97
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P8CF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 98
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52EFGE                Devm_LogicContainers_LogicContainer_EquipedEntityType = 99
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P1UF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 100
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P2UF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 101
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52E5GF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 102
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P4CF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 103
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR53P1MZ                Devm_LogicContainers_LogicContainer_EquipedEntityType = 104
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52D1MV                Devm_LogicContainers_LogicContainer_EquipedEntityType = 105
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52E4XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 106
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56P2XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 107
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56L2XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 108
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56E2XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 109
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56D2XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 110
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56L5XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 111
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56E5XX                Devm_LogicContainers_LogicContainer_EquipedEntityType = 112
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56P1MZ                Devm_LogicContainers_LogicContainer_EquipedEntityType = 113
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56E1NC                Devm_LogicContainers_LogicContainer_EquipedEntityType = 114
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56EFGF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 115
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52EKGFY               Devm_LogicContainers_LogicContainer_EquipedEntityType = 116
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR57EFGF                Devm_LogicContainers_LogicContainer_EquipedEntityType = 117
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56E1NCC               Devm_LogicContainers_LogicContainer_EquipedEntityType = 118
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52P1XZ                Devm_LogicContainers_LogicContainer_EquipedEntityType = 119
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52E1XZ                Devm_LogicContainers_LogicContainer_EquipedEntityType = 120
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52W1XZ                Devm_LogicContainers_LogicContainer_EquipedEntityType = 121
	Devm_LogicContainers_LogicContainer_EquipedEntityType_SPU                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 122
	Devm_LogicContainers_LogicContainer_EquipedEntityType_TSUA                    Devm_LogicContainers_LogicContainer_EquipedEntityType = 123
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56E1MC                Devm_LogicContainers_LogicContainer_EquipedEntityType = 124
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR56LAXFA               Devm_LogicContainers_LogicContainer_EquipedEntityType = 125
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55OFCA                Devm_LogicContainers_LogicContainer_EquipedEntityType = 126
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55CX_OFCA             Devm_LogicContainers_LogicContainer_EquipedEntityType = 127
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52OFCB                Devm_LogicContainers_LogicContainer_EquipedEntityType = 128
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55OFC40               Devm_LogicContainers_LogicContainer_EquipedEntityType = 129
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55OFC100A             Devm_LogicContainers_LogicContainer_EquipedEntityType = 130
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR55OFC100B             Devm_LogicContainers_LogicContainer_EquipedEntityType = 131
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR52OFCV                Devm_LogicContainers_LogicContainer_EquipedEntityType = 132
	Devm_LogicContainers_LogicContainer_EquipedEntityType_ETH                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 133
	Devm_LogicContainers_LogicContainer_EquipedEntityType_POS                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 134
	Devm_LogicContainers_LogicContainer_EquipedEntityType_GE                      Devm_LogicContainers_LogicContainer_EquipedEntityType = 135
	Devm_LogicContainers_LogicContainer_EquipedEntityType_X_10GE                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 136
	Devm_LogicContainers_LogicContainer_EquipedEntityType_GF                      Devm_LogicContainers_LogicContainer_EquipedEntityType = 137
	Devm_LogicContainers_LogicContainer_EquipedEntityType_X_10GF                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 138
	Devm_LogicContainers_LogicContainer_EquipedEntityType_X_40GF                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 139
	Devm_LogicContainers_LogicContainer_EquipedEntityType_X_10GFCOM               Devm_LogicContainers_LogicContainer_EquipedEntityType = 140
	Devm_LogicContainers_LogicContainer_EquipedEntityType_X_40GFSPLIT             Devm_LogicContainers_LogicContainer_EquipedEntityType = 141
	Devm_LogicContainers_LogicContainer_EquipedEntityType_VSR                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 142
	Devm_LogicContainers_LogicContainer_EquipedEntityType_LFE                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 143
	Devm_LogicContainers_LogicContainer_EquipedEntityType_POWER                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 144
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CLOCK                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 145
	Devm_LogicContainers_LogicContainer_EquipedEntityType_FAN                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 146
	Devm_LogicContainers_LogicContainer_EquipedEntityType_LCD                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 147
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CFCARD                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 148
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CMU                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 149
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00EKGF60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 150
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00P4XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 151
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00P8UF60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 152
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00E4XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 153
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00W4XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 154
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DLPUFA060            Devm_LogicContainers_LogicContainer_EquipedEntityType = 155
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00LEXF60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 156
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00E2NC60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 157
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DE1NLAX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 158
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DSFEBA06B            Devm_LogicContainers_LogicContainer_EquipedEntityType = 159
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D0MPUB460            Devm_LogicContainers_LogicContainer_EquipedEntityType = 160
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DSFUFA06B            Devm_LogicContainers_LogicContainer_EquipedEntityType = 161
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DSFUIE060            Devm_LogicContainers_LogicContainer_EquipedEntityType = 162
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D0MPUA450            Devm_LogicContainers_LogicContainer_EquipedEntityType = 163
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DECUFA050            Devm_LogicContainers_LogicContainer_EquipedEntityType = 164
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5DSFUIA050            Devm_LogicContainers_LogicContainer_EquipedEntityType = 165
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00L5XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 166
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00E5XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 167
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00L2XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 168
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00E2XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 169
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00EFGF60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 170
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00P1MZ60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 171
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00P2XX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 172
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5M00E1MC60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 173
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00E1NC60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 174
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D00LAXX60            Devm_LogicContainers_LogicContainer_EquipedEntityType = 175
	Devm_LogicContainers_LogicContainer_EquipedEntityType_CR5D0OFCA060            Devm_LogicContainers_LogicContainer_EquipedEntityType = 176
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1XCS                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 177
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1EXL2                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 178
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1EX12                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 179
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1EX8                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 180
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1EH1                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 181
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1EG24                  Devm_LogicContainers_LogicContainer_EquipedEntityType = 182
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1CH1                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 183
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1CQ4                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 184
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1SCA                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 185
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1FAN                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 186
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1PIU                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 187
	Devm_LogicContainers_LogicContainer_EquipedEntityType_T1EFI                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 188
	Devm_LogicContainers_LogicContainer_EquipedEntityType_XCA                     Devm_LogicContainers_LogicContainer_EquipedEntityType = 189
	Devm_LogicContainers_LogicContainer_EquipedEntityType_TNU1SCC                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 190
	Devm_LogicContainers_LogicContainer_EquipedEntityType_C52MPUA                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 191
	Devm_LogicContainers_LogicContainer_EquipedEntityType_C52MPUB                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 192
	Devm_LogicContainers_LogicContainer_EquipedEntityType_LPUE                    Devm_LogicContainers_LogicContainer_EquipedEntityType = 193
	Devm_LogicContainers_LogicContainer_EquipedEntityType_LPUF                    Devm_LogicContainers_LogicContainer_EquipedEntityType = 194
	Devm_LogicContainers_LogicContainer_EquipedEntityType_TPA1EFI                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 195
	Devm_LogicContainers_LogicContainer_EquipedEntityType_TNT1EX8                 Devm_LogicContainers_LogicContainer_EquipedEntityType = 196
	Devm_LogicContainers_LogicContainer_EquipedEntityType_OTHER                   Devm_LogicContainers_LogicContainer_EquipedEntityType = 197
)

var Devm_LogicContainers_LogicContainer_EquipedEntityType_name = map[int32]string{
	0:   "EquipedEntityType_UNKNOWN",
	3:   "EquipedEntityType_CHASSIS",
	4:   "EquipedEntityType_BOARDSLOT",
	5:   "EquipedEntityType_MPUSLOT",
	6:   "EquipedEntityType_LPUSLOT",
	7:   "EquipedEntityType_SFUSLOT",
	8:   "EquipedEntityType_ICUSLOT",
	9:   "EquipedEntityType_ECUSLOT",
	10:  "EquipedEntityType_CLKSLOT",
	11:  "EquipedEntityType_FANSLOT",
	12:  "EquipedEntityType_POWERSLOT",
	13:  "EquipedEntityType_PICSLOT",
	14:  "EquipedEntityType_OFCSLOT",
	15:  "EquipedEntityType_LCDSLOT",
	16:  "EquipedEntityType_CFCARDSLOT",
	17:  "EquipedEntityType_CMUSLOT",
	18:  "EquipedEntityType_FNAME8090UNKNOWN",
	19:  "EquipedEntityType_FNAME8090WHOLE",
	20:  "EquipedEntityType_FNAME8090NE5000EX",
	21:  "EquipedEntityType_FNAME8090CLUSTERCENTRAL",
	22:  "EquipedEntityType_FNAME8090NE5000EXX_VB",
	24:  "EquipedEntityType_CHASSIS1",
	25:  "EquipedEntityType_CHASSIS2",
	26:  "EquipedEntityType_CCCCHASSIS",
	27:  "EquipedEntityType_CE585048T4S2QEI",
	28:  "EquipedEntityType_CE685048S4QEI",
	29:  "EquipedEntityType_CE685048T4QEI",
	30:  "EquipedEntityType_CR52MPUA",
	31:  "EquipedEntityType_CR52MPUB",
	32:  "EquipedEntityType_CR55MPUA",
	33:  "EquipedEntityType_C55MPUA",
	34:  "EquipedEntityType_C56MPUC",
	35:  "EquipedEntityType_CR55MPUAB",
	36:  "EquipedEntityType_CR56RPUA",
	37:  "EquipedEntityType_CR52LPUA",
	38:  "EquipedEntityType_CR52LPUB",
	39:  "EquipedEntityType_CR52LPUC",
	40:  "EquipedEntityType_CR52LPUE",
	41:  "EquipedEntityType_CR52LPUR",
	42:  "EquipedEntityType_CR52LPUF",
	43:  "EquipedEntityType_CR52LPUG",
	44:  "EquipedEntityType_CR52LPUH",
	45:  "EquipedEntityType_CR52LPUI",
	46:  "EquipedEntityType_CR52LPUK",
	47:  "EquipedEntityType_CR52LPUM",
	48:  "EquipedEntityType_CR52LPUN",
	49:  "EquipedEntityType_CR52SPUC",
	50:  "EquipedEntityType_CR56LPUF100A",
	51:  "EquipedEntityType_CR56LPUF100B",
	52:  "EquipedEntityType_CR56LPUI100A",
	53:  "EquipedEntityType_CR56LPUI100B",
	54:  "EquipedEntityType_CR56LPUI100C",
	55:  "EquipedEntityType_CR56LPUF200A",
	56:  "EquipedEntityType_RNRLPUB",
	57:  "EquipedEntityType_RNRLPUD",
	58:  "EquipedEntityType_RNRLPUF",
	59:  "EquipedEntityType_RNRNS",
	60:  "EquipedEntityType_RNRGRE",
	61:  "EquipedEntityType_CR52SFUA",
	62:  "EquipedEntityType_CR52SRUA",
	63:  "EquipedEntityType_CR52SFUD",
	64:  "EquipedEntityType_CR52SFUF",
	65:  "EquipedEntityType_CR52SFUG",
	66:  "EquipedEntityType_CR52SFUC",
	67:  "EquipedEntityType_CR52SFEA",
	68:  "EquipedEntityType_CR52KX_SFEA",
	69:  "EquipedEntityType_CR55SFUA",
	70:  "EquipedEntityType_CR55ECUA",
	71:  "EquipedEntityType_CR55CX_ECUA",
	72:  "EquipedEntityType_CR55ICUA",
	73:  "EquipedEntityType_CR56SFUF100B",
	74:  "EquipedEntityType_CR55SFUI100A",
	75:  "EquipedEntityType_CR56SFUF100C",
	76:  "EquipedEntityType_CR56SFU200A",
	77:  "EquipedEntityType_CR55ECU100A",
	78:  "EquipedEntityType_CR52SFEB",
	79:  "EquipedEntityType_DE51SRU1A",
	80:  "EquipedEntityType_DE51SRU1B",
	81:  "EquipedEntityType_DE51SRU1C",
	82:  "EquipedEntityType_CR5DSFUFA06C",
	83:  "EquipedEntityType_CR5DSFUIK060",
	84:  "EquipedEntityType_BOOTROM",
	85:  "EquipedEntityType_FLASH",
	86:  "EquipedEntityType_EPLD1",
	87:  "EquipedEntityType_EPLD2",
	88:  "EquipedEntityType_CR52E1XX",
	89:  "EquipedEntityType_CR52W1XX",
	90:  "EquipedEntityType_CR52EAGF",
	91:  "EquipedEntityType_CR52P4UF",
	92:  "EquipedEntityType_CR52P1XX",
	93:  "EquipedEntityType_CR52P4HF",
	94:  "EquipedEntityType_CR52E2XX",
	95:  "EquipedEntityType_CR52W2XX",
	96:  "EquipedEntityType_CR52P2XX",
	97:  "EquipedEntityType_CR52EMGE",
	98:  "EquipedEntityType_CR52P8CF",
	99:  "EquipedEntityType_CR52EFGE",
	100: "EquipedEntityType_CR52P1UF",
	101: "EquipedEntityType_CR52P2UF",
	102: "EquipedEntityType_CR52E5GF",
	103: "EquipedEntityType_CR52P4CF",
	104: "EquipedEntityType_CR53P1MZ",
	105: "EquipedEntityType_CR52D1MV",
	106: "EquipedEntityType_CR52E4XX",
	107: "EquipedEntityType_CR56P2XX",
	108: "EquipedEntityType_CR56L2XX",
	109: "EquipedEntityType_CR56E2XX",
	110: "EquipedEntityType_CR56D2XX",
	111: "EquipedEntityType_CR56L5XX",
	112: "EquipedEntityType_CR56E5XX",
	113: "EquipedEntityType_CR56P1MZ",
	114: "EquipedEntityType_CR56E1NC",
	115: "EquipedEntityType_CR56EFGF",
	116: "EquipedEntityType_CR52EKGFY",
	117: "EquipedEntityType_CR57EFGF",
	118: "EquipedEntityType_CR56E1NCC",
	119: "EquipedEntityType_CR52P1XZ",
	120: "EquipedEntityType_CR52E1XZ",
	121: "EquipedEntityType_CR52W1XZ",
	122: "EquipedEntityType_SPU",
	123: "EquipedEntityType_TSUA",
	124: "EquipedEntityType_CR56E1MC",
	125: "EquipedEntityType_CR56LAXFA",
	126: "EquipedEntityType_CR55OFCA",
	127: "EquipedEntityType_CR55CX_OFCA",
	128: "EquipedEntityType_CR52OFCB",
	129: "EquipedEntityType_CR55OFC40",
	130: "EquipedEntityType_CR55OFC100A",
	131: "EquipedEntityType_CR55OFC100B",
	132: "EquipedEntityType_CR52OFCV",
	133: "EquipedEntityType_ETH",
	134: "EquipedEntityType_POS",
	135: "EquipedEntityType_GE",
	136: "EquipedEntityType_X_10GE",
	137: "EquipedEntityType_GF",
	138: "EquipedEntityType_X_10GF",
	139: "EquipedEntityType_X_40GF",
	140: "EquipedEntityType_X_10GFCOM",
	141: "EquipedEntityType_X_40GFSPLIT",
	142: "EquipedEntityType_VSR",
	143: "EquipedEntityType_LFE",
	144: "EquipedEntityType_POWER",
	145: "EquipedEntityType_CLOCK",
	146: "EquipedEntityType_FAN",
	147: "EquipedEntityType_LCD",
	148: "EquipedEntityType_CFCARD",
	149: "EquipedEntityType_CMU",
	150: "EquipedEntityType_CR5D00EKGF60",
	151: "EquipedEntityType_CR5D00P4XX60",
	152: "EquipedEntityType_CR5D00P8UF60",
	153: "EquipedEntityType_CR5D00E4XX60",
	154: "EquipedEntityType_CR5D00W4XX60",
	155: "EquipedEntityType_CR5DLPUFA060",
	156: "EquipedEntityType_CR5D00LEXF60",
	157: "EquipedEntityType_CR5D00E2NC60",
	158: "EquipedEntityType_CR5DE1NLAX60",
	159: "EquipedEntityType_CR5DSFEBA06B",
	160: "EquipedEntityType_CR5D0MPUB460",
	161: "EquipedEntityType_CR5DSFUFA06B",
	162: "EquipedEntityType_CR5DSFUIE060",
	163: "EquipedEntityType_CR5D0MPUA450",
	164: "EquipedEntityType_CR5DECUFA050",
	165: "EquipedEntityType_CR5DSFUIA050",
	166: "EquipedEntityType_CR5D00L5XX60",
	167: "EquipedEntityType_CR5D00E5XX60",
	168: "EquipedEntityType_CR5D00L2XX60",
	169: "EquipedEntityType_CR5D00E2XX60",
	170: "EquipedEntityType_CR5D00EFGF60",
	171: "EquipedEntityType_CR5D00P1MZ60",
	172: "EquipedEntityType_CR5D00P2XX60",
	173: "EquipedEntityType_CR5M00E1MC60",
	174: "EquipedEntityType_CR5D00E1NC60",
	175: "EquipedEntityType_CR5D00LAXX60",
	176: "EquipedEntityType_CR5D0OFCA060",
	177: "EquipedEntityType_T1XCS",
	178: "EquipedEntityType_T1EXL2",
	179: "EquipedEntityType_T1EX12",
	180: "EquipedEntityType_T1EX8",
	181: "EquipedEntityType_T1EH1",
	182: "EquipedEntityType_T1EG24",
	183: "EquipedEntityType_T1CH1",
	184: "EquipedEntityType_T1CQ4",
	185: "EquipedEntityType_T1SCA",
	186: "EquipedEntityType_T1FAN",
	187: "EquipedEntityType_T1PIU",
	188: "EquipedEntityType_T1EFI",
	189: "EquipedEntityType_XCA",
	190: "EquipedEntityType_TNU1SCC",
	191: "EquipedEntityType_C52MPUA",
	192: "EquipedEntityType_C52MPUB",
	193: "EquipedEntityType_LPUE",
	194: "EquipedEntityType_LPUF",
	195: "EquipedEntityType_TPA1EFI",
	196: "EquipedEntityType_TNT1EX8",
	197: "EquipedEntityType_OTHER",
}

var Devm_LogicContainers_LogicContainer_EquipedEntityType_value = map[string]int32{
	"EquipedEntityType_UNKNOWN":                 0,
	"EquipedEntityType_CHASSIS":                 3,
	"EquipedEntityType_BOARDSLOT":               4,
	"EquipedEntityType_MPUSLOT":                 5,
	"EquipedEntityType_LPUSLOT":                 6,
	"EquipedEntityType_SFUSLOT":                 7,
	"EquipedEntityType_ICUSLOT":                 8,
	"EquipedEntityType_ECUSLOT":                 9,
	"EquipedEntityType_CLKSLOT":                 10,
	"EquipedEntityType_FANSLOT":                 11,
	"EquipedEntityType_POWERSLOT":               12,
	"EquipedEntityType_PICSLOT":                 13,
	"EquipedEntityType_OFCSLOT":                 14,
	"EquipedEntityType_LCDSLOT":                 15,
	"EquipedEntityType_CFCARDSLOT":              16,
	"EquipedEntityType_CMUSLOT":                 17,
	"EquipedEntityType_FNAME8090UNKNOWN":        18,
	"EquipedEntityType_FNAME8090WHOLE":          19,
	"EquipedEntityType_FNAME8090NE5000EX":       20,
	"EquipedEntityType_FNAME8090CLUSTERCENTRAL": 21,
	"EquipedEntityType_FNAME8090NE5000EXX_VB":   22,
	"EquipedEntityType_CHASSIS1":                24,
	"EquipedEntityType_CHASSIS2":                25,
	"EquipedEntityType_CCCCHASSIS":              26,
	"EquipedEntityType_CE585048T4S2QEI":         27,
	"EquipedEntityType_CE685048S4QEI":           28,
	"EquipedEntityType_CE685048T4QEI":           29,
	"EquipedEntityType_CR52MPUA":                30,
	"EquipedEntityType_CR52MPUB":                31,
	"EquipedEntityType_CR55MPUA":                32,
	"EquipedEntityType_C55MPUA":                 33,
	"EquipedEntityType_C56MPUC":                 34,
	"EquipedEntityType_CR55MPUAB":               35,
	"EquipedEntityType_CR56RPUA":                36,
	"EquipedEntityType_CR52LPUA":                37,
	"EquipedEntityType_CR52LPUB":                38,
	"EquipedEntityType_CR52LPUC":                39,
	"EquipedEntityType_CR52LPUE":                40,
	"EquipedEntityType_CR52LPUR":                41,
	"EquipedEntityType_CR52LPUF":                42,
	"EquipedEntityType_CR52LPUG":                43,
	"EquipedEntityType_CR52LPUH":                44,
	"EquipedEntityType_CR52LPUI":                45,
	"EquipedEntityType_CR52LPUK":                46,
	"EquipedEntityType_CR52LPUM":                47,
	"EquipedEntityType_CR52LPUN":                48,
	"EquipedEntityType_CR52SPUC":                49,
	"EquipedEntityType_CR56LPUF100A":            50,
	"EquipedEntityType_CR56LPUF100B":            51,
	"EquipedEntityType_CR56LPUI100A":            52,
	"EquipedEntityType_CR56LPUI100B":            53,
	"EquipedEntityType_CR56LPUI100C":            54,
	"EquipedEntityType_CR56LPUF200A":            55,
	"EquipedEntityType_RNRLPUB":                 56,
	"EquipedEntityType_RNRLPUD":                 57,
	"EquipedEntityType_RNRLPUF":                 58,
	"EquipedEntityType_RNRNS":                   59,
	"EquipedEntityType_RNRGRE":                  60,
	"EquipedEntityType_CR52SFUA":                61,
	"EquipedEntityType_CR52SRUA":                62,
	"EquipedEntityType_CR52SFUD":                63,
	"EquipedEntityType_CR52SFUF":                64,
	"EquipedEntityType_CR52SFUG":                65,
	"EquipedEntityType_CR52SFUC":                66,
	"EquipedEntityType_CR52SFEA":                67,
	"EquipedEntityType_CR52KX_SFEA":             68,
	"EquipedEntityType_CR55SFUA":                69,
	"EquipedEntityType_CR55ECUA":                70,
	"EquipedEntityType_CR55CX_ECUA":             71,
	"EquipedEntityType_CR55ICUA":                72,
	"EquipedEntityType_CR56SFUF100B":            73,
	"EquipedEntityType_CR55SFUI100A":            74,
	"EquipedEntityType_CR56SFUF100C":            75,
	"EquipedEntityType_CR56SFU200A":             76,
	"EquipedEntityType_CR55ECU100A":             77,
	"EquipedEntityType_CR52SFEB":                78,
	"EquipedEntityType_DE51SRU1A":               79,
	"EquipedEntityType_DE51SRU1B":               80,
	"EquipedEntityType_DE51SRU1C":               81,
	"EquipedEntityType_CR5DSFUFA06C":            82,
	"EquipedEntityType_CR5DSFUIK060":            83,
	"EquipedEntityType_BOOTROM":                 84,
	"EquipedEntityType_FLASH":                   85,
	"EquipedEntityType_EPLD1":                   86,
	"EquipedEntityType_EPLD2":                   87,
	"EquipedEntityType_CR52E1XX":                88,
	"EquipedEntityType_CR52W1XX":                89,
	"EquipedEntityType_CR52EAGF":                90,
	"EquipedEntityType_CR52P4UF":                91,
	"EquipedEntityType_CR52P1XX":                92,
	"EquipedEntityType_CR52P4HF":                93,
	"EquipedEntityType_CR52E2XX":                94,
	"EquipedEntityType_CR52W2XX":                95,
	"EquipedEntityType_CR52P2XX":                96,
	"EquipedEntityType_CR52EMGE":                97,
	"EquipedEntityType_CR52P8CF":                98,
	"EquipedEntityType_CR52EFGE":                99,
	"EquipedEntityType_CR52P1UF":                100,
	"EquipedEntityType_CR52P2UF":                101,
	"EquipedEntityType_CR52E5GF":                102,
	"EquipedEntityType_CR52P4CF":                103,
	"EquipedEntityType_CR53P1MZ":                104,
	"EquipedEntityType_CR52D1MV":                105,
	"EquipedEntityType_CR52E4XX":                106,
	"EquipedEntityType_CR56P2XX":                107,
	"EquipedEntityType_CR56L2XX":                108,
	"EquipedEntityType_CR56E2XX":                109,
	"EquipedEntityType_CR56D2XX":                110,
	"EquipedEntityType_CR56L5XX":                111,
	"EquipedEntityType_CR56E5XX":                112,
	"EquipedEntityType_CR56P1MZ":                113,
	"EquipedEntityType_CR56E1NC":                114,
	"EquipedEntityType_CR56EFGF":                115,
	"EquipedEntityType_CR52EKGFY":               116,
	"EquipedEntityType_CR57EFGF":                117,
	"EquipedEntityType_CR56E1NCC":               118,
	"EquipedEntityType_CR52P1XZ":                119,
	"EquipedEntityType_CR52E1XZ":                120,
	"EquipedEntityType_CR52W1XZ":                121,
	"EquipedEntityType_SPU":                     122,
	"EquipedEntityType_TSUA":                    123,
	"EquipedEntityType_CR56E1MC":                124,
	"EquipedEntityType_CR56LAXFA":               125,
	"EquipedEntityType_CR55OFCA":                126,
	"EquipedEntityType_CR55CX_OFCA":             127,
	"EquipedEntityType_CR52OFCB":                128,
	"EquipedEntityType_CR55OFC40":               129,
	"EquipedEntityType_CR55OFC100A":             130,
	"EquipedEntityType_CR55OFC100B":             131,
	"EquipedEntityType_CR52OFCV":                132,
	"EquipedEntityType_ETH":                     133,
	"EquipedEntityType_POS":                     134,
	"EquipedEntityType_GE":                      135,
	"EquipedEntityType_X_10GE":                  136,
	"EquipedEntityType_GF":                      137,
	"EquipedEntityType_X_10GF":                  138,
	"EquipedEntityType_X_40GF":                  139,
	"EquipedEntityType_X_10GFCOM":               140,
	"EquipedEntityType_X_40GFSPLIT":             141,
	"EquipedEntityType_VSR":                     142,
	"EquipedEntityType_LFE":                     143,
	"EquipedEntityType_POWER":                   144,
	"EquipedEntityType_CLOCK":                   145,
	"EquipedEntityType_FAN":                     146,
	"EquipedEntityType_LCD":                     147,
	"EquipedEntityType_CFCARD":                  148,
	"EquipedEntityType_CMU":                     149,
	"EquipedEntityType_CR5D00EKGF60":            150,
	"EquipedEntityType_CR5D00P4XX60":            151,
	"EquipedEntityType_CR5D00P8UF60":            152,
	"EquipedEntityType_CR5D00E4XX60":            153,
	"EquipedEntityType_CR5D00W4XX60":            154,
	"EquipedEntityType_CR5DLPUFA060":            155,
	"EquipedEntityType_CR5D00LEXF60":            156,
	"EquipedEntityType_CR5D00E2NC60":            157,
	"EquipedEntityType_CR5DE1NLAX60":            158,
	"EquipedEntityType_CR5DSFEBA06B":            159,
	"EquipedEntityType_CR5D0MPUB460":            160,
	"EquipedEntityType_CR5DSFUFA06B":            161,
	"EquipedEntityType_CR5DSFUIE060":            162,
	"EquipedEntityType_CR5D0MPUA450":            163,
	"EquipedEntityType_CR5DECUFA050":            164,
	"EquipedEntityType_CR5DSFUIA050":            165,
	"EquipedEntityType_CR5D00L5XX60":            166,
	"EquipedEntityType_CR5D00E5XX60":            167,
	"EquipedEntityType_CR5D00L2XX60":            168,
	"EquipedEntityType_CR5D00E2XX60":            169,
	"EquipedEntityType_CR5D00EFGF60":            170,
	"EquipedEntityType_CR5D00P1MZ60":            171,
	"EquipedEntityType_CR5D00P2XX60":            172,
	"EquipedEntityType_CR5M00E1MC60":            173,
	"EquipedEntityType_CR5D00E1NC60":            174,
	"EquipedEntityType_CR5D00LAXX60":            175,
	"EquipedEntityType_CR5D0OFCA060":            176,
	"EquipedEntityType_T1XCS":                   177,
	"EquipedEntityType_T1EXL2":                  178,
	"EquipedEntityType_T1EX12":                  179,
	"EquipedEntityType_T1EX8":                   180,
	"EquipedEntityType_T1EH1":                   181,
	"EquipedEntityType_T1EG24":                  182,
	"EquipedEntityType_T1CH1":                   183,
	"EquipedEntityType_T1CQ4":                   184,
	"EquipedEntityType_T1SCA":                   185,
	"EquipedEntityType_T1FAN":                   186,
	"EquipedEntityType_T1PIU":                   187,
	"EquipedEntityType_T1EFI":                   188,
	"EquipedEntityType_XCA":                     189,
	"EquipedEntityType_TNU1SCC":                 190,
	"EquipedEntityType_C52MPUA":                 191,
	"EquipedEntityType_C52MPUB":                 192,
	"EquipedEntityType_LPUE":                    193,
	"EquipedEntityType_LPUF":                    194,
	"EquipedEntityType_TPA1EFI":                 195,
	"EquipedEntityType_TNT1EX8":                 196,
	"EquipedEntityType_OTHER":                   197,
}

func (x Devm_LogicContainers_LogicContainer_EquipedEntityType) String() string {
	return proto.EnumName(Devm_LogicContainers_LogicContainer_EquipedEntityType_name, int32(x))
}

func (Devm_LogicContainers_LogicContainer_EquipedEntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 3, 0, 1}
}

type Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType int32

const (
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_UNKNOWN                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 0
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CHASSIS                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 3
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_BOARDSLOT               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 4
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_MPUSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 5
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_LPUSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 6
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_SFUSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 7
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_ICUSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 8
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_ECUSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 9
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CLKSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 10
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FANSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 11
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_POWERSLOT               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 12
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_PICSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 13
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_OFCSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 14
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_LCDSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 15
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CFCARDSLOT              Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 16
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CMUSLOT                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 17
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FNAME8090UNKNOWN        Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 18
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FNAME8090WHOLE          Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 19
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FNAME8090NE5000EX       Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 20
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FNAME8090CLUSTERCENTRAL Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 21
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FNAME8090NE5000EXX_VB   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 22
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CHASSIS1                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 24
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CHASSIS2                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 25
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CCCCHASSIS              Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 26
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CE585048T4S2QEI         Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 27
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CE685048S4QEI           Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 28
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CE685048T4QEI           Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 29
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52MPUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 30
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52MPUB                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 31
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55MPUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 32
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_C55MPUA                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 33
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_C56MPUC                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 34
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55MPUAB               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 35
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56RPUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 36
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 37
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUB                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 38
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUC                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 39
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUE                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 40
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUR                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 41
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 42
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUG                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 43
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUH                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 44
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUI                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 45
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUK                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 46
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUM                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 47
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52LPUN                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 48
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SPUC                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 49
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56LPUF100A            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 50
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56LPUF100B            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 51
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56LPUI100A            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 52
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56LPUI100B            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 53
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56LPUI100C            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 54
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56LPUF200A            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 55
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_RNRLPUB                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 56
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_RNRLPUD                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 57
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_RNRLPUF                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 58
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_RNRNS                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 59
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_RNRGRE                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 60
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SFUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 61
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SRUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 62
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SFUD                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 63
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SFUF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 64
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SFUG                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 65
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SFUC                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 66
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SFEA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 67
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52KX_SFEA             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 68
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55SFUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 69
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55ECUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 70
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55CX_ECUA             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 71
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55ICUA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 72
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56SFUF100B            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 73
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55SFUI100A            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 74
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56SFUF100C            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 75
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56SFU200A             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 76
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55ECU100A             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 77
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52SFEB                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 78
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_DE51SRU1A               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 79
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_DE51SRU1B               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 80
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_DE51SRU1C               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 81
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DSFUFA06C            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 82
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DSFUIK060            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 83
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_BOOTROM                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 84
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FLASH                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 85
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_EPLD1                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 86
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_EPLD2                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 87
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52E1XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 88
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52W1XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 89
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52EAGF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 90
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P4UF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 91
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P1XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 92
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P4HF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 93
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52E2XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 94
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52W2XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 95
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P2XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 96
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52EMGE                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 97
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P8CF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 98
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52EFGE                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 99
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P1UF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 100
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P2UF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 101
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52E5GF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 102
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P4CF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 103
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR53P1MZ                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 104
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52D1MV                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 105
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52E4XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 106
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56P2XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 107
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56L2XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 108
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56E2XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 109
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56D2XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 110
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56L5XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 111
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56E5XX                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 112
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56P1MZ                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 113
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56E1NC                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 114
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56EFGF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 115
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52EKGFY               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 116
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR57EFGF                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 117
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56E1NCC               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 118
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52P1XZ                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 119
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52E1XZ                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 120
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52W1XZ                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 121
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_SPU                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 122
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_TSUA                    Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 123
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56E1MC                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 124
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR56LAXFA               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 125
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55OFCA                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 126
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55CX_OFCA             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 127
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52OFCB                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 128
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55OFC40               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 129
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55OFC100A             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 130
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR55OFC100B             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 131
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR52OFCV                Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 132
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_ETH                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 133
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_POS                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 134
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_GE                      Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 135
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_X_10GE                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 136
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_GF                      Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 137
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_X_10GF                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 138
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_X_40GF                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 139
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_X_10GFCOM               Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 140
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_X_40GFSPLIT             Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 141
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_VSR                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 142
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_LFE                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 143
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_POWER                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 144
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CLOCK                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 145
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_FAN                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 146
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_LCD                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 147
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CFCARD                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 148
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CMU                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 149
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00EKGF60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 150
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00P4XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 151
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00P8UF60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 152
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00E4XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 153
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00W4XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 154
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DLPUFA060            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 155
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00LEXF60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 156
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00E2NC60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 157
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DE1NLAX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 158
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DSFEBA06B            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 159
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D0MPUB460            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 160
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DSFUFA06B            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 161
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DSFUIE060            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 162
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D0MPUA450            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 163
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DECUFA050            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 164
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5DSFUIA050            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 165
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00L5XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 166
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00E5XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 167
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00L2XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 168
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00E2XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 169
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00EFGF60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 170
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00P1MZ60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 171
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00P2XX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 172
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5M00E1MC60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 173
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00E1NC60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 174
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D00LAXX60            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 175
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_CR5D0OFCA060            Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 176
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1XCS                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 177
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1EXL2                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 178
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1EX12                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 179
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1EX8                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 180
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1EH1                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 181
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1EG24                  Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 182
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1CH1                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 183
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1CQ4                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 184
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1SCA                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 185
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1FAN                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 186
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1PIU                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 187
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_T1EFI                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 188
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_XCA                     Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 189
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_TNU1SCC                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 190
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_C52MPUA                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 191
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_C52MPUB                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 192
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_LPUE                    Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 193
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_LPUF                    Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 194
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_TPA1EFI                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 195
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_TNT1EX8                 Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 196
	Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_OTHER                   Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType = 197
)

var Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_name = map[int32]string{
	0:   "EntityType_UNKNOWN",
	3:   "EntityType_CHASSIS",
	4:   "EntityType_BOARDSLOT",
	5:   "EntityType_MPUSLOT",
	6:   "EntityType_LPUSLOT",
	7:   "EntityType_SFUSLOT",
	8:   "EntityType_ICUSLOT",
	9:   "EntityType_ECUSLOT",
	10:  "EntityType_CLKSLOT",
	11:  "EntityType_FANSLOT",
	12:  "EntityType_POWERSLOT",
	13:  "EntityType_PICSLOT",
	14:  "EntityType_OFCSLOT",
	15:  "EntityType_LCDSLOT",
	16:  "EntityType_CFCARDSLOT",
	17:  "EntityType_CMUSLOT",
	18:  "EntityType_FNAME8090UNKNOWN",
	19:  "EntityType_FNAME8090WHOLE",
	20:  "EntityType_FNAME8090NE5000EX",
	21:  "EntityType_FNAME8090CLUSTERCENTRAL",
	22:  "EntityType_FNAME8090NE5000EXX_VB",
	24:  "EntityType_CHASSIS1",
	25:  "EntityType_CHASSIS2",
	26:  "EntityType_CCCCHASSIS",
	27:  "EntityType_CE585048T4S2QEI",
	28:  "EntityType_CE685048S4QEI",
	29:  "EntityType_CE685048T4QEI",
	30:  "EntityType_CR52MPUA",
	31:  "EntityType_CR52MPUB",
	32:  "EntityType_CR55MPUA",
	33:  "EntityType_C55MPUA",
	34:  "EntityType_C56MPUC",
	35:  "EntityType_CR55MPUAB",
	36:  "EntityType_CR56RPUA",
	37:  "EntityType_CR52LPUA",
	38:  "EntityType_CR52LPUB",
	39:  "EntityType_CR52LPUC",
	40:  "EntityType_CR52LPUE",
	41:  "EntityType_CR52LPUR",
	42:  "EntityType_CR52LPUF",
	43:  "EntityType_CR52LPUG",
	44:  "EntityType_CR52LPUH",
	45:  "EntityType_CR52LPUI",
	46:  "EntityType_CR52LPUK",
	47:  "EntityType_CR52LPUM",
	48:  "EntityType_CR52LPUN",
	49:  "EntityType_CR52SPUC",
	50:  "EntityType_CR56LPUF100A",
	51:  "EntityType_CR56LPUF100B",
	52:  "EntityType_CR56LPUI100A",
	53:  "EntityType_CR56LPUI100B",
	54:  "EntityType_CR56LPUI100C",
	55:  "EntityType_CR56LPUF200A",
	56:  "EntityType_RNRLPUB",
	57:  "EntityType_RNRLPUD",
	58:  "EntityType_RNRLPUF",
	59:  "EntityType_RNRNS",
	60:  "EntityType_RNRGRE",
	61:  "EntityType_CR52SFUA",
	62:  "EntityType_CR52SRUA",
	63:  "EntityType_CR52SFUD",
	64:  "EntityType_CR52SFUF",
	65:  "EntityType_CR52SFUG",
	66:  "EntityType_CR52SFUC",
	67:  "EntityType_CR52SFEA",
	68:  "EntityType_CR52KX_SFEA",
	69:  "EntityType_CR55SFUA",
	70:  "EntityType_CR55ECUA",
	71:  "EntityType_CR55CX_ECUA",
	72:  "EntityType_CR55ICUA",
	73:  "EntityType_CR56SFUF100B",
	74:  "EntityType_CR55SFUI100A",
	75:  "EntityType_CR56SFUF100C",
	76:  "EntityType_CR56SFU200A",
	77:  "EntityType_CR55ECU100A",
	78:  "EntityType_CR52SFEB",
	79:  "EntityType_DE51SRU1A",
	80:  "EntityType_DE51SRU1B",
	81:  "EntityType_DE51SRU1C",
	82:  "EntityType_CR5DSFUFA06C",
	83:  "EntityType_CR5DSFUIK060",
	84:  "EntityType_BOOTROM",
	85:  "EntityType_FLASH",
	86:  "EntityType_EPLD1",
	87:  "EntityType_EPLD2",
	88:  "EntityType_CR52E1XX",
	89:  "EntityType_CR52W1XX",
	90:  "EntityType_CR52EAGF",
	91:  "EntityType_CR52P4UF",
	92:  "EntityType_CR52P1XX",
	93:  "EntityType_CR52P4HF",
	94:  "EntityType_CR52E2XX",
	95:  "EntityType_CR52W2XX",
	96:  "EntityType_CR52P2XX",
	97:  "EntityType_CR52EMGE",
	98:  "EntityType_CR52P8CF",
	99:  "EntityType_CR52EFGE",
	100: "EntityType_CR52P1UF",
	101: "EntityType_CR52P2UF",
	102: "EntityType_CR52E5GF",
	103: "EntityType_CR52P4CF",
	104: "EntityType_CR53P1MZ",
	105: "EntityType_CR52D1MV",
	106: "EntityType_CR52E4XX",
	107: "EntityType_CR56P2XX",
	108: "EntityType_CR56L2XX",
	109: "EntityType_CR56E2XX",
	110: "EntityType_CR56D2XX",
	111: "EntityType_CR56L5XX",
	112: "EntityType_CR56E5XX",
	113: "EntityType_CR56P1MZ",
	114: "EntityType_CR56E1NC",
	115: "EntityType_CR56EFGF",
	116: "EntityType_CR52EKGFY",
	117: "EntityType_CR57EFGF",
	118: "EntityType_CR56E1NCC",
	119: "EntityType_CR52P1XZ",
	120: "EntityType_CR52E1XZ",
	121: "EntityType_CR52W1XZ",
	122: "EntityType_SPU",
	123: "EntityType_TSUA",
	124: "EntityType_CR56E1MC",
	125: "EntityType_CR56LAXFA",
	126: "EntityType_CR55OFCA",
	127: "EntityType_CR55CX_OFCA",
	128: "EntityType_CR52OFCB",
	129: "EntityType_CR55OFC40",
	130: "EntityType_CR55OFC100A",
	131: "EntityType_CR55OFC100B",
	132: "EntityType_CR52OFCV",
	133: "EntityType_ETH",
	134: "EntityType_POS",
	135: "EntityType_GE",
	136: "EntityType_X_10GE",
	137: "EntityType_GF",
	138: "EntityType_X_10GF",
	139: "EntityType_X_40GF",
	140: "EntityType_X_10GFCOM",
	141: "EntityType_X_40GFSPLIT",
	142: "EntityType_VSR",
	143: "EntityType_LFE",
	144: "EntityType_POWER",
	145: "EntityType_CLOCK",
	146: "EntityType_FAN",
	147: "EntityType_LCD",
	148: "EntityType_CFCARD",
	149: "EntityType_CMU",
	150: "EntityType_CR5D00EKGF60",
	151: "EntityType_CR5D00P4XX60",
	152: "EntityType_CR5D00P8UF60",
	153: "EntityType_CR5D00E4XX60",
	154: "EntityType_CR5D00W4XX60",
	155: "EntityType_CR5DLPUFA060",
	156: "EntityType_CR5D00LEXF60",
	157: "EntityType_CR5D00E2NC60",
	158: "EntityType_CR5DE1NLAX60",
	159: "EntityType_CR5DSFEBA06B",
	160: "EntityType_CR5D0MPUB460",
	161: "EntityType_CR5DSFUFA06B",
	162: "EntityType_CR5DSFUIE060",
	163: "EntityType_CR5D0MPUA450",
	164: "EntityType_CR5DECUFA050",
	165: "EntityType_CR5DSFUIA050",
	166: "EntityType_CR5D00L5XX60",
	167: "EntityType_CR5D00E5XX60",
	168: "EntityType_CR5D00L2XX60",
	169: "EntityType_CR5D00E2XX60",
	170: "EntityType_CR5D00EFGF60",
	171: "EntityType_CR5D00P1MZ60",
	172: "EntityType_CR5D00P2XX60",
	173: "EntityType_CR5M00E1MC60",
	174: "EntityType_CR5D00E1NC60",
	175: "EntityType_CR5D00LAXX60",
	176: "EntityType_CR5D0OFCA060",
	177: "EntityType_T1XCS",
	178: "EntityType_T1EXL2",
	179: "EntityType_T1EX12",
	180: "EntityType_T1EX8",
	181: "EntityType_T1EH1",
	182: "EntityType_T1EG24",
	183: "EntityType_T1CH1",
	184: "EntityType_T1CQ4",
	185: "EntityType_T1SCA",
	186: "EntityType_T1FAN",
	187: "EntityType_T1PIU",
	188: "EntityType_T1EFI",
	189: "EntityType_XCA",
	190: "EntityType_TNU1SCC",
	191: "EntityType_C52MPUA",
	192: "EntityType_C52MPUB",
	193: "EntityType_LPUE",
	194: "EntityType_LPUF",
	195: "EntityType_TPA1EFI",
	196: "EntityType_TNT1EX8",
	197: "EntityType_OTHER",
}

var Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_value = map[string]int32{
	"EntityType_UNKNOWN":                 0,
	"EntityType_CHASSIS":                 3,
	"EntityType_BOARDSLOT":               4,
	"EntityType_MPUSLOT":                 5,
	"EntityType_LPUSLOT":                 6,
	"EntityType_SFUSLOT":                 7,
	"EntityType_ICUSLOT":                 8,
	"EntityType_ECUSLOT":                 9,
	"EntityType_CLKSLOT":                 10,
	"EntityType_FANSLOT":                 11,
	"EntityType_POWERSLOT":               12,
	"EntityType_PICSLOT":                 13,
	"EntityType_OFCSLOT":                 14,
	"EntityType_LCDSLOT":                 15,
	"EntityType_CFCARDSLOT":              16,
	"EntityType_CMUSLOT":                 17,
	"EntityType_FNAME8090UNKNOWN":        18,
	"EntityType_FNAME8090WHOLE":          19,
	"EntityType_FNAME8090NE5000EX":       20,
	"EntityType_FNAME8090CLUSTERCENTRAL": 21,
	"EntityType_FNAME8090NE5000EXX_VB":   22,
	"EntityType_CHASSIS1":                24,
	"EntityType_CHASSIS2":                25,
	"EntityType_CCCCHASSIS":              26,
	"EntityType_CE585048T4S2QEI":         27,
	"EntityType_CE685048S4QEI":           28,
	"EntityType_CE685048T4QEI":           29,
	"EntityType_CR52MPUA":                30,
	"EntityType_CR52MPUB":                31,
	"EntityType_CR55MPUA":                32,
	"EntityType_C55MPUA":                 33,
	"EntityType_C56MPUC":                 34,
	"EntityType_CR55MPUAB":               35,
	"EntityType_CR56RPUA":                36,
	"EntityType_CR52LPUA":                37,
	"EntityType_CR52LPUB":                38,
	"EntityType_CR52LPUC":                39,
	"EntityType_CR52LPUE":                40,
	"EntityType_CR52LPUR":                41,
	"EntityType_CR52LPUF":                42,
	"EntityType_CR52LPUG":                43,
	"EntityType_CR52LPUH":                44,
	"EntityType_CR52LPUI":                45,
	"EntityType_CR52LPUK":                46,
	"EntityType_CR52LPUM":                47,
	"EntityType_CR52LPUN":                48,
	"EntityType_CR52SPUC":                49,
	"EntityType_CR56LPUF100A":            50,
	"EntityType_CR56LPUF100B":            51,
	"EntityType_CR56LPUI100A":            52,
	"EntityType_CR56LPUI100B":            53,
	"EntityType_CR56LPUI100C":            54,
	"EntityType_CR56LPUF200A":            55,
	"EntityType_RNRLPUB":                 56,
	"EntityType_RNRLPUD":                 57,
	"EntityType_RNRLPUF":                 58,
	"EntityType_RNRNS":                   59,
	"EntityType_RNRGRE":                  60,
	"EntityType_CR52SFUA":                61,
	"EntityType_CR52SRUA":                62,
	"EntityType_CR52SFUD":                63,
	"EntityType_CR52SFUF":                64,
	"EntityType_CR52SFUG":                65,
	"EntityType_CR52SFUC":                66,
	"EntityType_CR52SFEA":                67,
	"EntityType_CR52KX_SFEA":             68,
	"EntityType_CR55SFUA":                69,
	"EntityType_CR55ECUA":                70,
	"EntityType_CR55CX_ECUA":             71,
	"EntityType_CR55ICUA":                72,
	"EntityType_CR56SFUF100B":            73,
	"EntityType_CR55SFUI100A":            74,
	"EntityType_CR56SFUF100C":            75,
	"EntityType_CR56SFU200A":             76,
	"EntityType_CR55ECU100A":             77,
	"EntityType_CR52SFEB":                78,
	"EntityType_DE51SRU1A":               79,
	"EntityType_DE51SRU1B":               80,
	"EntityType_DE51SRU1C":               81,
	"EntityType_CR5DSFUFA06C":            82,
	"EntityType_CR5DSFUIK060":            83,
	"EntityType_BOOTROM":                 84,
	"EntityType_FLASH":                   85,
	"EntityType_EPLD1":                   86,
	"EntityType_EPLD2":                   87,
	"EntityType_CR52E1XX":                88,
	"EntityType_CR52W1XX":                89,
	"EntityType_CR52EAGF":                90,
	"EntityType_CR52P4UF":                91,
	"EntityType_CR52P1XX":                92,
	"EntityType_CR52P4HF":                93,
	"EntityType_CR52E2XX":                94,
	"EntityType_CR52W2XX":                95,
	"EntityType_CR52P2XX":                96,
	"EntityType_CR52EMGE":                97,
	"EntityType_CR52P8CF":                98,
	"EntityType_CR52EFGE":                99,
	"EntityType_CR52P1UF":                100,
	"EntityType_CR52P2UF":                101,
	"EntityType_CR52E5GF":                102,
	"EntityType_CR52P4CF":                103,
	"EntityType_CR53P1MZ":                104,
	"EntityType_CR52D1MV":                105,
	"EntityType_CR52E4XX":                106,
	"EntityType_CR56P2XX":                107,
	"EntityType_CR56L2XX":                108,
	"EntityType_CR56E2XX":                109,
	"EntityType_CR56D2XX":                110,
	"EntityType_CR56L5XX":                111,
	"EntityType_CR56E5XX":                112,
	"EntityType_CR56P1MZ":                113,
	"EntityType_CR56E1NC":                114,
	"EntityType_CR56EFGF":                115,
	"EntityType_CR52EKGFY":               116,
	"EntityType_CR57EFGF":                117,
	"EntityType_CR56E1NCC":               118,
	"EntityType_CR52P1XZ":                119,
	"EntityType_CR52E1XZ":                120,
	"EntityType_CR52W1XZ":                121,
	"EntityType_SPU":                     122,
	"EntityType_TSUA":                    123,
	"EntityType_CR56E1MC":                124,
	"EntityType_CR56LAXFA":               125,
	"EntityType_CR55OFCA":                126,
	"EntityType_CR55CX_OFCA":             127,
	"EntityType_CR52OFCB":                128,
	"EntityType_CR55OFC40":               129,
	"EntityType_CR55OFC100A":             130,
	"EntityType_CR55OFC100B":             131,
	"EntityType_CR52OFCV":                132,
	"EntityType_ETH":                     133,
	"EntityType_POS":                     134,
	"EntityType_GE":                      135,
	"EntityType_X_10GE":                  136,
	"EntityType_GF":                      137,
	"EntityType_X_10GF":                  138,
	"EntityType_X_40GF":                  139,
	"EntityType_X_10GFCOM":               140,
	"EntityType_X_40GFSPLIT":             141,
	"EntityType_VSR":                     142,
	"EntityType_LFE":                     143,
	"EntityType_POWER":                   144,
	"EntityType_CLOCK":                   145,
	"EntityType_FAN":                     146,
	"EntityType_LCD":                     147,
	"EntityType_CFCARD":                  148,
	"EntityType_CMU":                     149,
	"EntityType_CR5D00EKGF60":            150,
	"EntityType_CR5D00P4XX60":            151,
	"EntityType_CR5D00P8UF60":            152,
	"EntityType_CR5D00E4XX60":            153,
	"EntityType_CR5D00W4XX60":            154,
	"EntityType_CR5DLPUFA060":            155,
	"EntityType_CR5D00LEXF60":            156,
	"EntityType_CR5D00E2NC60":            157,
	"EntityType_CR5DE1NLAX60":            158,
	"EntityType_CR5DSFEBA06B":            159,
	"EntityType_CR5D0MPUB460":            160,
	"EntityType_CR5DSFUFA06B":            161,
	"EntityType_CR5DSFUIE060":            162,
	"EntityType_CR5D0MPUA450":            163,
	"EntityType_CR5DECUFA050":            164,
	"EntityType_CR5DSFUIA050":            165,
	"EntityType_CR5D00L5XX60":            166,
	"EntityType_CR5D00E5XX60":            167,
	"EntityType_CR5D00L2XX60":            168,
	"EntityType_CR5D00E2XX60":            169,
	"EntityType_CR5D00EFGF60":            170,
	"EntityType_CR5D00P1MZ60":            171,
	"EntityType_CR5D00P2XX60":            172,
	"EntityType_CR5M00E1MC60":            173,
	"EntityType_CR5D00E1NC60":            174,
	"EntityType_CR5D00LAXX60":            175,
	"EntityType_CR5D0OFCA060":            176,
	"EntityType_T1XCS":                   177,
	"EntityType_T1EXL2":                  178,
	"EntityType_T1EX12":                  179,
	"EntityType_T1EX8":                   180,
	"EntityType_T1EH1":                   181,
	"EntityType_T1EG24":                  182,
	"EntityType_T1CH1":                   183,
	"EntityType_T1CQ4":                   184,
	"EntityType_T1SCA":                   185,
	"EntityType_T1FAN":                   186,
	"EntityType_T1PIU":                   187,
	"EntityType_T1EFI":                   188,
	"EntityType_XCA":                     189,
	"EntityType_TNU1SCC":                 190,
	"EntityType_C52MPUA":                 191,
	"EntityType_C52MPUB":                 192,
	"EntityType_LPUE":                    193,
	"EntityType_LPUF":                    194,
	"EntityType_TPA1EFI":                 195,
	"EntityType_TNT1EX8":                 196,
	"EntityType_OTHER":                   197,
}

func (x Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType) String() string {
	return proto.EnumName(Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_name, int32(x))
}

func (Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 3, 0, 0, 0, 0}
}

type Devm_MpuBoards_MpuBoard_LsRole int32

const (
	Devm_MpuBoards_MpuBoard_LsRole_UNKNOWN Devm_MpuBoards_MpuBoard_LsRole = 0
	Devm_MpuBoards_MpuBoard_LsRole_MMB     Devm_MpuBoards_MpuBoard_LsRole = 1
	Devm_MpuBoards_MpuBoard_LsRole_PLMB    Devm_MpuBoards_MpuBoard_LsRole = 2
	Devm_MpuBoards_MpuBoard_LsRole_ACMB    Devm_MpuBoards_MpuBoard_LsRole = 3
	Devm_MpuBoards_MpuBoard_LsRole_MB      Devm_MpuBoards_MpuBoard_LsRole = 4
	Devm_MpuBoards_MpuBoard_LsRole_LC      Devm_MpuBoards_MpuBoard_LsRole = 5
	Devm_MpuBoards_MpuBoard_LsRole_SYSMMB  Devm_MpuBoards_MpuBoard_LsRole = 6
	Devm_MpuBoards_MpuBoard_LsRole_SYSMB   Devm_MpuBoards_MpuBoard_LsRole = 7
)

var Devm_MpuBoards_MpuBoard_LsRole_name = map[int32]string{
	0: "LsRole_UNKNOWN",
	1: "LsRole_MMB",
	2: "LsRole_PLMB",
	3: "LsRole_ACMB",
	4: "LsRole_MB",
	5: "LsRole_LC",
	6: "LsRole_SYSMMB",
	7: "LsRole_SYSMB",
}

var Devm_MpuBoards_MpuBoard_LsRole_value = map[string]int32{
	"LsRole_UNKNOWN": 0,
	"LsRole_MMB":     1,
	"LsRole_PLMB":    2,
	"LsRole_ACMB":    3,
	"LsRole_MB":      4,
	"LsRole_LC":      5,
	"LsRole_SYSMMB":  6,
	"LsRole_SYSMB":   7,
}

func (x Devm_MpuBoards_MpuBoard_LsRole) String() string {
	return proto.EnumName(Devm_MpuBoards_MpuBoard_LsRole_name, int32(x))
}

func (Devm_MpuBoards_MpuBoard_LsRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 5, 0, 0}
}

type Devm_LpuBoards_LpuBoard_ServiceType int32

const (
	Devm_LpuBoards_LpuBoard_ServiceType_LPU Devm_LpuBoards_LpuBoard_ServiceType = 0
	Devm_LpuBoards_LpuBoard_ServiceType_RNR Devm_LpuBoards_LpuBoard_ServiceType = 1
	Devm_LpuBoards_LpuBoard_ServiceType_TSU Devm_LpuBoards_LpuBoard_ServiceType = 2
	Devm_LpuBoards_LpuBoard_ServiceType_NS  Devm_LpuBoards_LpuBoard_ServiceType = 3
	Devm_LpuBoards_LpuBoard_ServiceType_GRE Devm_LpuBoards_LpuBoard_ServiceType = 4
	Devm_LpuBoards_LpuBoard_ServiceType_VSU Devm_LpuBoards_LpuBoard_ServiceType = 5
)

var Devm_LpuBoards_LpuBoard_ServiceType_name = map[int32]string{
	0: "ServiceType_LPU",
	1: "ServiceType_RNR",
	2: "ServiceType_TSU",
	3: "ServiceType_NS",
	4: "ServiceType_GRE",
	5: "ServiceType_VSU",
}

var Devm_LpuBoards_LpuBoard_ServiceType_value = map[string]int32{
	"ServiceType_LPU": 0,
	"ServiceType_RNR": 1,
	"ServiceType_TSU": 2,
	"ServiceType_NS":  3,
	"ServiceType_GRE": 4,
	"ServiceType_VSU": 5,
}

func (x Devm_LpuBoards_LpuBoard_ServiceType) String() string {
	return proto.EnumName(Devm_LpuBoards_LpuBoard_ServiceType_name, int32(x))
}

func (Devm_LpuBoards_LpuBoard_ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 6, 0, 0}
}

type Devm_LpuBoards_LpuBoard_NextServiceType int32

const (
	Devm_LpuBoards_LpuBoard_NextServiceType_LPU Devm_LpuBoards_LpuBoard_NextServiceType = 0
	Devm_LpuBoards_LpuBoard_NextServiceType_RNR Devm_LpuBoards_LpuBoard_NextServiceType = 1
	Devm_LpuBoards_LpuBoard_NextServiceType_TSU Devm_LpuBoards_LpuBoard_NextServiceType = 2
	Devm_LpuBoards_LpuBoard_NextServiceType_NS  Devm_LpuBoards_LpuBoard_NextServiceType = 3
	Devm_LpuBoards_LpuBoard_NextServiceType_GRE Devm_LpuBoards_LpuBoard_NextServiceType = 4
	Devm_LpuBoards_LpuBoard_NextServiceType_VSU Devm_LpuBoards_LpuBoard_NextServiceType = 5
)

var Devm_LpuBoards_LpuBoard_NextServiceType_name = map[int32]string{
	0: "NextServiceType_LPU",
	1: "NextServiceType_RNR",
	2: "NextServiceType_TSU",
	3: "NextServiceType_NS",
	4: "NextServiceType_GRE",
	5: "NextServiceType_VSU",
}

var Devm_LpuBoards_LpuBoard_NextServiceType_value = map[string]int32{
	"NextServiceType_LPU": 0,
	"NextServiceType_RNR": 1,
	"NextServiceType_TSU": 2,
	"NextServiceType_NS":  3,
	"NextServiceType_GRE": 4,
	"NextServiceType_VSU": 5,
}

func (x Devm_LpuBoards_LpuBoard_NextServiceType) String() string {
	return proto.EnumName(Devm_LpuBoards_LpuBoard_NextServiceType_name, int32(x))
}

func (Devm_LpuBoards_LpuBoard_NextServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 6, 0, 1}
}

type Devm_Cards_Card_InitStatus int32

const (
	Devm_Cards_Card_InitStatus_FAIL    Devm_Cards_Card_InitStatus = 0
	Devm_Cards_Card_InitStatus_SUCCESS Devm_Cards_Card_InitStatus = 1
	Devm_Cards_Card_InitStatus_UNKNOWN Devm_Cards_Card_InitStatus = 2
)

var Devm_Cards_Card_InitStatus_name = map[int32]string{
	0: "InitStatus_FAIL",
	1: "InitStatus_SUCCESS",
	2: "InitStatus_UNKNOWN",
}

var Devm_Cards_Card_InitStatus_value = map[string]int32{
	"InitStatus_FAIL":    0,
	"InitStatus_SUCCESS": 1,
	"InitStatus_UNKNOWN": 2,
}

func (x Devm_Cards_Card_InitStatus) String() string {
	return proto.EnumName(Devm_Cards_Card_InitStatus_name, int32(x))
}

func (Devm_Cards_Card_InitStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 8, 0, 0}
}

type Devm_Cards_Card_RegisterStatus int32

const (
	Devm_Cards_Card_RegisterStatus_UNREGISTERED Devm_Cards_Card_RegisterStatus = 0
	Devm_Cards_Card_RegisterStatus_REGISTERED   Devm_Cards_Card_RegisterStatus = 1
	Devm_Cards_Card_RegisterStatus_UNKNOWN      Devm_Cards_Card_RegisterStatus = 2
)

var Devm_Cards_Card_RegisterStatus_name = map[int32]string{
	0: "RegisterStatus_UNREGISTERED",
	1: "RegisterStatus_REGISTERED",
	2: "RegisterStatus_UNKNOWN",
}

var Devm_Cards_Card_RegisterStatus_value = map[string]int32{
	"RegisterStatus_UNREGISTERED": 0,
	"RegisterStatus_REGISTERED":   1,
	"RegisterStatus_UNKNOWN":      2,
}

func (x Devm_Cards_Card_RegisterStatus) String() string {
	return proto.EnumName(Devm_Cards_Card_RegisterStatus_name, int32(x))
}

func (Devm_Cards_Card_RegisterStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 8, 0, 1}
}

type Devm_Cards_Card_Pic_LogicStatus int32

const (
	Devm_Cards_Card_Pic_LogicStatus_FAIL    Devm_Cards_Card_Pic_LogicStatus = 0
	Devm_Cards_Card_Pic_LogicStatus_SUCCESS Devm_Cards_Card_Pic_LogicStatus = 1
	Devm_Cards_Card_Pic_LogicStatus_UNKNOWN Devm_Cards_Card_Pic_LogicStatus = 2
)

var Devm_Cards_Card_Pic_LogicStatus_name = map[int32]string{
	0: "LogicStatus_FAIL",
	1: "LogicStatus_SUCCESS",
	2: "LogicStatus_UNKNOWN",
}

var Devm_Cards_Card_Pic_LogicStatus_value = map[string]int32{
	"LogicStatus_FAIL":    0,
	"LogicStatus_SUCCESS": 1,
	"LogicStatus_UNKNOWN": 2,
}

func (x Devm_Cards_Card_Pic_LogicStatus) String() string {
	return proto.EnumName(Devm_Cards_Card_Pic_LogicStatus_name, int32(x))
}

func (Devm_Cards_Card_Pic_LogicStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 8, 0, 0, 0}
}

type Devm_Ports_Port_AdminState int32

const (
	Devm_Ports_Port_AdminState_INACTIVE     Devm_Ports_Port_AdminState = 0
	Devm_Ports_Port_AdminState_ACTIVE       Devm_Ports_Port_AdminState = 1
	Devm_Ports_Port_AdminState_NOTSUPPORTED Devm_Ports_Port_AdminState = 2
)

var Devm_Ports_Port_AdminState_name = map[int32]string{
	0: "AdminState_INACTIVE",
	1: "AdminState_ACTIVE",
	2: "AdminState_NOTSUPPORTED",
}

var Devm_Ports_Port_AdminState_value = map[string]int32{
	"AdminState_INACTIVE":     0,
	"AdminState_ACTIVE":       1,
	"AdminState_NOTSUPPORTED": 2,
}

func (x Devm_Ports_Port_AdminState) String() string {
	return proto.EnumName(Devm_Ports_Port_AdminState_name, int32(x))
}

func (Devm_Ports_Port_AdminState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0}
}

type Devm_Ports_Port_Type int32

const (
	Devm_Ports_Port_Type_UNKNOWN     Devm_Ports_Port_Type = 0
	Devm_Ports_Port_Type_ETH         Devm_Ports_Port_Type = 1
	Devm_Ports_Port_Type_POS         Devm_Ports_Port_Type = 2
	Devm_Ports_Port_Type_CPOS        Devm_Ports_Port_Type = 3
	Devm_Ports_Port_Type_E1          Devm_Ports_Port_Type = 4
	Devm_Ports_Port_Type_GE          Devm_Ports_Port_Type = 5
	Devm_Ports_Port_Type_X_10GE      Devm_Ports_Port_Type = 6
	Devm_Ports_Port_Type_GF          Devm_Ports_Port_Type = 7
	Devm_Ports_Port_Type_X_10GF      Devm_Ports_Port_Type = 8
	Devm_Ports_Port_Type_X_40GF      Devm_Ports_Port_Type = 9
	Devm_Ports_Port_Type_X_10GFCOM   Devm_Ports_Port_Type = 10
	Devm_Ports_Port_Type_X_40GFSPLIT Devm_Ports_Port_Type = 11
	Devm_Ports_Port_Type_OTN         Devm_Ports_Port_Type = 12
)

var Devm_Ports_Port_Type_name = map[int32]string{
	0:  "Type_UNKNOWN",
	1:  "Type_ETH",
	2:  "Type_POS",
	3:  "Type_CPOS",
	4:  "Type_E1",
	5:  "Type_GE",
	6:  "Type_X_10GE",
	7:  "Type_GF",
	8:  "Type_X_10GF",
	9:  "Type_X_40GF",
	10: "Type_X_10GFCOM",
	11: "Type_X_40GFSPLIT",
	12: "Type_OTN",
}

var Devm_Ports_Port_Type_value = map[string]int32{
	"Type_UNKNOWN":     0,
	"Type_ETH":         1,
	"Type_POS":         2,
	"Type_CPOS":        3,
	"Type_E1":          4,
	"Type_GE":          5,
	"Type_X_10GE":      6,
	"Type_GF":          7,
	"Type_X_10GF":      8,
	"Type_X_40GF":      9,
	"Type_X_10GFCOM":   10,
	"Type_X_40GFSPLIT": 11,
	"Type_OTN":         12,
}

func (x Devm_Ports_Port_Type) String() string {
	return proto.EnumName(Devm_Ports_Port_Type_name, int32(x))
}

func (Devm_Ports_Port_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 1}
}

type Devm_Ports_Port_HardType int32

const (
	Devm_Ports_Port_HardType_UNKNOWN          Devm_Ports_Port_HardType = 0
	Devm_Ports_Port_HardType_ETHLANPORT       Devm_Ports_Port_HardType = 1
	Devm_Ports_Port_HardType_ETHWANPORT       Devm_Ports_Port_HardType = 2
	Devm_Ports_Port_HardType_ETHGEPORT        Devm_Ports_Port_HardType = 3
	Devm_Ports_Port_HardType_ETH10GEPORT      Devm_Ports_Port_HardType = 4
	Devm_Ports_Port_HardType_ETHGFPORT        Devm_Ports_Port_HardType = 5
	Devm_Ports_Port_HardType_ETH10GFPORT      Devm_Ports_Port_HardType = 6
	Devm_Ports_Port_HardType_ETH40GFPORT      Devm_Ports_Port_HardType = 7
	Devm_Ports_Port_HardType_ETH10GFCOMPORT   Devm_Ports_Port_HardType = 8
	Devm_Ports_Port_HardType_ETH40GFSPLITPORT Devm_Ports_Port_HardType = 9
	Devm_Ports_Port_HardType_ETHFEPORT        Devm_Ports_Port_HardType = 10
	Devm_Ports_Port_HardType_ETHMGEPORT       Devm_Ports_Port_HardType = 11
	Devm_Ports_Port_HardType_POSPORT          Devm_Ports_Port_HardType = 12
	Devm_Ports_Port_HardType_OTNPORT          Devm_Ports_Port_HardType = 13
	Devm_Ports_Port_HardType_CPOSPORT         Devm_Ports_Port_HardType = 14
	Devm_Ports_Port_HardType_E1PORT           Devm_Ports_Port_HardType = 15
	Devm_Ports_Port_HardType_ETHCLUSTERPORT   Devm_Ports_Port_HardType = 16
	Devm_Ports_Port_HardType_ETHPORT          Devm_Ports_Port_HardType = 17
	Devm_Ports_Port_HardType_EPORT            Devm_Ports_Port_HardType = 18
	Devm_Ports_Port_HardType_OPORT            Devm_Ports_Port_HardType = 19
)

var Devm_Ports_Port_HardType_name = map[int32]string{
	0:  "HardType_UNKNOWN",
	1:  "HardType_ETHLANPORT",
	2:  "HardType_ETHWANPORT",
	3:  "HardType_ETHGEPORT",
	4:  "HardType_ETH10GEPORT",
	5:  "HardType_ETHGFPORT",
	6:  "HardType_ETH10GFPORT",
	7:  "HardType_ETH40GFPORT",
	8:  "HardType_ETH10GFCOMPORT",
	9:  "HardType_ETH40GFSPLITPORT",
	10: "HardType_ETHFEPORT",
	11: "HardType_ETHMGEPORT",
	12: "HardType_POSPORT",
	13: "HardType_OTNPORT",
	14: "HardType_CPOSPORT",
	15: "HardType_E1PORT",
	16: "HardType_ETHCLUSTERPORT",
	17: "HardType_ETHPORT",
	18: "HardType_EPORT",
	19: "HardType_OPORT",
}

var Devm_Ports_Port_HardType_value = map[string]int32{
	"HardType_UNKNOWN":          0,
	"HardType_ETHLANPORT":       1,
	"HardType_ETHWANPORT":       2,
	"HardType_ETHGEPORT":        3,
	"HardType_ETH10GEPORT":      4,
	"HardType_ETHGFPORT":        5,
	"HardType_ETH10GFPORT":      6,
	"HardType_ETH40GFPORT":      7,
	"HardType_ETH10GFCOMPORT":   8,
	"HardType_ETH40GFSPLITPORT": 9,
	"HardType_ETHFEPORT":        10,
	"HardType_ETHMGEPORT":       11,
	"HardType_POSPORT":          12,
	"HardType_OTNPORT":          13,
	"HardType_CPOSPORT":         14,
	"HardType_E1PORT":           15,
	"HardType_ETHCLUSTERPORT":   16,
	"HardType_ETHPORT":          17,
	"HardType_EPORT":            18,
	"HardType_OPORT":            19,
}

func (x Devm_Ports_Port_HardType) String() string {
	return proto.EnumName(Devm_Ports_Port_HardType_name, int32(x))
}

func (Devm_Ports_Port_HardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2}
}

type Devm_Ports_Port_LoopbackMode int32

const (
	Devm_Ports_Port_LoopbackMode_NOLOOPBACK     Devm_Ports_Port_LoopbackMode = 0
	Devm_Ports_Port_LoopbackMode_LOCALLOOPBACK  Devm_Ports_Port_LoopbackMode = 1
	Devm_Ports_Port_LoopbackMode_REMOTELOOPBACK Devm_Ports_Port_LoopbackMode = 2
)

var Devm_Ports_Port_LoopbackMode_name = map[int32]string{
	0: "LoopbackMode_NOLOOPBACK",
	1: "LoopbackMode_LOCALLOOPBACK",
	2: "LoopbackMode_REMOTELOOPBACK",
}

var Devm_Ports_Port_LoopbackMode_value = map[string]int32{
	"LoopbackMode_NOLOOPBACK":     0,
	"LoopbackMode_LOCALLOOPBACK":  1,
	"LoopbackMode_REMOTELOOPBACK": 2,
}

func (x Devm_Ports_Port_LoopbackMode) String() string {
	return proto.EnumName(Devm_Ports_Port_LoopbackMode_name, int32(x))
}

func (Devm_Ports_Port_LoopbackMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 3}
}

type Devm_Ports_Port_MediumType int32

const (
	Devm_Ports_Port_MediumType_NOTSUPPORTED Devm_Ports_Port_MediumType = 0
	Devm_Ports_Port_MediumType_COPPER       Devm_Ports_Port_MediumType = 1
	Devm_Ports_Port_MediumType_FIBER        Devm_Ports_Port_MediumType = 2
)

var Devm_Ports_Port_MediumType_name = map[int32]string{
	0: "MediumType_NOTSUPPORTED",
	1: "MediumType_COPPER",
	2: "MediumType_FIBER",
}

var Devm_Ports_Port_MediumType_value = map[string]int32{
	"MediumType_NOTSUPPORTED": 0,
	"MediumType_COPPER":       1,
	"MediumType_FIBER":        2,
}

func (x Devm_Ports_Port_MediumType) String() string {
	return proto.EnumName(Devm_Ports_Port_MediumType_name, int32(x))
}

func (Devm_Ports_Port_MediumType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 4}
}

type Devm_Ports_Port_Ethernet_Speed int32

const (
	Devm_Ports_Port_Ethernet_Speed_X_10M    Devm_Ports_Port_Ethernet_Speed = 0
	Devm_Ports_Port_Ethernet_Speed_X_100M   Devm_Ports_Port_Ethernet_Speed = 1
	Devm_Ports_Port_Ethernet_Speed_X_1000M  Devm_Ports_Port_Ethernet_Speed = 2
	Devm_Ports_Port_Ethernet_Speed_X_2500M  Devm_Ports_Port_Ethernet_Speed = 5
	Devm_Ports_Port_Ethernet_Speed_X_10G    Devm_Ports_Port_Ethernet_Speed = 6
	Devm_Ports_Port_Ethernet_Speed_X_40G    Devm_Ports_Port_Ethernet_Speed = 7
	Devm_Ports_Port_Ethernet_Speed_X_100G   Devm_Ports_Port_Ethernet_Speed = 8
	Devm_Ports_Port_Ethernet_Speed_AUTO     Devm_Ports_Port_Ethernet_Speed = 9
	Devm_Ports_Port_Ethernet_Speed_X_1G     Devm_Ports_Port_Ethernet_Speed = 10
	Devm_Ports_Port_Ethernet_Speed_X_2G     Devm_Ports_Port_Ethernet_Speed = 11
	Devm_Ports_Port_Ethernet_Speed_X_3G     Devm_Ports_Port_Ethernet_Speed = 12
	Devm_Ports_Port_Ethernet_Speed_X_4G     Devm_Ports_Port_Ethernet_Speed = 13
	Devm_Ports_Port_Ethernet_Speed_X_1X_25G Devm_Ports_Port_Ethernet_Speed = 14
	Devm_Ports_Port_Ethernet_Speed_X_2X_5G  Devm_Ports_Port_Ethernet_Speed = 15
	Devm_Ports_Port_Ethernet_Speed_X_3X_75G Devm_Ports_Port_Ethernet_Speed = 16
	Devm_Ports_Port_Ethernet_Speed_X_5G     Devm_Ports_Port_Ethernet_Speed = 17
	Devm_Ports_Port_Ethernet_Speed_X_15G    Devm_Ports_Port_Ethernet_Speed = 18
	Devm_Ports_Port_Ethernet_Speed_X_20G    Devm_Ports_Port_Ethernet_Speed = 19
	Devm_Ports_Port_Ethernet_Speed_X_25G    Devm_Ports_Port_Ethernet_Speed = 20
	Devm_Ports_Port_Ethernet_Speed_X_30G    Devm_Ports_Port_Ethernet_Speed = 21
	Devm_Ports_Port_Ethernet_Speed_X_35G    Devm_Ports_Port_Ethernet_Speed = 22
	Devm_Ports_Port_Ethernet_Speed_X_45G    Devm_Ports_Port_Ethernet_Speed = 24
	Devm_Ports_Port_Ethernet_Speed_X_50G    Devm_Ports_Port_Ethernet_Speed = 25
	Devm_Ports_Port_Ethernet_Speed_X_55G    Devm_Ports_Port_Ethernet_Speed = 26
	Devm_Ports_Port_Ethernet_Speed_X_60G    Devm_Ports_Port_Ethernet_Speed = 27
	Devm_Ports_Port_Ethernet_Speed_X_65G    Devm_Ports_Port_Ethernet_Speed = 28
	Devm_Ports_Port_Ethernet_Speed_X_70G    Devm_Ports_Port_Ethernet_Speed = 29
	Devm_Ports_Port_Ethernet_Speed_X_75G    Devm_Ports_Port_Ethernet_Speed = 30
	Devm_Ports_Port_Ethernet_Speed_X_80G    Devm_Ports_Port_Ethernet_Speed = 31
	Devm_Ports_Port_Ethernet_Speed_X_85G    Devm_Ports_Port_Ethernet_Speed = 32
	Devm_Ports_Port_Ethernet_Speed_X_90G    Devm_Ports_Port_Ethernet_Speed = 33
	Devm_Ports_Port_Ethernet_Speed_X_95G    Devm_Ports_Port_Ethernet_Speed = 34
	Devm_Ports_Port_Ethernet_Speed_X_0G     Devm_Ports_Port_Ethernet_Speed = 35
	Devm_Ports_Port_Ethernet_Speed_X_400G   Devm_Ports_Port_Ethernet_Speed = 36
)

var Devm_Ports_Port_Ethernet_Speed_name = map[int32]string{
	0:  "Speed_X_10M",
	1:  "Speed_X_100M",
	2:  "Speed_X_1000M",
	5:  "Speed_X_2500M",
	6:  "Speed_X_10G",
	7:  "Speed_X_40G",
	8:  "Speed_X_100G",
	9:  "Speed_AUTO",
	10: "Speed_X_1G",
	11: "Speed_X_2G",
	12: "Speed_X_3G",
	13: "Speed_X_4G",
	14: "Speed_X_1X_25G",
	15: "Speed_X_2X_5G",
	16: "Speed_X_3X_75G",
	17: "Speed_X_5G",
	18: "Speed_X_15G",
	19: "Speed_X_20G",
	20: "Speed_X_25G",
	21: "Speed_X_30G",
	22: "Speed_X_35G",
	24: "Speed_X_45G",
	25: "Speed_X_50G",
	26: "Speed_X_55G",
	27: "Speed_X_60G",
	28: "Speed_X_65G",
	29: "Speed_X_70G",
	30: "Speed_X_75G",
	31: "Speed_X_80G",
	32: "Speed_X_85G",
	33: "Speed_X_90G",
	34: "Speed_X_95G",
	35: "Speed_X_0G",
	36: "Speed_X_400G",
}

var Devm_Ports_Port_Ethernet_Speed_value = map[string]int32{
	"Speed_X_10M":    0,
	"Speed_X_100M":   1,
	"Speed_X_1000M":  2,
	"Speed_X_2500M":  5,
	"Speed_X_10G":    6,
	"Speed_X_40G":    7,
	"Speed_X_100G":   8,
	"Speed_AUTO":     9,
	"Speed_X_1G":     10,
	"Speed_X_2G":     11,
	"Speed_X_3G":     12,
	"Speed_X_4G":     13,
	"Speed_X_1X_25G": 14,
	"Speed_X_2X_5G":  15,
	"Speed_X_3X_75G": 16,
	"Speed_X_5G":     17,
	"Speed_X_15G":    18,
	"Speed_X_20G":    19,
	"Speed_X_25G":    20,
	"Speed_X_30G":    21,
	"Speed_X_35G":    22,
	"Speed_X_45G":    24,
	"Speed_X_50G":    25,
	"Speed_X_55G":    26,
	"Speed_X_60G":    27,
	"Speed_X_65G":    28,
	"Speed_X_70G":    29,
	"Speed_X_75G":    30,
	"Speed_X_80G":    31,
	"Speed_X_85G":    32,
	"Speed_X_90G":    33,
	"Speed_X_95G":    34,
	"Speed_X_0G":     35,
	"Speed_X_400G":   36,
}

func (x Devm_Ports_Port_Ethernet_Speed) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_Speed_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_Speed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 0}
}

type Devm_Ports_Port_Ethernet_Duplex int32

const (
	Devm_Ports_Port_Ethernet_Duplex_AUTO Devm_Ports_Port_Ethernet_Duplex = 0
	Devm_Ports_Port_Ethernet_Duplex_HALF Devm_Ports_Port_Ethernet_Duplex = 1
	Devm_Ports_Port_Ethernet_Duplex_FULL Devm_Ports_Port_Ethernet_Duplex = 2
)

var Devm_Ports_Port_Ethernet_Duplex_name = map[int32]string{
	0: "Duplex_AUTO",
	1: "Duplex_HALF",
	2: "Duplex_FULL",
}

var Devm_Ports_Port_Ethernet_Duplex_value = map[string]int32{
	"Duplex_AUTO": 0,
	"Duplex_HALF": 1,
	"Duplex_FULL": 2,
}

func (x Devm_Ports_Port_Ethernet_Duplex) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_Duplex_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_Duplex) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 1}
}

type Devm_Ports_Port_Ethernet_Negotiation int32

const (
	Devm_Ports_Port_Ethernet_Negotiation_DISABLED Devm_Ports_Port_Ethernet_Negotiation = 0
	Devm_Ports_Port_Ethernet_Negotiation_ENABLED  Devm_Ports_Port_Ethernet_Negotiation = 1
	Devm_Ports_Port_Ethernet_Negotiation_DEFAULT  Devm_Ports_Port_Ethernet_Negotiation = 255
)

var Devm_Ports_Port_Ethernet_Negotiation_name = map[int32]string{
	0:   "Negotiation_DISABLED",
	1:   "Negotiation_ENABLED",
	255: "Negotiation_DEFAULT",
}

var Devm_Ports_Port_Ethernet_Negotiation_value = map[string]int32{
	"Negotiation_DISABLED": 0,
	"Negotiation_ENABLED":  1,
	"Negotiation_DEFAULT":  255,
}

func (x Devm_Ports_Port_Ethernet_Negotiation) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_Negotiation_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_Negotiation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 2}
}

type Devm_Ports_Port_Ethernet_NegotiationMode int32

const (
	Devm_Ports_Port_Ethernet_NegotiationMode_SLAVE  Devm_Ports_Port_Ethernet_NegotiationMode = 0
	Devm_Ports_Port_Ethernet_NegotiationMode_NA     Devm_Ports_Port_Ethernet_NegotiationMode = 1
	Devm_Ports_Port_Ethernet_NegotiationMode_AUTO   Devm_Ports_Port_Ethernet_NegotiationMode = 2
	Devm_Ports_Port_Ethernet_NegotiationMode_MASTER Devm_Ports_Port_Ethernet_NegotiationMode = 3
)

var Devm_Ports_Port_Ethernet_NegotiationMode_name = map[int32]string{
	0: "NegotiationMode_SLAVE",
	1: "NegotiationMode_NA",
	2: "NegotiationMode_AUTO",
	3: "NegotiationMode_MASTER",
}

var Devm_Ports_Port_Ethernet_NegotiationMode_value = map[string]int32{
	"NegotiationMode_SLAVE":  0,
	"NegotiationMode_NA":     1,
	"NegotiationMode_AUTO":   2,
	"NegotiationMode_MASTER": 3,
}

func (x Devm_Ports_Port_Ethernet_NegotiationMode) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_NegotiationMode_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_NegotiationMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 3}
}

type Devm_Ports_Port_Ethernet_TransMode int32

const (
	Devm_Ports_Port_Ethernet_TransMode_LANX_MODE Devm_Ports_Port_Ethernet_TransMode = 0
	Devm_Ports_Port_Ethernet_TransMode_WANX_MODE Devm_Ports_Port_Ethernet_TransMode = 1
	Devm_Ports_Port_Ethernet_TransMode_OTNX_MODE Devm_Ports_Port_Ethernet_TransMode = 2
)

var Devm_Ports_Port_Ethernet_TransMode_name = map[int32]string{
	0: "TransMode_LANX_MODE",
	1: "TransMode_WANX_MODE",
	2: "TransMode_OTNX_MODE",
}

var Devm_Ports_Port_Ethernet_TransMode_value = map[string]int32{
	"TransMode_LANX_MODE": 0,
	"TransMode_WANX_MODE": 1,
	"TransMode_OTNX_MODE": 2,
}

func (x Devm_Ports_Port_Ethernet_TransMode) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_TransMode_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_TransMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 4}
}

type Devm_Ports_Port_Ethernet_SpeedSwitchMode int32

const (
	Devm_Ports_Port_Ethernet_SpeedSwitchMode_MANUAL Devm_Ports_Port_Ethernet_SpeedSwitchMode = 0
	Devm_Ports_Port_Ethernet_SpeedSwitchMode_AUTO   Devm_Ports_Port_Ethernet_SpeedSwitchMode = 1
)

var Devm_Ports_Port_Ethernet_SpeedSwitchMode_name = map[int32]string{
	0: "SpeedSwitchMode_MANUAL",
	1: "SpeedSwitchMode_AUTO",
}

var Devm_Ports_Port_Ethernet_SpeedSwitchMode_value = map[string]int32{
	"SpeedSwitchMode_MANUAL": 0,
	"SpeedSwitchMode_AUTO":   1,
}

func (x Devm_Ports_Port_Ethernet_SpeedSwitchMode) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_SpeedSwitchMode_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_SpeedSwitchMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 5}
}

type Devm_Ports_Port_Ethernet_BitError int32

const (
	Devm_Ports_Port_Ethernet_BitError_CRC    Devm_Ports_Port_Ethernet_BitError = 0
	Devm_Ports_Port_Ethernet_BitError_PREFEC Devm_Ports_Port_Ethernet_BitError = 1
)

var Devm_Ports_Port_Ethernet_BitError_name = map[int32]string{
	0: "BitError_CRC",
	1: "BitError_PREFEC",
}

var Devm_Ports_Port_Ethernet_BitError_value = map[string]int32{
	"BitError_CRC":    0,
	"BitError_PREFEC": 1,
}

func (x Devm_Ports_Port_Ethernet_BitError) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_BitError_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_BitError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 6}
}

type Devm_Ports_Port_Ethernet_TriggerTimeType int32

const (
	Devm_Ports_Port_Ethernet_TriggerTimeType_SECOND  Devm_Ports_Port_Ethernet_TriggerTimeType = 0
	Devm_Ports_Port_Ethernet_TriggerTimeType_X_200MS Devm_Ports_Port_Ethernet_TriggerTimeType = 1
)

var Devm_Ports_Port_Ethernet_TriggerTimeType_name = map[int32]string{
	0: "TriggerTimeType_SECOND",
	1: "TriggerTimeType_X_200MS",
}

var Devm_Ports_Port_Ethernet_TriggerTimeType_value = map[string]int32{
	"TriggerTimeType_SECOND":  0,
	"TriggerTimeType_X_200MS": 1,
}

func (x Devm_Ports_Port_Ethernet_TriggerTimeType) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_TriggerTimeType_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_TriggerTimeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 7}
}

type Devm_Ports_Port_Ethernet_TxPowerCfgType int32

const (
	Devm_Ports_Port_Ethernet_TxPowerCfgType_TXX_POWERX_TARGET Devm_Ports_Port_Ethernet_TxPowerCfgType = 0
	Devm_Ports_Port_Ethernet_TxPowerCfgType_ATTENUATION       Devm_Ports_Port_Ethernet_TxPowerCfgType = 1
)

var Devm_Ports_Port_Ethernet_TxPowerCfgType_name = map[int32]string{
	0: "TxPowerCfgType_TXX_POWERX_TARGET",
	1: "TxPowerCfgType_ATTENUATION",
}

var Devm_Ports_Port_Ethernet_TxPowerCfgType_value = map[string]int32{
	"TxPowerCfgType_TXX_POWERX_TARGET": 0,
	"TxPowerCfgType_ATTENUATION":       1,
}

func (x Devm_Ports_Port_Ethernet_TxPowerCfgType) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_TxPowerCfgType_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_TxPowerCfgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 8}
}

type Devm_Ports_Port_Ethernet_FecMode int32

const (
	Devm_Ports_Port_Ethernet_FecMode_NONE           Devm_Ports_Port_Ethernet_FecMode = 0
	Devm_Ports_Port_Ethernet_FecMode_STANDARD       Devm_Ports_Port_Ethernet_FecMode = 1
	Devm_Ports_Port_Ethernet_FecMode_ENHANCED       Devm_Ports_Port_Ethernet_FecMode = 2
	Devm_Ports_Port_Ethernet_FecMode_ENHANCEDX_IX_7 Devm_Ports_Port_Ethernet_FecMode = 3
	Devm_Ports_Port_Ethernet_FecMode_ENHANCEDX_IX_4 Devm_Ports_Port_Ethernet_FecMode = 4
	Devm_Ports_Port_Ethernet_FecMode_LHAULX_SD      Devm_Ports_Port_Ethernet_FecMode = 5
)

var Devm_Ports_Port_Ethernet_FecMode_name = map[int32]string{
	0: "FecMode_NONE",
	1: "FecMode_STANDARD",
	2: "FecMode_ENHANCED",
	3: "FecMode_ENHANCEDX_IX_7",
	4: "FecMode_ENHANCEDX_IX_4",
	5: "FecMode_LHAULX_SD",
}

var Devm_Ports_Port_Ethernet_FecMode_value = map[string]int32{
	"FecMode_NONE":           0,
	"FecMode_STANDARD":       1,
	"FecMode_ENHANCED":       2,
	"FecMode_ENHANCEDX_IX_7": 3,
	"FecMode_ENHANCEDX_IX_4": 4,
	"FecMode_LHAULX_SD":      5,
}

func (x Devm_Ports_Port_Ethernet_FecMode) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_FecMode_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_FecMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 9}
}

type Devm_Ports_Port_Ethernet_EthFecMode int32

const (
	Devm_Ports_Port_Ethernet_EthFecMode_DISABLE  Devm_Ports_Port_Ethernet_EthFecMode = 0
	Devm_Ports_Port_Ethernet_EthFecMode_STANDARD Devm_Ports_Port_Ethernet_EthFecMode = 1
	Devm_Ports_Port_Ethernet_EthFecMode_NONE     Devm_Ports_Port_Ethernet_EthFecMode = 2
)

var Devm_Ports_Port_Ethernet_EthFecMode_name = map[int32]string{
	0: "EthFecMode_DISABLE",
	1: "EthFecMode_STANDARD",
	2: "EthFecMode_NONE",
}

var Devm_Ports_Port_Ethernet_EthFecMode_value = map[string]int32{
	"EthFecMode_DISABLE":  0,
	"EthFecMode_STANDARD": 1,
	"EthFecMode_NONE":     2,
}

func (x Devm_Ports_Port_Ethernet_EthFecMode) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_EthFecMode_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_EthFecMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 10}
}

type Devm_Ports_Port_Ethernet_Flowctl int32

const (
	Devm_Ports_Port_Ethernet_Flowctl_ALLX_DISABLED    Devm_Ports_Port_Ethernet_Flowctl = 0
	Devm_Ports_Port_Ethernet_Flowctl_RECEIVEX_ENABLED Devm_Ports_Port_Ethernet_Flowctl = 1
	Devm_Ports_Port_Ethernet_Flowctl_SENDX_ENABLED    Devm_Ports_Port_Ethernet_Flowctl = 2
	Devm_Ports_Port_Ethernet_Flowctl_ALLX_ENABLED     Devm_Ports_Port_Ethernet_Flowctl = 3
	Devm_Ports_Port_Ethernet_Flowctl_DEFAULTX_CONFIG  Devm_Ports_Port_Ethernet_Flowctl = 9
)

var Devm_Ports_Port_Ethernet_Flowctl_name = map[int32]string{
	0: "Flowctl_ALLX_DISABLED",
	1: "Flowctl_RECEIVEX_ENABLED",
	2: "Flowctl_SENDX_ENABLED",
	3: "Flowctl_ALLX_ENABLED",
	9: "Flowctl_DEFAULTX_CONFIG",
}

var Devm_Ports_Port_Ethernet_Flowctl_value = map[string]int32{
	"Flowctl_ALLX_DISABLED":    0,
	"Flowctl_RECEIVEX_ENABLED": 1,
	"Flowctl_SENDX_ENABLED":    2,
	"Flowctl_ALLX_ENABLED":     3,
	"Flowctl_DEFAULTX_CONFIG":  9,
}

func (x Devm_Ports_Port_Ethernet_Flowctl) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_Flowctl_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_Flowctl) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 11}
}

type Devm_Ports_Port_Ethernet_GfMediaType int32

const (
	Devm_Ports_Port_Ethernet_GfMediaType_AUTO      Devm_Ports_Port_Ethernet_GfMediaType = 0
	Devm_Ports_Port_Ethernet_GfMediaType_FIBER1000 Devm_Ports_Port_Ethernet_GfMediaType = 1
	Devm_Ports_Port_Ethernet_GfMediaType_FIBER100  Devm_Ports_Port_Ethernet_GfMediaType = 2
	Devm_Ports_Port_Ethernet_GfMediaType_COPPER    Devm_Ports_Port_Ethernet_GfMediaType = 3
)

var Devm_Ports_Port_Ethernet_GfMediaType_name = map[int32]string{
	0: "GfMediaType_AUTO",
	1: "GfMediaType_FIBER1000",
	2: "GfMediaType_FIBER100",
	3: "GfMediaType_COPPER",
}

var Devm_Ports_Port_Ethernet_GfMediaType_value = map[string]int32{
	"GfMediaType_AUTO":      0,
	"GfMediaType_FIBER1000": 1,
	"GfMediaType_FIBER100":  2,
	"GfMediaType_COPPER":    3,
}

func (x Devm_Ports_Port_Ethernet_GfMediaType) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_GfMediaType_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_GfMediaType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 12}
}

type Devm_Ports_Port_Ethernet_HoldUp int32

const (
	Devm_Ports_Port_Ethernet_HoldUp_DISABLED Devm_Ports_Port_Ethernet_HoldUp = 0
	Devm_Ports_Port_Ethernet_HoldUp_ENABLED  Devm_Ports_Port_Ethernet_HoldUp = 1
)

var Devm_Ports_Port_Ethernet_HoldUp_name = map[int32]string{
	0: "HoldUp_DISABLED",
	1: "HoldUp_ENABLED",
}

var Devm_Ports_Port_Ethernet_HoldUp_value = map[string]int32{
	"HoldUp_DISABLED": 0,
	"HoldUp_ENABLED":  1,
}

func (x Devm_Ports_Port_Ethernet_HoldUp) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_HoldUp_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_HoldUp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 13}
}

type Devm_Ports_Port_Ethernet_Txipg int32

const (
	Devm_Ports_Port_Ethernet_Txipg_SHRINK      Devm_Ports_Port_Ethernet_Txipg = 0
	Devm_Ports_Port_Ethernet_Txipg_NONX_SHRINK Devm_Ports_Port_Ethernet_Txipg = 1
)

var Devm_Ports_Port_Ethernet_Txipg_name = map[int32]string{
	0: "Txipg_SHRINK",
	1: "Txipg_NONX_SHRINK",
}

var Devm_Ports_Port_Ethernet_Txipg_value = map[string]int32{
	"Txipg_SHRINK":      0,
	"Txipg_NONX_SHRINK": 1,
}

func (x Devm_Ports_Port_Ethernet_Txipg) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_Txipg_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_Txipg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 14}
}

type Devm_Ports_Port_Ethernet_SwitchSpeed int32

const (
	Devm_Ports_Port_Ethernet_SwitchSpeed_UNDO  Devm_Ports_Port_Ethernet_SwitchSpeed = 0
	Devm_Ports_Port_Ethernet_SwitchSpeed_X_1G  Devm_Ports_Port_Ethernet_SwitchSpeed = 1
	Devm_Ports_Port_Ethernet_SwitchSpeed_X_10G Devm_Ports_Port_Ethernet_SwitchSpeed = 10
	Devm_Ports_Port_Ethernet_SwitchSpeed_X_25G Devm_Ports_Port_Ethernet_SwitchSpeed = 25
)

var Devm_Ports_Port_Ethernet_SwitchSpeed_name = map[int32]string{
	0:  "SwitchSpeed_UNDO",
	1:  "SwitchSpeed_X_1G",
	10: "SwitchSpeed_X_10G",
	25: "SwitchSpeed_X_25G",
}

var Devm_Ports_Port_Ethernet_SwitchSpeed_value = map[string]int32{
	"SwitchSpeed_UNDO":  0,
	"SwitchSpeed_X_1G":  1,
	"SwitchSpeed_X_10G": 10,
	"SwitchSpeed_X_25G": 25,
}

func (x Devm_Ports_Port_Ethernet_SwitchSpeed) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_SwitchSpeed_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_SwitchSpeed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 15}
}

type Devm_Ports_Port_Ethernet_PromiscuousMode int32

const (
	Devm_Ports_Port_Ethernet_PromiscuousMode_OFF Devm_Ports_Port_Ethernet_PromiscuousMode = 0
	Devm_Ports_Port_Ethernet_PromiscuousMode_ON  Devm_Ports_Port_Ethernet_PromiscuousMode = 1
)

var Devm_Ports_Port_Ethernet_PromiscuousMode_name = map[int32]string{
	0: "PromiscuousMode_OFF",
	1: "PromiscuousMode_ON",
}

var Devm_Ports_Port_Ethernet_PromiscuousMode_value = map[string]int32{
	"PromiscuousMode_OFF": 0,
	"PromiscuousMode_ON":  1,
}

func (x Devm_Ports_Port_Ethernet_PromiscuousMode) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_PromiscuousMode_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_PromiscuousMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 16}
}

type Devm_Ports_Port_Ethernet_FlexphySpeed int32

const (
	Devm_Ports_Port_Ethernet_INVALID_ENUM_VALUE_FlexphySpeed Devm_Ports_Port_Ethernet_FlexphySpeed = 0
	Devm_Ports_Port_Ethernet_FlexphySpeed_X_50GE             Devm_Ports_Port_Ethernet_FlexphySpeed = 50
	Devm_Ports_Port_Ethernet_FlexphySpeed_X_100GE            Devm_Ports_Port_Ethernet_FlexphySpeed = 100
)

var Devm_Ports_Port_Ethernet_FlexphySpeed_name = map[int32]string{
	0:   "INVALID_ENUM_VALUE_FlexphySpeed",
	50:  "FlexphySpeed_X_50GE",
	100: "FlexphySpeed_X_100GE",
}

var Devm_Ports_Port_Ethernet_FlexphySpeed_value = map[string]int32{
	"INVALID_ENUM_VALUE_FlexphySpeed": 0,
	"FlexphySpeed_X_50GE":             50,
	"FlexphySpeed_X_100GE":            100,
}

func (x Devm_Ports_Port_Ethernet_FlexphySpeed) String() string {
	return proto.EnumName(Devm_Ports_Port_Ethernet_FlexphySpeed_name, int32(x))
}

func (Devm_Ports_Port_Ethernet_FlexphySpeed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0, 17}
}

type Devm_Ports_Port_Laser_AutoShutEnable int32

const (
	Devm_Ports_Port_Laser_AutoShutEnable_DISABLE Devm_Ports_Port_Laser_AutoShutEnable = 0
	Devm_Ports_Port_Laser_AutoShutEnable_ENABLE  Devm_Ports_Port_Laser_AutoShutEnable = 1
)

var Devm_Ports_Port_Laser_AutoShutEnable_name = map[int32]string{
	0: "AutoShutEnable_DISABLE",
	1: "AutoShutEnable_ENABLE",
}

var Devm_Ports_Port_Laser_AutoShutEnable_value = map[string]int32{
	"AutoShutEnable_DISABLE": 0,
	"AutoShutEnable_ENABLE":  1,
}

func (x Devm_Ports_Port_Laser_AutoShutEnable) String() string {
	return proto.EnumName(Devm_Ports_Port_Laser_AutoShutEnable_name, int32(x))
}

func (Devm_Ports_Port_Laser_AutoShutEnable) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 1, 0}
}

type Devm_Ports_Port_Laser_Status int32

const (
	Devm_Ports_Port_Laser_Status_ON      Devm_Ports_Port_Laser_Status = 0
	Devm_Ports_Port_Laser_Status_OFF     Devm_Ports_Port_Laser_Status = 1
	Devm_Ports_Port_Laser_Status_OFFLINE Devm_Ports_Port_Laser_Status = 2
)

var Devm_Ports_Port_Laser_Status_name = map[int32]string{
	0: "Status_ON",
	1: "Status_OFF",
	2: "Status_OFFLINE",
}

var Devm_Ports_Port_Laser_Status_value = map[string]int32{
	"Status_ON":      0,
	"Status_OFF":     1,
	"Status_OFFLINE": 2,
}

func (x Devm_Ports_Port_Laser_Status) String() string {
	return proto.EnumName(Devm_Ports_Port_Laser_Status_name, int32(x))
}

func (Devm_Ports_Port_Laser_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 1, 1}
}

type Devm_Ports_Port_OpticalModule_TransMode int32

const (
	Devm_Ports_Port_OpticalModule_TransMode_UNKNOWN      Devm_Ports_Port_OpticalModule_TransMode = 0
	Devm_Ports_Port_OpticalModule_TransMode_SINGLEX_MODE Devm_Ports_Port_OpticalModule_TransMode = 1
	Devm_Ports_Port_OpticalModule_TransMode_MULTIX_MODE  Devm_Ports_Port_OpticalModule_TransMode = 2
	Devm_Ports_Port_OpticalModule_TransMode_COPPERX_MODE Devm_Ports_Port_OpticalModule_TransMode = 3
)

var Devm_Ports_Port_OpticalModule_TransMode_name = map[int32]string{
	0: "TransMode_UNKNOWN",
	1: "TransMode_SINGLEX_MODE",
	2: "TransMode_MULTIX_MODE",
	3: "TransMode_COPPERX_MODE",
}

var Devm_Ports_Port_OpticalModule_TransMode_value = map[string]int32{
	"TransMode_UNKNOWN":      0,
	"TransMode_SINGLEX_MODE": 1,
	"TransMode_MULTIX_MODE":  2,
	"TransMode_COPPERX_MODE": 3,
}

func (x Devm_Ports_Port_OpticalModule_TransMode) String() string {
	return proto.EnumName(Devm_Ports_Port_OpticalModule_TransMode_name, int32(x))
}

func (Devm_Ports_Port_OpticalModule_TransMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2, 0}
}

type Devm_Ports_Port_OpticalModule_Type int32

const (
	Devm_Ports_Port_OpticalModule_Type_UNKNOWN     Devm_Ports_Port_OpticalModule_Type = 0
	Devm_Ports_Port_OpticalModule_Type_SC          Devm_Ports_Port_OpticalModule_Type = 1
	Devm_Ports_Port_OpticalModule_Type_GBIC        Devm_Ports_Port_OpticalModule_Type = 2
	Devm_Ports_Port_OpticalModule_Type_SFP         Devm_Ports_Port_OpticalModule_Type = 3
	Devm_Ports_Port_OpticalModule_Type_ESFP        Devm_Ports_Port_OpticalModule_Type = 4
	Devm_Ports_Port_OpticalModule_Type_COPPER      Devm_Ports_Port_OpticalModule_Type = 5
	Devm_Ports_Port_OpticalModule_Type_XFP         Devm_Ports_Port_OpticalModule_Type = 6
	Devm_Ports_Port_OpticalModule_Type_XENPAK      Devm_Ports_Port_OpticalModule_Type = 7
	Devm_Ports_Port_OpticalModule_Type_TRANSPONDER Devm_Ports_Port_OpticalModule_Type = 8
	Devm_Ports_Port_OpticalModule_Type_CFP         Devm_Ports_Port_OpticalModule_Type = 9
	Devm_Ports_Port_OpticalModule_Type_SMB         Devm_Ports_Port_OpticalModule_Type = 10
	Devm_Ports_Port_OpticalModule_Type_SFPX_PLUS   Devm_Ports_Port_OpticalModule_Type = 11
	Devm_Ports_Port_OpticalModule_Type_CXP         Devm_Ports_Port_OpticalModule_Type = 12
	Devm_Ports_Port_OpticalModule_Type_QSFP        Devm_Ports_Port_OpticalModule_Type = 13
	Devm_Ports_Port_OpticalModule_Type_QSFPX_PLUS  Devm_Ports_Port_OpticalModule_Type = 14
	Devm_Ports_Port_OpticalModule_Type_CFP2        Devm_Ports_Port_OpticalModule_Type = 15
	Devm_Ports_Port_OpticalModule_Type_GPS         Devm_Ports_Port_OpticalModule_Type = 16
	Devm_Ports_Port_OpticalModule_Type_CSFP        Devm_Ports_Port_OpticalModule_Type = 17
	Devm_Ports_Port_OpticalModule_Type_QSFP28      Devm_Ports_Port_OpticalModule_Type = 21
	Devm_Ports_Port_OpticalModule_Type_GPONSFP     Devm_Ports_Port_OpticalModule_Type = 23
	Devm_Ports_Port_OpticalModule_Type_DWDMSFP     Devm_Ports_Port_OpticalModule_Type = 24
	Devm_Ports_Port_OpticalModule_Type_CLOCKSFP    Devm_Ports_Port_OpticalModule_Type = 25
	Devm_Ports_Port_OpticalModule_Type_SFP28       Devm_Ports_Port_OpticalModule_Type = 26
	Devm_Ports_Port_OpticalModule_Type_CFP2DCO     Devm_Ports_Port_OpticalModule_Type = 27
)

var Devm_Ports_Port_OpticalModule_Type_name = map[int32]string{
	0:  "Type_UNKNOWN",
	1:  "Type_SC",
	2:  "Type_GBIC",
	3:  "Type_SFP",
	4:  "Type_ESFP",
	5:  "Type_COPPER",
	6:  "Type_XFP",
	7:  "Type_XENPAK",
	8:  "Type_TRANSPONDER",
	9:  "Type_CFP",
	10: "Type_SMB",
	11: "Type_SFPX_PLUS",
	12: "Type_CXP",
	13: "Type_QSFP",
	14: "Type_QSFPX_PLUS",
	15: "Type_CFP2",
	16: "Type_GPS",
	17: "Type_CSFP",
	21: "Type_QSFP28",
	23: "Type_GPONSFP",
	24: "Type_DWDMSFP",
	25: "Type_CLOCKSFP",
	26: "Type_SFP28",
	27: "Type_CFP2DCO",
}

var Devm_Ports_Port_OpticalModule_Type_value = map[string]int32{
	"Type_UNKNOWN":     0,
	"Type_SC":          1,
	"Type_GBIC":        2,
	"Type_SFP":         3,
	"Type_ESFP":        4,
	"Type_COPPER":      5,
	"Type_XFP":         6,
	"Type_XENPAK":      7,
	"Type_TRANSPONDER": 8,
	"Type_CFP":         9,
	"Type_SMB":         10,
	"Type_SFPX_PLUS":   11,
	"Type_CXP":         12,
	"Type_QSFP":        13,
	"Type_QSFPX_PLUS":  14,
	"Type_CFP2":        15,
	"Type_GPS":         16,
	"Type_CSFP":        17,
	"Type_QSFP28":      21,
	"Type_GPONSFP":     23,
	"Type_DWDMSFP":     24,
	"Type_CLOCKSFP":    25,
	"Type_SFP28":       26,
	"Type_CFP2DCO":     27,
}

func (x Devm_Ports_Port_OpticalModule_Type) String() string {
	return proto.EnumName(Devm_Ports_Port_OpticalModule_Type_name, int32(x))
}

func (Devm_Ports_Port_OpticalModule_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2, 1}
}

type Devm_Ports_Port_OpticalModule_FiberType int32

const (
	Devm_Ports_Port_OpticalModule_FiberType_UNKNOWN                     Devm_Ports_Port_OpticalModule_FiberType = 0
	Devm_Ports_Port_OpticalModule_FiberType_SC                          Devm_Ports_Port_OpticalModule_FiberType = 1
	Devm_Ports_Port_OpticalModule_FiberType_STYLEX_1X_COPPERX_CONNECTOR Devm_Ports_Port_OpticalModule_FiberType = 2
	Devm_Ports_Port_OpticalModule_FiberType_STYLEX_2X_COPPERX_CONNECTOR Devm_Ports_Port_OpticalModule_FiberType = 3
	Devm_Ports_Port_OpticalModule_FiberType_BNCX_TNC                    Devm_Ports_Port_OpticalModule_FiberType = 4
	Devm_Ports_Port_OpticalModule_FiberType_COAXIALX_HEADERS            Devm_Ports_Port_OpticalModule_FiberType = 5
	Devm_Ports_Port_OpticalModule_FiberType_FIBERX_JACK                 Devm_Ports_Port_OpticalModule_FiberType = 6
	Devm_Ports_Port_OpticalModule_FiberType_LC                          Devm_Ports_Port_OpticalModule_FiberType = 7
	Devm_Ports_Port_OpticalModule_FiberType_MTX_RJ                      Devm_Ports_Port_OpticalModule_FiberType = 8
	Devm_Ports_Port_OpticalModule_FiberType_MU                          Devm_Ports_Port_OpticalModule_FiberType = 9
	Devm_Ports_Port_OpticalModule_FiberType_SG                          Devm_Ports_Port_OpticalModule_FiberType = 10
	Devm_Ports_Port_OpticalModule_FiberType_OPTICALX_PIGTAIL            Devm_Ports_Port_OpticalModule_FiberType = 11
	Devm_Ports_Port_OpticalModule_FiberType_HSSDCII                     Devm_Ports_Port_OpticalModule_FiberType = 12
	Devm_Ports_Port_OpticalModule_FiberType_COPPERX_PIGTAIL             Devm_Ports_Port_OpticalModule_FiberType = 13
	Devm_Ports_Port_OpticalModule_FiberType_MPO                         Devm_Ports_Port_OpticalModule_FiberType = 14
)

var Devm_Ports_Port_OpticalModule_FiberType_name = map[int32]string{
	0:  "FiberType_UNKNOWN",
	1:  "FiberType_SC",
	2:  "FiberType_STYLEX_1X_COPPERX_CONNECTOR",
	3:  "FiberType_STYLEX_2X_COPPERX_CONNECTOR",
	4:  "FiberType_BNCX_TNC",
	5:  "FiberType_COAXIALX_HEADERS",
	6:  "FiberType_FIBERX_JACK",
	7:  "FiberType_LC",
	8:  "FiberType_MTX_RJ",
	9:  "FiberType_MU",
	10: "FiberType_SG",
	11: "FiberType_OPTICALX_PIGTAIL",
	12: "FiberType_HSSDCII",
	13: "FiberType_COPPERX_PIGTAIL",
	14: "FiberType_MPO",
}

var Devm_Ports_Port_OpticalModule_FiberType_value = map[string]int32{
	"FiberType_UNKNOWN":                     0,
	"FiberType_SC":                          1,
	"FiberType_STYLEX_1X_COPPERX_CONNECTOR": 2,
	"FiberType_STYLEX_2X_COPPERX_CONNECTOR": 3,
	"FiberType_BNCX_TNC":                    4,
	"FiberType_COAXIALX_HEADERS":            5,
	"FiberType_FIBERX_JACK":                 6,
	"FiberType_LC":                          7,
	"FiberType_MTX_RJ":                      8,
	"FiberType_MU":                          9,
	"FiberType_SG":                          10,
	"FiberType_OPTICALX_PIGTAIL":            11,
	"FiberType_HSSDCII":                     12,
	"FiberType_COPPERX_PIGTAIL":             13,
	"FiberType_MPO":                         14,
}

func (x Devm_Ports_Port_OpticalModule_FiberType) String() string {
	return proto.EnumName(Devm_Ports_Port_OpticalModule_FiberType_name, int32(x))
}

func (Devm_Ports_Port_OpticalModule_FiberType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2, 2}
}

type Devm_Ports_Port_OpticalModule_Tunable int32

const (
	Devm_Ports_Port_OpticalModule_INVALID_ENUM_VALUE_Tunable Devm_Ports_Port_OpticalModule_Tunable = 0
	Devm_Ports_Port_OpticalModule_Tunable_NOTX_SUPPORTED     Devm_Ports_Port_OpticalModule_Tunable = 1
	Devm_Ports_Port_OpticalModule_Tunable_NOTX_TUNABLE       Devm_Ports_Port_OpticalModule_Tunable = 2
	Devm_Ports_Port_OpticalModule_Tunable_TUNABLE            Devm_Ports_Port_OpticalModule_Tunable = 3
	Devm_Ports_Port_OpticalModule_Tunable_SUPPORTED          Devm_Ports_Port_OpticalModule_Tunable = 4
)

var Devm_Ports_Port_OpticalModule_Tunable_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_Tunable",
	1: "Tunable_NOTX_SUPPORTED",
	2: "Tunable_NOTX_TUNABLE",
	3: "Tunable_TUNABLE",
	4: "Tunable_SUPPORTED",
}

var Devm_Ports_Port_OpticalModule_Tunable_value = map[string]int32{
	"INVALID_ENUM_VALUE_Tunable": 0,
	"Tunable_NOTX_SUPPORTED":     1,
	"Tunable_NOTX_TUNABLE":       2,
	"Tunable_TUNABLE":            3,
	"Tunable_SUPPORTED":          4,
}

func (x Devm_Ports_Port_OpticalModule_Tunable) String() string {
	return proto.EnumName(Devm_Ports_Port_OpticalModule_Tunable_name, int32(x))
}

func (Devm_Ports_Port_OpticalModule_Tunable) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2, 3}
}

type Devm_Ports_Port_OpticalModule_DirectionType int32

const (
	Devm_Ports_Port_OpticalModule_INVALID_ENUM_VALUE_DirectionType                    Devm_Ports_Port_OpticalModule_DirectionType = 0
	Devm_Ports_Port_OpticalModule_DirectionType_NOTX_SUPPORTED                        Devm_Ports_Port_OpticalModule_DirectionType = 1
	Devm_Ports_Port_OpticalModule_DirectionType_DUALX_FIBERX_BIDIRECTION              Devm_Ports_Port_OpticalModule_DirectionType = 2
	Devm_Ports_Port_OpticalModule_DirectionType_SINGLEX_FIBERX_BIDIRECTIONAL          Devm_Ports_Port_OpticalModule_DirectionType = 3
	Devm_Ports_Port_OpticalModule_DirectionType_DUALX_FIBERX_TWOX_PORTX_BIDIRECTIONAL Devm_Ports_Port_OpticalModule_DirectionType = 4
)

var Devm_Ports_Port_OpticalModule_DirectionType_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_DirectionType",
	1: "DirectionType_NOTX_SUPPORTED",
	2: "DirectionType_DUALX_FIBERX_BIDIRECTION",
	3: "DirectionType_SINGLEX_FIBERX_BIDIRECTIONAL",
	4: "DirectionType_DUALX_FIBERX_TWOX_PORTX_BIDIRECTIONAL",
}

var Devm_Ports_Port_OpticalModule_DirectionType_value = map[string]int32{
	"INVALID_ENUM_VALUE_DirectionType":                    0,
	"DirectionType_NOTX_SUPPORTED":                        1,
	"DirectionType_DUALX_FIBERX_BIDIRECTION":              2,
	"DirectionType_SINGLEX_FIBERX_BIDIRECTIONAL":          3,
	"DirectionType_DUALX_FIBERX_TWOX_PORTX_BIDIRECTIONAL": 4,
}

func (x Devm_Ports_Port_OpticalModule_DirectionType) String() string {
	return proto.EnumName(Devm_Ports_Port_OpticalModule_DirectionType_name, int32(x))
}

func (Devm_Ports_Port_OpticalModule_DirectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2, 4}
}

type Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType int32

const (
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_AUAIS        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 0
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_B3TCA        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 1
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LAIS         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 2
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LOF          Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 3
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LOM          Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 4
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LOP          Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 5
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LOS          Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 6
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LRDI         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 7
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LREI         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 8
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_OOF          Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 9
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_PAIS         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 10
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_PRDI         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 11
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_PREI         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 12
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_PPLM         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 13
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_RDOOL        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 14
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_RROOL        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 15
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_SDBERE       Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 16
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_SFBERE       Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 17
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_TROOL        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 18
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_PUNEQ        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 19
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_LCD          Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 20
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_WLNK         Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 21
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_ODUX_AIS     Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 22
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_ODUX_LCK     Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 23
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_ODUX_OCI     Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 24
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_OTUX_AIS     Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 25
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_ODUX_LOM     Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 26
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_OTUX_SDX_BER Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 27
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_OTUX_SFX_BER Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 28
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_PMX_BDI      Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 29
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_PMX_TIM      Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 30
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_RX_LOF       Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 31
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_RX_LOS       Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 32
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_RX_OOF       Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 33
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_SMX_BDI      Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 34
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_SMX_IAE      Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 35
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_SMX_TIM      Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 36
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_B1TCA        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 40
	Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_B2TCA        Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType = 41
)

var Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_name = map[int32]string{
	0:  "AlarmType_AUAIS",
	1:  "AlarmType_B3TCA",
	2:  "AlarmType_LAIS",
	3:  "AlarmType_LOF",
	4:  "AlarmType_LOM",
	5:  "AlarmType_LOP",
	6:  "AlarmType_LOS",
	7:  "AlarmType_LRDI",
	8:  "AlarmType_LREI",
	9:  "AlarmType_OOF",
	10: "AlarmType_PAIS",
	11: "AlarmType_PRDI",
	12: "AlarmType_PREI",
	13: "AlarmType_PPLM",
	14: "AlarmType_RDOOL",
	15: "AlarmType_RROOL",
	16: "AlarmType_SDBERE",
	17: "AlarmType_SFBERE",
	18: "AlarmType_TROOL",
	19: "AlarmType_PUNEQ",
	20: "AlarmType_LCD",
	21: "AlarmType_WLNK",
	22: "AlarmType_ODUX_AIS",
	23: "AlarmType_ODUX_LCK",
	24: "AlarmType_ODUX_OCI",
	25: "AlarmType_OTUX_AIS",
	26: "AlarmType_ODUX_LOM",
	27: "AlarmType_OTUX_SDX_BER",
	28: "AlarmType_OTUX_SFX_BER",
	29: "AlarmType_PMX_BDI",
	30: "AlarmType_PMX_TIM",
	31: "AlarmType_RX_LOF",
	32: "AlarmType_RX_LOS",
	33: "AlarmType_RX_OOF",
	34: "AlarmType_SMX_BDI",
	35: "AlarmType_SMX_IAE",
	36: "AlarmType_SMX_TIM",
	40: "AlarmType_B1TCA",
	41: "AlarmType_B2TCA",
}

var Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_value = map[string]int32{
	"AlarmType_AUAIS":        0,
	"AlarmType_B3TCA":        1,
	"AlarmType_LAIS":         2,
	"AlarmType_LOF":          3,
	"AlarmType_LOM":          4,
	"AlarmType_LOP":          5,
	"AlarmType_LOS":          6,
	"AlarmType_LRDI":         7,
	"AlarmType_LREI":         8,
	"AlarmType_OOF":          9,
	"AlarmType_PAIS":         10,
	"AlarmType_PRDI":         11,
	"AlarmType_PREI":         12,
	"AlarmType_PPLM":         13,
	"AlarmType_RDOOL":        14,
	"AlarmType_RROOL":        15,
	"AlarmType_SDBERE":       16,
	"AlarmType_SFBERE":       17,
	"AlarmType_TROOL":        18,
	"AlarmType_PUNEQ":        19,
	"AlarmType_LCD":          20,
	"AlarmType_WLNK":         21,
	"AlarmType_ODUX_AIS":     22,
	"AlarmType_ODUX_LCK":     23,
	"AlarmType_ODUX_OCI":     24,
	"AlarmType_OTUX_AIS":     25,
	"AlarmType_ODUX_LOM":     26,
	"AlarmType_OTUX_SDX_BER": 27,
	"AlarmType_OTUX_SFX_BER": 28,
	"AlarmType_PMX_BDI":      29,
	"AlarmType_PMX_TIM":      30,
	"AlarmType_RX_LOF":       31,
	"AlarmType_RX_LOS":       32,
	"AlarmType_RX_OOF":       33,
	"AlarmType_SMX_BDI":      34,
	"AlarmType_SMX_IAE":      35,
	"AlarmType_SMX_TIM":      36,
	"AlarmType_B1TCA":        40,
	"AlarmType_B2TCA":        41,
}

func (x Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType) String() string {
	return proto.EnumName(Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_name, int32(x))
}

func (Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 3, 0, 0, 0}
}

type Devm_LogicPorts_LogicPort_PortType int32

const (
	Devm_LogicPorts_LogicPort_PortType_UNKNOWN     Devm_LogicPorts_LogicPort_PortType = 0
	Devm_LogicPorts_LogicPort_PortType_ETH         Devm_LogicPorts_LogicPort_PortType = 1
	Devm_LogicPorts_LogicPort_PortType_POS         Devm_LogicPorts_LogicPort_PortType = 2
	Devm_LogicPorts_LogicPort_PortType_CPOS        Devm_LogicPorts_LogicPort_PortType = 3
	Devm_LogicPorts_LogicPort_PortType_E1          Devm_LogicPorts_LogicPort_PortType = 4
	Devm_LogicPorts_LogicPort_PortType_GE          Devm_LogicPorts_LogicPort_PortType = 5
	Devm_LogicPorts_LogicPort_PortType_X_10GE      Devm_LogicPorts_LogicPort_PortType = 6
	Devm_LogicPorts_LogicPort_PortType_GF          Devm_LogicPorts_LogicPort_PortType = 7
	Devm_LogicPorts_LogicPort_PortType_X_10GF      Devm_LogicPorts_LogicPort_PortType = 8
	Devm_LogicPorts_LogicPort_PortType_X_40GF      Devm_LogicPorts_LogicPort_PortType = 9
	Devm_LogicPorts_LogicPort_PortType_X_10GFCOM   Devm_LogicPorts_LogicPort_PortType = 10
	Devm_LogicPorts_LogicPort_PortType_X_40GFSPLIT Devm_LogicPorts_LogicPort_PortType = 11
	Devm_LogicPorts_LogicPort_PortType_OTN         Devm_LogicPorts_LogicPort_PortType = 12
)

var Devm_LogicPorts_LogicPort_PortType_name = map[int32]string{
	0:  "PortType_UNKNOWN",
	1:  "PortType_ETH",
	2:  "PortType_POS",
	3:  "PortType_CPOS",
	4:  "PortType_E1",
	5:  "PortType_GE",
	6:  "PortType_X_10GE",
	7:  "PortType_GF",
	8:  "PortType_X_10GF",
	9:  "PortType_X_40GF",
	10: "PortType_X_10GFCOM",
	11: "PortType_X_40GFSPLIT",
	12: "PortType_OTN",
}

var Devm_LogicPorts_LogicPort_PortType_value = map[string]int32{
	"PortType_UNKNOWN":     0,
	"PortType_ETH":         1,
	"PortType_POS":         2,
	"PortType_CPOS":        3,
	"PortType_E1":          4,
	"PortType_GE":          5,
	"PortType_X_10GE":      6,
	"PortType_GF":          7,
	"PortType_X_10GF":      8,
	"PortType_X_40GF":      9,
	"PortType_X_10GFCOM":   10,
	"PortType_X_40GFSPLIT": 11,
	"PortType_OTN":         12,
}

func (x Devm_LogicPorts_LogicPort_PortType) String() string {
	return proto.EnumName(Devm_LogicPorts_LogicPort_PortType_name, int32(x))
}

func (Devm_LogicPorts_LogicPort_PortType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 11, 0, 0}
}

type Devm_LogicPorts_LogicPort_AdminState int32

const (
	Devm_LogicPorts_LogicPort_AdminState_INACTIVE     Devm_LogicPorts_LogicPort_AdminState = 0
	Devm_LogicPorts_LogicPort_AdminState_ACTIVE       Devm_LogicPorts_LogicPort_AdminState = 1
	Devm_LogicPorts_LogicPort_AdminState_NOTSUPPORTED Devm_LogicPorts_LogicPort_AdminState = 2
)

var Devm_LogicPorts_LogicPort_AdminState_name = map[int32]string{
	0: "AdminState_INACTIVE",
	1: "AdminState_ACTIVE",
	2: "AdminState_NOTSUPPORTED",
}

var Devm_LogicPorts_LogicPort_AdminState_value = map[string]int32{
	"AdminState_INACTIVE":     0,
	"AdminState_ACTIVE":       1,
	"AdminState_NOTSUPPORTED": 2,
}

func (x Devm_LogicPorts_LogicPort_AdminState) String() string {
	return proto.EnumName(Devm_LogicPorts_LogicPort_AdminState_name, int32(x))
}

func (Devm_LogicPorts_LogicPort_AdminState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 11, 0, 1}
}

type Devm_LogicPorts_LogicPort_HardType int32

const (
	Devm_LogicPorts_LogicPort_HardType_UNKNOWN          Devm_LogicPorts_LogicPort_HardType = 0
	Devm_LogicPorts_LogicPort_HardType_ETHLANPORT       Devm_LogicPorts_LogicPort_HardType = 1
	Devm_LogicPorts_LogicPort_HardType_ETHWANPORT       Devm_LogicPorts_LogicPort_HardType = 2
	Devm_LogicPorts_LogicPort_HardType_ETHGEPORT        Devm_LogicPorts_LogicPort_HardType = 3
	Devm_LogicPorts_LogicPort_HardType_ETH10GEPORT      Devm_LogicPorts_LogicPort_HardType = 4
	Devm_LogicPorts_LogicPort_HardType_ETHGFPORT        Devm_LogicPorts_LogicPort_HardType = 5
	Devm_LogicPorts_LogicPort_HardType_ETH10GFPORT      Devm_LogicPorts_LogicPort_HardType = 6
	Devm_LogicPorts_LogicPort_HardType_ETH40GFPORT      Devm_LogicPorts_LogicPort_HardType = 7
	Devm_LogicPorts_LogicPort_HardType_ETH10GFCOMPORT   Devm_LogicPorts_LogicPort_HardType = 8
	Devm_LogicPorts_LogicPort_HardType_ETH40GFSPLITPORT Devm_LogicPorts_LogicPort_HardType = 9
	Devm_LogicPorts_LogicPort_HardType_ETHFEPORT        Devm_LogicPorts_LogicPort_HardType = 10
	Devm_LogicPorts_LogicPort_HardType_ETHMGEPORT       Devm_LogicPorts_LogicPort_HardType = 11
	Devm_LogicPorts_LogicPort_HardType_POSPORT          Devm_LogicPorts_LogicPort_HardType = 12
	Devm_LogicPorts_LogicPort_HardType_OTNPORT          Devm_LogicPorts_LogicPort_HardType = 13
	Devm_LogicPorts_LogicPort_HardType_CPOSPORT         Devm_LogicPorts_LogicPort_HardType = 14
	Devm_LogicPorts_LogicPort_HardType_E1PORT           Devm_LogicPorts_LogicPort_HardType = 15
	Devm_LogicPorts_LogicPort_HardType_ETHCLUSTERPORT   Devm_LogicPorts_LogicPort_HardType = 16
	Devm_LogicPorts_LogicPort_HardType_ETHPORT          Devm_LogicPorts_LogicPort_HardType = 17
	Devm_LogicPorts_LogicPort_HardType_EPORT            Devm_LogicPorts_LogicPort_HardType = 18
	Devm_LogicPorts_LogicPort_HardType_OPORT            Devm_LogicPorts_LogicPort_HardType = 19
)

var Devm_LogicPorts_LogicPort_HardType_name = map[int32]string{
	0:  "HardType_UNKNOWN",
	1:  "HardType_ETHLANPORT",
	2:  "HardType_ETHWANPORT",
	3:  "HardType_ETHGEPORT",
	4:  "HardType_ETH10GEPORT",
	5:  "HardType_ETHGFPORT",
	6:  "HardType_ETH10GFPORT",
	7:  "HardType_ETH40GFPORT",
	8:  "HardType_ETH10GFCOMPORT",
	9:  "HardType_ETH40GFSPLITPORT",
	10: "HardType_ETHFEPORT",
	11: "HardType_ETHMGEPORT",
	12: "HardType_POSPORT",
	13: "HardType_OTNPORT",
	14: "HardType_CPOSPORT",
	15: "HardType_E1PORT",
	16: "HardType_ETHCLUSTERPORT",
	17: "HardType_ETHPORT",
	18: "HardType_EPORT",
	19: "HardType_OPORT",
}

var Devm_LogicPorts_LogicPort_HardType_value = map[string]int32{
	"HardType_UNKNOWN":          0,
	"HardType_ETHLANPORT":       1,
	"HardType_ETHWANPORT":       2,
	"HardType_ETHGEPORT":        3,
	"HardType_ETH10GEPORT":      4,
	"HardType_ETHGFPORT":        5,
	"HardType_ETH10GFPORT":      6,
	"HardType_ETH40GFPORT":      7,
	"HardType_ETH10GFCOMPORT":   8,
	"HardType_ETH40GFSPLITPORT": 9,
	"HardType_ETHFEPORT":        10,
	"HardType_ETHMGEPORT":       11,
	"HardType_POSPORT":          12,
	"HardType_OTNPORT":          13,
	"HardType_CPOSPORT":         14,
	"HardType_E1PORT":           15,
	"HardType_ETHCLUSTERPORT":   16,
	"HardType_ETHPORT":          17,
	"HardType_EPORT":            18,
	"HardType_OPORT":            19,
}

func (x Devm_LogicPorts_LogicPort_HardType) String() string {
	return proto.EnumName(Devm_LogicPorts_LogicPort_HardType_name, int32(x))
}

func (Devm_LogicPorts_LogicPort_HardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 11, 0, 2}
}

type Devm_LogicPorts_LogicPort_Level int32

const (
	Devm_LogicPorts_LogicPort_Level_X_0XFF Devm_LogicPorts_LogicPort_Level = 0
	Devm_LogicPorts_LogicPort_Level_GE     Devm_LogicPorts_LogicPort_Level = 1
	Devm_LogicPorts_LogicPort_Level_FE     Devm_LogicPorts_LogicPort_Level = 2
	Devm_LogicPorts_LogicPort_Level_X_10GE Devm_LogicPorts_LogicPort_Level = 3
)

var Devm_LogicPorts_LogicPort_Level_name = map[int32]string{
	0: "Level_X_0XFF",
	1: "Level_GE",
	2: "Level_FE",
	3: "Level_X_10GE",
}

var Devm_LogicPorts_LogicPort_Level_value = map[string]int32{
	"Level_X_0XFF": 0,
	"Level_GE":     1,
	"Level_FE":     2,
	"Level_X_10GE": 3,
}

func (x Devm_LogicPorts_LogicPort_Level) String() string {
	return proto.EnumName(Devm_LogicPorts_LogicPort_Level_name, int32(x))
}

func (Devm_LogicPorts_LogicPort_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 11, 0, 3}
}

type Devm_EntityClasses_EntityClass_ClassName int32

const (
	Devm_EntityClasses_EntityClass_ClassName_OTHER       Devm_EntityClasses_EntityClass_ClassName = 0
	Devm_EntityClasses_EntityClass_ClassName_CHASSIS     Devm_EntityClasses_EntityClass_ClassName = 1
	Devm_EntityClasses_EntityClass_ClassName_MPUMODULE   Devm_EntityClasses_EntityClass_ClassName = 4
	Devm_EntityClasses_EntityClass_ClassName_LPUMODULE   Devm_EntityClasses_EntityClass_ClassName = 5
	Devm_EntityClasses_EntityClass_ClassName_SFUMODULE   Devm_EntityClasses_EntityClass_ClassName = 6
	Devm_EntityClasses_EntityClass_ClassName_CLOCKMODULE Devm_EntityClasses_EntityClass_ClassName = 7
	Devm_EntityClasses_EntityClass_ClassName_CARDMODULE  Devm_EntityClasses_EntityClass_ClassName = 9
	Devm_EntityClasses_EntityClass_ClassName_PORT        Devm_EntityClasses_EntityClass_ClassName = 10
	Devm_EntityClasses_EntityClass_ClassName_FAN         Devm_EntityClasses_EntityClass_ClassName = 16
	Devm_EntityClasses_EntityClass_ClassName_POWERSUPPLY Devm_EntityClasses_EntityClass_ClassName = 17
	Devm_EntityClasses_EntityClass_ClassName_CONTAINER   Devm_EntityClasses_EntityClass_ClassName = 18
	Devm_EntityClasses_EntityClass_ClassName_PPMODULE    Devm_EntityClasses_EntityClass_ClassName = 4108
	Devm_EntityClasses_EntityClass_ClassName_SWFMODULE   Devm_EntityClasses_EntityClass_ClassName = 4109
	Devm_EntityClasses_EntityClass_ClassName_ECUMODULE   Devm_EntityClasses_EntityClass_ClassName = 4110
	Devm_EntityClasses_EntityClass_ClassName_ICUMODULE   Devm_EntityClasses_EntityClass_ClassName = 4111
	Devm_EntityClasses_EntityClass_ClassName_LFE         Devm_EntityClasses_EntityClass_ClassName = 4162
	Devm_EntityClasses_EntityClass_ClassName_CFMODULE    Devm_EntityClasses_EntityClass_ClassName = 4170
	Devm_EntityClasses_EntityClass_ClassName_LCD         Devm_EntityClasses_EntityClass_ClassName = 4181
	Devm_EntityClasses_EntityClass_ClassName_PEM         Devm_EntityClasses_EntityClass_ClassName = 5006
	Devm_EntityClasses_EntityClass_ClassName_CMUMODULE   Devm_EntityClasses_EntityClass_ClassName = 5010
	Devm_EntityClasses_EntityClass_ClassName_PIC         Devm_EntityClasses_EntityClass_ClassName = 5011
	Devm_EntityClasses_EntityClass_ClassName_TSU         Devm_EntityClasses_EntityClass_ClassName = 5012
	Devm_EntityClasses_EntityClass_ClassName_PM          Devm_EntityClasses_EntityClass_ClassName = 5032
)

var Devm_EntityClasses_EntityClass_ClassName_name = map[int32]string{
	0:    "ClassName_OTHER",
	1:    "ClassName_CHASSIS",
	4:    "ClassName_MPUMODULE",
	5:    "ClassName_LPUMODULE",
	6:    "ClassName_SFUMODULE",
	7:    "ClassName_CLOCKMODULE",
	9:    "ClassName_CARDMODULE",
	10:   "ClassName_PORT",
	16:   "ClassName_FAN",
	17:   "ClassName_POWERSUPPLY",
	18:   "ClassName_CONTAINER",
	4108: "ClassName_PPMODULE",
	4109: "ClassName_SWFMODULE",
	4110: "ClassName_ECUMODULE",
	4111: "ClassName_ICUMODULE",
	4162: "ClassName_LFE",
	4170: "ClassName_CFMODULE",
	4181: "ClassName_LCD",
	5006: "ClassName_PEM",
	5010: "ClassName_CMUMODULE",
	5011: "ClassName_PIC",
	5012: "ClassName_TSU",
	5032: "ClassName_PM",
}

var Devm_EntityClasses_EntityClass_ClassName_value = map[string]int32{
	"ClassName_OTHER":       0,
	"ClassName_CHASSIS":     1,
	"ClassName_MPUMODULE":   4,
	"ClassName_LPUMODULE":   5,
	"ClassName_SFUMODULE":   6,
	"ClassName_CLOCKMODULE": 7,
	"ClassName_CARDMODULE":  9,
	"ClassName_PORT":        10,
	"ClassName_FAN":         16,
	"ClassName_POWERSUPPLY": 17,
	"ClassName_CONTAINER":   18,
	"ClassName_PPMODULE":    4108,
	"ClassName_SWFMODULE":   4109,
	"ClassName_ECUMODULE":   4110,
	"ClassName_ICUMODULE":   4111,
	"ClassName_LFE":         4162,
	"ClassName_CFMODULE":    4170,
	"ClassName_LCD":         4181,
	"ClassName_PEM":         5006,
	"ClassName_CMUMODULE":   5010,
	"ClassName_PIC":         5011,
	"ClassName_TSU":         5012,
	"ClassName_PM":          5032,
}

func (x Devm_EntityClasses_EntityClass_ClassName) String() string {
	return proto.EnumName(Devm_EntityClasses_EntityClass_ClassName_name, int32(x))
}

func (Devm_EntityClasses_EntityClass_ClassName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 12, 0, 0}
}

type Devm_InconsistentEntitys_InconsistentEntity_Class int32

const (
	Devm_InconsistentEntitys_InconsistentEntity_Class_OTHER       Devm_InconsistentEntitys_InconsistentEntity_Class = 0
	Devm_InconsistentEntitys_InconsistentEntity_Class_CHASSIS     Devm_InconsistentEntitys_InconsistentEntity_Class = 1
	Devm_InconsistentEntitys_InconsistentEntity_Class_MPUMODULE   Devm_InconsistentEntitys_InconsistentEntity_Class = 4
	Devm_InconsistentEntitys_InconsistentEntity_Class_LPUMODULE   Devm_InconsistentEntitys_InconsistentEntity_Class = 5
	Devm_InconsistentEntitys_InconsistentEntity_Class_SFUMODULE   Devm_InconsistentEntitys_InconsistentEntity_Class = 6
	Devm_InconsistentEntitys_InconsistentEntity_Class_CLOCKMODULE Devm_InconsistentEntitys_InconsistentEntity_Class = 7
	Devm_InconsistentEntitys_InconsistentEntity_Class_CARDMODULE  Devm_InconsistentEntitys_InconsistentEntity_Class = 9
	Devm_InconsistentEntitys_InconsistentEntity_Class_PORT        Devm_InconsistentEntitys_InconsistentEntity_Class = 10
	Devm_InconsistentEntitys_InconsistentEntity_Class_FAN         Devm_InconsistentEntitys_InconsistentEntity_Class = 16
	Devm_InconsistentEntitys_InconsistentEntity_Class_POWERSUPPLY Devm_InconsistentEntitys_InconsistentEntity_Class = 17
	Devm_InconsistentEntitys_InconsistentEntity_Class_CONTAINER   Devm_InconsistentEntitys_InconsistentEntity_Class = 18
	Devm_InconsistentEntitys_InconsistentEntity_Class_PPMODULE    Devm_InconsistentEntitys_InconsistentEntity_Class = 4108
	Devm_InconsistentEntitys_InconsistentEntity_Class_SWFMODULE   Devm_InconsistentEntitys_InconsistentEntity_Class = 4109
	Devm_InconsistentEntitys_InconsistentEntity_Class_ECUMODULE   Devm_InconsistentEntitys_InconsistentEntity_Class = 4110
	Devm_InconsistentEntitys_InconsistentEntity_Class_ICUMODULE   Devm_InconsistentEntitys_InconsistentEntity_Class = 4111
	Devm_InconsistentEntitys_InconsistentEntity_Class_LFE         Devm_InconsistentEntitys_InconsistentEntity_Class = 4162
	Devm_InconsistentEntitys_InconsistentEntity_Class_CFMODULE    Devm_InconsistentEntitys_InconsistentEntity_Class = 4170
	Devm_InconsistentEntitys_InconsistentEntity_Class_LCD         Devm_InconsistentEntitys_InconsistentEntity_Class = 4181
	Devm_InconsistentEntitys_InconsistentEntity_Class_PEM         Devm_InconsistentEntitys_InconsistentEntity_Class = 5006
	Devm_InconsistentEntitys_InconsistentEntity_Class_CMUMODULE   Devm_InconsistentEntitys_InconsistentEntity_Class = 5010
	Devm_InconsistentEntitys_InconsistentEntity_Class_PIC         Devm_InconsistentEntitys_InconsistentEntity_Class = 5011
	Devm_InconsistentEntitys_InconsistentEntity_Class_TSU         Devm_InconsistentEntitys_InconsistentEntity_Class = 5012
	Devm_InconsistentEntitys_InconsistentEntity_Class_PM          Devm_InconsistentEntitys_InconsistentEntity_Class = 5032
)

var Devm_InconsistentEntitys_InconsistentEntity_Class_name = map[int32]string{
	0:    "Class_OTHER",
	1:    "Class_CHASSIS",
	4:    "Class_MPUMODULE",
	5:    "Class_LPUMODULE",
	6:    "Class_SFUMODULE",
	7:    "Class_CLOCKMODULE",
	9:    "Class_CARDMODULE",
	10:   "Class_PORT",
	16:   "Class_FAN",
	17:   "Class_POWERSUPPLY",
	18:   "Class_CONTAINER",
	4108: "Class_PPMODULE",
	4109: "Class_SWFMODULE",
	4110: "Class_ECUMODULE",
	4111: "Class_ICUMODULE",
	4162: "Class_LFE",
	4170: "Class_CFMODULE",
	4181: "Class_LCD",
	5006: "Class_PEM",
	5010: "Class_CMUMODULE",
	5011: "Class_PIC",
	5012: "Class_TSU",
	5032: "Class_PM",
}

var Devm_InconsistentEntitys_InconsistentEntity_Class_value = map[string]int32{
	"Class_OTHER":       0,
	"Class_CHASSIS":     1,
	"Class_MPUMODULE":   4,
	"Class_LPUMODULE":   5,
	"Class_SFUMODULE":   6,
	"Class_CLOCKMODULE": 7,
	"Class_CARDMODULE":  9,
	"Class_PORT":        10,
	"Class_FAN":         16,
	"Class_POWERSUPPLY": 17,
	"Class_CONTAINER":   18,
	"Class_PPMODULE":    4108,
	"Class_SWFMODULE":   4109,
	"Class_ECUMODULE":   4110,
	"Class_ICUMODULE":   4111,
	"Class_LFE":         4162,
	"Class_CFMODULE":    4170,
	"Class_LCD":         4181,
	"Class_PEM":         5006,
	"Class_CMUMODULE":   5010,
	"Class_PIC":         5011,
	"Class_TSU":         5012,
	"Class_PM":          5032,
}

func (x Devm_InconsistentEntitys_InconsistentEntity_Class) String() string {
	return proto.EnumName(Devm_InconsistentEntitys_InconsistentEntity_Class_name, int32(x))
}

func (Devm_InconsistentEntitys_InconsistentEntity_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 13, 0, 0}
}

type Devm_InconsistentEntitys_InconsistentEntity_LogicalType int32

const (
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_UNKNOWN                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 0
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CHASSIS                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 3
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_BOARDSLOT               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 4
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_MPUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 5
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_LPUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 6
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_SFUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 7
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_ICUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 8
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_ECUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 9
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CLKSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 10
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FANSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 11
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_POWERSLOT               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 12
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_PICSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 13
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_OFCSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 14
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_LCDSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 15
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CFCARDSLOT              Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 16
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CMUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 17
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FNAME8090UNKNOWN        Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 18
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FNAME8090WHOLE          Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 19
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FNAME8090NE5000EX       Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 20
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FNAME8090CLUSTERCENTRAL Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 21
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FNAME8090NE5000EXX_VB   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 22
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CHASSIS1                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 24
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CHASSIS2                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 25
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CCCCHASSIS              Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 26
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CE585048T4S2QEI         Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 27
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CE685048S4QEI           Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 28
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CE685048T4QEI           Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 29
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52MPUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 30
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52MPUB                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 31
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55MPUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 32
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_C55MPUA                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 33
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_C56MPUC                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 34
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55MPUAB               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 35
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56RPUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 36
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 37
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUB                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 38
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUC                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 39
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUE                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 40
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUR                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 41
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 42
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUG                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 43
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUH                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 44
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUI                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 45
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUK                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 46
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUM                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 47
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52LPUN                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 48
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SPUC                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 49
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56LPUF100A            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 50
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56LPUF100B            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 51
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56LPUI100A            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 52
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56LPUI100B            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 53
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56LPUI100C            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 54
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56LPUF200A            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 55
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_RNRLPUB                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 56
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_RNRLPUD                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 57
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_RNRLPUF                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 58
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_RNRNS                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 59
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_RNRGRE                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 60
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SFUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 61
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SRUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 62
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SFUD                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 63
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SFUF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 64
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SFUG                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 65
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SFUC                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 66
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SFEA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 67
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52KX_SFEA             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 68
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55SFUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 69
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55ECUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 70
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55CX_ECUA             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 71
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55ICUA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 72
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56SFUF100B            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 73
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55SFUI100A            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 74
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56SFUF100C            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 75
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56SFU200A             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 76
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55ECU100A             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 77
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52SFEB                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 78
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_DE51SRU1A               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 79
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_DE51SRU1B               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 80
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_DE51SRU1C               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 81
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DSFUFA06C            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 82
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DSFUIK060            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 83
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_BOOTROM                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 84
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FLASH                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 85
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_EPLD1                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 86
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_EPLD2                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 87
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52E1XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 88
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52W1XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 89
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52EAGF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 90
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P4UF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 91
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P1XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 92
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P4HF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 93
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52E2XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 94
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52W2XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 95
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P2XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 96
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52EMGE                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 97
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P8CF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 98
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52EFGE                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 99
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P1UF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 100
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P2UF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 101
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52E5GF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 102
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P4CF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 103
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR53P1MZ                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 104
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52D1MV                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 105
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52E4XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 106
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56P2XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 107
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56L2XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 108
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56E2XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 109
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56D2XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 110
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56L5XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 111
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56E5XX                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 112
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56P1MZ                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 113
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56E1NC                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 114
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56EFGF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 115
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52EKGFY               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 116
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR57EFGF                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 117
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56E1NCC               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 118
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52P1XZ                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 119
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52E1XZ                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 120
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52W1XZ                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 121
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_SPU                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 122
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_TSUA                    Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 123
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56E1MC                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 124
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR56LAXFA               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 125
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55OFCA                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 126
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55CX_OFCA             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 127
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52OFCB                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 128
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55OFC40               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 129
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55OFC100A             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 130
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR55OFC100B             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 131
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR52OFCV                Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 132
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_ETH                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 133
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_POS                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 134
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_GE                      Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 135
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_X_10GE                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 136
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_GF                      Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 137
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_X_10GF                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 138
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_X_40GF                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 139
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_X_10GFCOM               Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 140
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_X_40GFSPLIT             Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 141
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_VSR                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 142
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_LFE                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 143
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_POWER                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 144
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CLOCK                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 145
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_FAN                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 146
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_LCD                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 147
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CFCARD                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 148
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CMU                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 149
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00EKGF60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 150
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00P4XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 151
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00P8UF60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 152
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00E4XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 153
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00W4XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 154
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DLPUFA060            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 155
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00LEXF60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 156
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00E2NC60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 157
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DE1NLAX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 158
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DSFEBA06B            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 159
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D0MPUB460            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 160
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DSFUFA06B            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 161
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DSFUIE060            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 162
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D0MPUA450            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 163
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DECUFA050            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 164
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5DSFUIA050            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 165
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00L5XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 166
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00E5XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 167
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00L2XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 168
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00E2XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 169
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00EFGF60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 170
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00P1MZ60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 171
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00P2XX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 172
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5M00E1MC60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 173
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00E1NC60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 174
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D00LAXX60            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 175
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_CR5D0OFCA060            Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 176
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1XCS                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 177
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1EXL2                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 178
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1EX12                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 179
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1EX8                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 180
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1EH1                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 181
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1EG24                  Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 182
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1CH1                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 183
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1CQ4                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 184
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1SCA                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 185
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1FAN                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 186
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1PIU                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 187
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_T1EFI                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 188
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_XCA                     Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 189
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_TNU1SCC                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 190
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_C52MPUA                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 191
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_C52MPUB                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 192
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_LPUE                    Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 193
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_LPUF                    Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 194
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_TPA1EFI                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 195
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_TNT1EX8                 Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 196
	Devm_InconsistentEntitys_InconsistentEntity_LogicalType_OTHER                   Devm_InconsistentEntitys_InconsistentEntity_LogicalType = 197
)

var Devm_InconsistentEntitys_InconsistentEntity_LogicalType_name = map[int32]string{
	0:   "LogicalType_UNKNOWN",
	3:   "LogicalType_CHASSIS",
	4:   "LogicalType_BOARDSLOT",
	5:   "LogicalType_MPUSLOT",
	6:   "LogicalType_LPUSLOT",
	7:   "LogicalType_SFUSLOT",
	8:   "LogicalType_ICUSLOT",
	9:   "LogicalType_ECUSLOT",
	10:  "LogicalType_CLKSLOT",
	11:  "LogicalType_FANSLOT",
	12:  "LogicalType_POWERSLOT",
	13:  "LogicalType_PICSLOT",
	14:  "LogicalType_OFCSLOT",
	15:  "LogicalType_LCDSLOT",
	16:  "LogicalType_CFCARDSLOT",
	17:  "LogicalType_CMUSLOT",
	18:  "LogicalType_FNAME8090UNKNOWN",
	19:  "LogicalType_FNAME8090WHOLE",
	20:  "LogicalType_FNAME8090NE5000EX",
	21:  "LogicalType_FNAME8090CLUSTERCENTRAL",
	22:  "LogicalType_FNAME8090NE5000EXX_VB",
	24:  "LogicalType_CHASSIS1",
	25:  "LogicalType_CHASSIS2",
	26:  "LogicalType_CCCCHASSIS",
	27:  "LogicalType_CE585048T4S2QEI",
	28:  "LogicalType_CE685048S4QEI",
	29:  "LogicalType_CE685048T4QEI",
	30:  "LogicalType_CR52MPUA",
	31:  "LogicalType_CR52MPUB",
	32:  "LogicalType_CR55MPUA",
	33:  "LogicalType_C55MPUA",
	34:  "LogicalType_C56MPUC",
	35:  "LogicalType_CR55MPUAB",
	36:  "LogicalType_CR56RPUA",
	37:  "LogicalType_CR52LPUA",
	38:  "LogicalType_CR52LPUB",
	39:  "LogicalType_CR52LPUC",
	40:  "LogicalType_CR52LPUE",
	41:  "LogicalType_CR52LPUR",
	42:  "LogicalType_CR52LPUF",
	43:  "LogicalType_CR52LPUG",
	44:  "LogicalType_CR52LPUH",
	45:  "LogicalType_CR52LPUI",
	46:  "LogicalType_CR52LPUK",
	47:  "LogicalType_CR52LPUM",
	48:  "LogicalType_CR52LPUN",
	49:  "LogicalType_CR52SPUC",
	50:  "LogicalType_CR56LPUF100A",
	51:  "LogicalType_CR56LPUF100B",
	52:  "LogicalType_CR56LPUI100A",
	53:  "LogicalType_CR56LPUI100B",
	54:  "LogicalType_CR56LPUI100C",
	55:  "LogicalType_CR56LPUF200A",
	56:  "LogicalType_RNRLPUB",
	57:  "LogicalType_RNRLPUD",
	58:  "LogicalType_RNRLPUF",
	59:  "LogicalType_RNRNS",
	60:  "LogicalType_RNRGRE",
	61:  "LogicalType_CR52SFUA",
	62:  "LogicalType_CR52SRUA",
	63:  "LogicalType_CR52SFUD",
	64:  "LogicalType_CR52SFUF",
	65:  "LogicalType_CR52SFUG",
	66:  "LogicalType_CR52SFUC",
	67:  "LogicalType_CR52SFEA",
	68:  "LogicalType_CR52KX_SFEA",
	69:  "LogicalType_CR55SFUA",
	70:  "LogicalType_CR55ECUA",
	71:  "LogicalType_CR55CX_ECUA",
	72:  "LogicalType_CR55ICUA",
	73:  "LogicalType_CR56SFUF100B",
	74:  "LogicalType_CR55SFUI100A",
	75:  "LogicalType_CR56SFUF100C",
	76:  "LogicalType_CR56SFU200A",
	77:  "LogicalType_CR55ECU100A",
	78:  "LogicalType_CR52SFEB",
	79:  "LogicalType_DE51SRU1A",
	80:  "LogicalType_DE51SRU1B",
	81:  "LogicalType_DE51SRU1C",
	82:  "LogicalType_CR5DSFUFA06C",
	83:  "LogicalType_CR5DSFUIK060",
	84:  "LogicalType_BOOTROM",
	85:  "LogicalType_FLASH",
	86:  "LogicalType_EPLD1",
	87:  "LogicalType_EPLD2",
	88:  "LogicalType_CR52E1XX",
	89:  "LogicalType_CR52W1XX",
	90:  "LogicalType_CR52EAGF",
	91:  "LogicalType_CR52P4UF",
	92:  "LogicalType_CR52P1XX",
	93:  "LogicalType_CR52P4HF",
	94:  "LogicalType_CR52E2XX",
	95:  "LogicalType_CR52W2XX",
	96:  "LogicalType_CR52P2XX",
	97:  "LogicalType_CR52EMGE",
	98:  "LogicalType_CR52P8CF",
	99:  "LogicalType_CR52EFGE",
	100: "LogicalType_CR52P1UF",
	101: "LogicalType_CR52P2UF",
	102: "LogicalType_CR52E5GF",
	103: "LogicalType_CR52P4CF",
	104: "LogicalType_CR53P1MZ",
	105: "LogicalType_CR52D1MV",
	106: "LogicalType_CR52E4XX",
	107: "LogicalType_CR56P2XX",
	108: "LogicalType_CR56L2XX",
	109: "LogicalType_CR56E2XX",
	110: "LogicalType_CR56D2XX",
	111: "LogicalType_CR56L5XX",
	112: "LogicalType_CR56E5XX",
	113: "LogicalType_CR56P1MZ",
	114: "LogicalType_CR56E1NC",
	115: "LogicalType_CR56EFGF",
	116: "LogicalType_CR52EKGFY",
	117: "LogicalType_CR57EFGF",
	118: "LogicalType_CR56E1NCC",
	119: "LogicalType_CR52P1XZ",
	120: "LogicalType_CR52E1XZ",
	121: "LogicalType_CR52W1XZ",
	122: "LogicalType_SPU",
	123: "LogicalType_TSUA",
	124: "LogicalType_CR56E1MC",
	125: "LogicalType_CR56LAXFA",
	126: "LogicalType_CR55OFCA",
	127: "LogicalType_CR55CX_OFCA",
	128: "LogicalType_CR52OFCB",
	129: "LogicalType_CR55OFC40",
	130: "LogicalType_CR55OFC100A",
	131: "LogicalType_CR55OFC100B",
	132: "LogicalType_CR52OFCV",
	133: "LogicalType_ETH",
	134: "LogicalType_POS",
	135: "LogicalType_GE",
	136: "LogicalType_X_10GE",
	137: "LogicalType_GF",
	138: "LogicalType_X_10GF",
	139: "LogicalType_X_40GF",
	140: "LogicalType_X_10GFCOM",
	141: "LogicalType_X_40GFSPLIT",
	142: "LogicalType_VSR",
	143: "LogicalType_LFE",
	144: "LogicalType_POWER",
	145: "LogicalType_CLOCK",
	146: "LogicalType_FAN",
	147: "LogicalType_LCD",
	148: "LogicalType_CFCARD",
	149: "LogicalType_CMU",
	150: "LogicalType_CR5D00EKGF60",
	151: "LogicalType_CR5D00P4XX60",
	152: "LogicalType_CR5D00P8UF60",
	153: "LogicalType_CR5D00E4XX60",
	154: "LogicalType_CR5D00W4XX60",
	155: "LogicalType_CR5DLPUFA060",
	156: "LogicalType_CR5D00LEXF60",
	157: "LogicalType_CR5D00E2NC60",
	158: "LogicalType_CR5DE1NLAX60",
	159: "LogicalType_CR5DSFEBA06B",
	160: "LogicalType_CR5D0MPUB460",
	161: "LogicalType_CR5DSFUFA06B",
	162: "LogicalType_CR5DSFUIE060",
	163: "LogicalType_CR5D0MPUA450",
	164: "LogicalType_CR5DECUFA050",
	165: "LogicalType_CR5DSFUIA050",
	166: "LogicalType_CR5D00L5XX60",
	167: "LogicalType_CR5D00E5XX60",
	168: "LogicalType_CR5D00L2XX60",
	169: "LogicalType_CR5D00E2XX60",
	170: "LogicalType_CR5D00EFGF60",
	171: "LogicalType_CR5D00P1MZ60",
	172: "LogicalType_CR5D00P2XX60",
	173: "LogicalType_CR5M00E1MC60",
	174: "LogicalType_CR5D00E1NC60",
	175: "LogicalType_CR5D00LAXX60",
	176: "LogicalType_CR5D0OFCA060",
	177: "LogicalType_T1XCS",
	178: "LogicalType_T1EXL2",
	179: "LogicalType_T1EX12",
	180: "LogicalType_T1EX8",
	181: "LogicalType_T1EH1",
	182: "LogicalType_T1EG24",
	183: "LogicalType_T1CH1",
	184: "LogicalType_T1CQ4",
	185: "LogicalType_T1SCA",
	186: "LogicalType_T1FAN",
	187: "LogicalType_T1PIU",
	188: "LogicalType_T1EFI",
	189: "LogicalType_XCA",
	190: "LogicalType_TNU1SCC",
	191: "LogicalType_C52MPUA",
	192: "LogicalType_C52MPUB",
	193: "LogicalType_LPUE",
	194: "LogicalType_LPUF",
	195: "LogicalType_TPA1EFI",
	196: "LogicalType_TNT1EX8",
	197: "LogicalType_OTHER",
}

var Devm_InconsistentEntitys_InconsistentEntity_LogicalType_value = map[string]int32{
	"LogicalType_UNKNOWN":                 0,
	"LogicalType_CHASSIS":                 3,
	"LogicalType_BOARDSLOT":               4,
	"LogicalType_MPUSLOT":                 5,
	"LogicalType_LPUSLOT":                 6,
	"LogicalType_SFUSLOT":                 7,
	"LogicalType_ICUSLOT":                 8,
	"LogicalType_ECUSLOT":                 9,
	"LogicalType_CLKSLOT":                 10,
	"LogicalType_FANSLOT":                 11,
	"LogicalType_POWERSLOT":               12,
	"LogicalType_PICSLOT":                 13,
	"LogicalType_OFCSLOT":                 14,
	"LogicalType_LCDSLOT":                 15,
	"LogicalType_CFCARDSLOT":              16,
	"LogicalType_CMUSLOT":                 17,
	"LogicalType_FNAME8090UNKNOWN":        18,
	"LogicalType_FNAME8090WHOLE":          19,
	"LogicalType_FNAME8090NE5000EX":       20,
	"LogicalType_FNAME8090CLUSTERCENTRAL": 21,
	"LogicalType_FNAME8090NE5000EXX_VB":   22,
	"LogicalType_CHASSIS1":                24,
	"LogicalType_CHASSIS2":                25,
	"LogicalType_CCCCHASSIS":              26,
	"LogicalType_CE585048T4S2QEI":         27,
	"LogicalType_CE685048S4QEI":           28,
	"LogicalType_CE685048T4QEI":           29,
	"LogicalType_CR52MPUA":                30,
	"LogicalType_CR52MPUB":                31,
	"LogicalType_CR55MPUA":                32,
	"LogicalType_C55MPUA":                 33,
	"LogicalType_C56MPUC":                 34,
	"LogicalType_CR55MPUAB":               35,
	"LogicalType_CR56RPUA":                36,
	"LogicalType_CR52LPUA":                37,
	"LogicalType_CR52LPUB":                38,
	"LogicalType_CR52LPUC":                39,
	"LogicalType_CR52LPUE":                40,
	"LogicalType_CR52LPUR":                41,
	"LogicalType_CR52LPUF":                42,
	"LogicalType_CR52LPUG":                43,
	"LogicalType_CR52LPUH":                44,
	"LogicalType_CR52LPUI":                45,
	"LogicalType_CR52LPUK":                46,
	"LogicalType_CR52LPUM":                47,
	"LogicalType_CR52LPUN":                48,
	"LogicalType_CR52SPUC":                49,
	"LogicalType_CR56LPUF100A":            50,
	"LogicalType_CR56LPUF100B":            51,
	"LogicalType_CR56LPUI100A":            52,
	"LogicalType_CR56LPUI100B":            53,
	"LogicalType_CR56LPUI100C":            54,
	"LogicalType_CR56LPUF200A":            55,
	"LogicalType_RNRLPUB":                 56,
	"LogicalType_RNRLPUD":                 57,
	"LogicalType_RNRLPUF":                 58,
	"LogicalType_RNRNS":                   59,
	"LogicalType_RNRGRE":                  60,
	"LogicalType_CR52SFUA":                61,
	"LogicalType_CR52SRUA":                62,
	"LogicalType_CR52SFUD":                63,
	"LogicalType_CR52SFUF":                64,
	"LogicalType_CR52SFUG":                65,
	"LogicalType_CR52SFUC":                66,
	"LogicalType_CR52SFEA":                67,
	"LogicalType_CR52KX_SFEA":             68,
	"LogicalType_CR55SFUA":                69,
	"LogicalType_CR55ECUA":                70,
	"LogicalType_CR55CX_ECUA":             71,
	"LogicalType_CR55ICUA":                72,
	"LogicalType_CR56SFUF100B":            73,
	"LogicalType_CR55SFUI100A":            74,
	"LogicalType_CR56SFUF100C":            75,
	"LogicalType_CR56SFU200A":             76,
	"LogicalType_CR55ECU100A":             77,
	"LogicalType_CR52SFEB":                78,
	"LogicalType_DE51SRU1A":               79,
	"LogicalType_DE51SRU1B":               80,
	"LogicalType_DE51SRU1C":               81,
	"LogicalType_CR5DSFUFA06C":            82,
	"LogicalType_CR5DSFUIK060":            83,
	"LogicalType_BOOTROM":                 84,
	"LogicalType_FLASH":                   85,
	"LogicalType_EPLD1":                   86,
	"LogicalType_EPLD2":                   87,
	"LogicalType_CR52E1XX":                88,
	"LogicalType_CR52W1XX":                89,
	"LogicalType_CR52EAGF":                90,
	"LogicalType_CR52P4UF":                91,
	"LogicalType_CR52P1XX":                92,
	"LogicalType_CR52P4HF":                93,
	"LogicalType_CR52E2XX":                94,
	"LogicalType_CR52W2XX":                95,
	"LogicalType_CR52P2XX":                96,
	"LogicalType_CR52EMGE":                97,
	"LogicalType_CR52P8CF":                98,
	"LogicalType_CR52EFGE":                99,
	"LogicalType_CR52P1UF":                100,
	"LogicalType_CR52P2UF":                101,
	"LogicalType_CR52E5GF":                102,
	"LogicalType_CR52P4CF":                103,
	"LogicalType_CR53P1MZ":                104,
	"LogicalType_CR52D1MV":                105,
	"LogicalType_CR52E4XX":                106,
	"LogicalType_CR56P2XX":                107,
	"LogicalType_CR56L2XX":                108,
	"LogicalType_CR56E2XX":                109,
	"LogicalType_CR56D2XX":                110,
	"LogicalType_CR56L5XX":                111,
	"LogicalType_CR56E5XX":                112,
	"LogicalType_CR56P1MZ":                113,
	"LogicalType_CR56E1NC":                114,
	"LogicalType_CR56EFGF":                115,
	"LogicalType_CR52EKGFY":               116,
	"LogicalType_CR57EFGF":                117,
	"LogicalType_CR56E1NCC":               118,
	"LogicalType_CR52P1XZ":                119,
	"LogicalType_CR52E1XZ":                120,
	"LogicalType_CR52W1XZ":                121,
	"LogicalType_SPU":                     122,
	"LogicalType_TSUA":                    123,
	"LogicalType_CR56E1MC":                124,
	"LogicalType_CR56LAXFA":               125,
	"LogicalType_CR55OFCA":                126,
	"LogicalType_CR55CX_OFCA":             127,
	"LogicalType_CR52OFCB":                128,
	"LogicalType_CR55OFC40":               129,
	"LogicalType_CR55OFC100A":             130,
	"LogicalType_CR55OFC100B":             131,
	"LogicalType_CR52OFCV":                132,
	"LogicalType_ETH":                     133,
	"LogicalType_POS":                     134,
	"LogicalType_GE":                      135,
	"LogicalType_X_10GE":                  136,
	"LogicalType_GF":                      137,
	"LogicalType_X_10GF":                  138,
	"LogicalType_X_40GF":                  139,
	"LogicalType_X_10GFCOM":               140,
	"LogicalType_X_40GFSPLIT":             141,
	"LogicalType_VSR":                     142,
	"LogicalType_LFE":                     143,
	"LogicalType_POWER":                   144,
	"LogicalType_CLOCK":                   145,
	"LogicalType_FAN":                     146,
	"LogicalType_LCD":                     147,
	"LogicalType_CFCARD":                  148,
	"LogicalType_CMU":                     149,
	"LogicalType_CR5D00EKGF60":            150,
	"LogicalType_CR5D00P4XX60":            151,
	"LogicalType_CR5D00P8UF60":            152,
	"LogicalType_CR5D00E4XX60":            153,
	"LogicalType_CR5D00W4XX60":            154,
	"LogicalType_CR5DLPUFA060":            155,
	"LogicalType_CR5D00LEXF60":            156,
	"LogicalType_CR5D00E2NC60":            157,
	"LogicalType_CR5DE1NLAX60":            158,
	"LogicalType_CR5DSFEBA06B":            159,
	"LogicalType_CR5D0MPUB460":            160,
	"LogicalType_CR5DSFUFA06B":            161,
	"LogicalType_CR5DSFUIE060":            162,
	"LogicalType_CR5D0MPUA450":            163,
	"LogicalType_CR5DECUFA050":            164,
	"LogicalType_CR5DSFUIA050":            165,
	"LogicalType_CR5D00L5XX60":            166,
	"LogicalType_CR5D00E5XX60":            167,
	"LogicalType_CR5D00L2XX60":            168,
	"LogicalType_CR5D00E2XX60":            169,
	"LogicalType_CR5D00EFGF60":            170,
	"LogicalType_CR5D00P1MZ60":            171,
	"LogicalType_CR5D00P2XX60":            172,
	"LogicalType_CR5M00E1MC60":            173,
	"LogicalType_CR5D00E1NC60":            174,
	"LogicalType_CR5D00LAXX60":            175,
	"LogicalType_CR5D0OFCA060":            176,
	"LogicalType_T1XCS":                   177,
	"LogicalType_T1EXL2":                  178,
	"LogicalType_T1EX12":                  179,
	"LogicalType_T1EX8":                   180,
	"LogicalType_T1EH1":                   181,
	"LogicalType_T1EG24":                  182,
	"LogicalType_T1CH1":                   183,
	"LogicalType_T1CQ4":                   184,
	"LogicalType_T1SCA":                   185,
	"LogicalType_T1FAN":                   186,
	"LogicalType_T1PIU":                   187,
	"LogicalType_T1EFI":                   188,
	"LogicalType_XCA":                     189,
	"LogicalType_TNU1SCC":                 190,
	"LogicalType_C52MPUA":                 191,
	"LogicalType_C52MPUB":                 192,
	"LogicalType_LPUE":                    193,
	"LogicalType_LPUF":                    194,
	"LogicalType_TPA1EFI":                 195,
	"LogicalType_TNT1EX8":                 196,
	"LogicalType_OTHER":                   197,
}

func (x Devm_InconsistentEntitys_InconsistentEntity_LogicalType) String() string {
	return proto.EnumName(Devm_InconsistentEntitys_InconsistentEntity_LogicalType_name, int32(x))
}

func (Devm_InconsistentEntitys_InconsistentEntity_LogicalType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 13, 0, 1}
}

type Devm_InconsistentEntitys_InconsistentEntity_PhysicalType int32

const (
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_UNKNOWN                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 0
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CHASSIS                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 3
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_BOARDSLOT               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 4
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_MPUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 5
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_LPUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 6
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_SFUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 7
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_ICUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 8
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_ECUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 9
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CLKSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 10
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FANSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 11
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_POWERSLOT               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 12
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_PICSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 13
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_OFCSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 14
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_LCDSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 15
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CFCARDSLOT              Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 16
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CMUSLOT                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 17
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FNAME8090UNKNOWN        Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 18
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FNAME8090WHOLE          Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 19
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FNAME8090NE5000EX       Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 20
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FNAME8090CLUSTERCENTRAL Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 21
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FNAME8090NE5000EXX_VB   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 22
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CHASSIS1                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 24
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CHASSIS2                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 25
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CCCCHASSIS              Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 26
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CE585048T4S2QEI         Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 27
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CE685048S4QEI           Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 28
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CE685048T4QEI           Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 29
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52MPUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 30
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52MPUB                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 31
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55MPUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 32
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_C55MPUA                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 33
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_C56MPUC                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 34
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55MPUAB               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 35
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56RPUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 36
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 37
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUB                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 38
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUC                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 39
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUE                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 40
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUR                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 41
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 42
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUG                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 43
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUH                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 44
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUI                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 45
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUK                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 46
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUM                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 47
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52LPUN                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 48
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SPUC                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 49
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56LPUF100A            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 50
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56LPUF100B            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 51
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56LPUI100A            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 52
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56LPUI100B            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 53
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56LPUI100C            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 54
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56LPUF200A            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 55
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_RNRLPUB                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 56
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_RNRLPUD                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 57
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_RNRLPUF                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 58
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_RNRNS                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 59
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_RNRGRE                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 60
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SFUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 61
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SRUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 62
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SFUD                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 63
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SFUF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 64
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SFUG                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 65
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SFUC                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 66
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SFEA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 67
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52KX_SFEA             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 68
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55SFUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 69
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55ECUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 70
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55CX_ECUA             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 71
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55ICUA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 72
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56SFUF100B            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 73
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55SFUI100A            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 74
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56SFUF100C            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 75
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56SFU200A             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 76
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55ECU100A             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 77
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52SFEB                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 78
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_DE51SRU1A               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 79
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_DE51SRU1B               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 80
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_DE51SRU1C               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 81
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DSFUFA06C            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 82
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DSFUIK060            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 83
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_BOOTROM                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 84
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FLASH                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 85
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_EPLD1                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 86
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_EPLD2                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 87
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52E1XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 88
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52W1XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 89
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52EAGF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 90
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P4UF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 91
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P1XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 92
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P4HF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 93
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52E2XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 94
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52W2XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 95
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P2XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 96
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52EMGE                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 97
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P8CF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 98
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52EFGE                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 99
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P1UF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 100
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P2UF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 101
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52E5GF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 102
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P4CF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 103
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR53P1MZ                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 104
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52D1MV                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 105
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52E4XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 106
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56P2XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 107
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56L2XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 108
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56E2XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 109
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56D2XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 110
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56L5XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 111
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56E5XX                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 112
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56P1MZ                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 113
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56E1NC                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 114
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56EFGF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 115
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52EKGFY               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 116
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR57EFGF                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 117
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56E1NCC               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 118
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52P1XZ                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 119
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52E1XZ                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 120
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52W1XZ                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 121
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_SPU                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 122
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_TSUA                    Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 123
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56E1MC                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 124
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR56LAXFA               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 125
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55OFCA                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 126
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55CX_OFCA             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 127
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52OFCB                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 128
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55OFC40               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 129
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55OFC100A             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 130
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR55OFC100B             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 131
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR52OFCV                Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 132
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_ETH                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 133
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_POS                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 134
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_GE                      Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 135
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_X_10GE                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 136
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_GF                      Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 137
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_X_10GF                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 138
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_X_40GF                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 139
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_X_10GFCOM               Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 140
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_X_40GFSPLIT             Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 141
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_VSR                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 142
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_LFE                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 143
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_POWER                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 144
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CLOCK                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 145
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_FAN                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 146
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_LCD                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 147
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CFCARD                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 148
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CMU                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 149
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00EKGF60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 150
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00P4XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 151
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00P8UF60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 152
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00E4XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 153
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00W4XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 154
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DLPUFA060            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 155
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00LEXF60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 156
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00E2NC60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 157
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DE1NLAX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 158
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DSFEBA06B            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 159
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D0MPUB460            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 160
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DSFUFA06B            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 161
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DSFUIE060            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 162
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D0MPUA450            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 163
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DECUFA050            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 164
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5DSFUIA050            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 165
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00L5XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 166
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00E5XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 167
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00L2XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 168
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00E2XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 169
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00EFGF60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 170
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00P1MZ60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 171
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00P2XX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 172
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5M00E1MC60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 173
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00E1NC60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 174
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D00LAXX60            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 175
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_CR5D0OFCA060            Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 176
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1XCS                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 177
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1EXL2                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 178
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1EX12                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 179
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1EX8                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 180
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1EH1                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 181
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1EG24                  Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 182
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1CH1                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 183
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1CQ4                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 184
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1SCA                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 185
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1FAN                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 186
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1PIU                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 187
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_T1EFI                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 188
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_XCA                     Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 189
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_TNU1SCC                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 190
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_C52MPUA                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 191
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_C52MPUB                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 192
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_LPUE                    Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 193
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_LPUF                    Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 194
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_TPA1EFI                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 195
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_TNT1EX8                 Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 196
	Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_OTHER                   Devm_InconsistentEntitys_InconsistentEntity_PhysicalType = 197
)

var Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_name = map[int32]string{
	0:   "PhysicalType_UNKNOWN",
	3:   "PhysicalType_CHASSIS",
	4:   "PhysicalType_BOARDSLOT",
	5:   "PhysicalType_MPUSLOT",
	6:   "PhysicalType_LPUSLOT",
	7:   "PhysicalType_SFUSLOT",
	8:   "PhysicalType_ICUSLOT",
	9:   "PhysicalType_ECUSLOT",
	10:  "PhysicalType_CLKSLOT",
	11:  "PhysicalType_FANSLOT",
	12:  "PhysicalType_POWERSLOT",
	13:  "PhysicalType_PICSLOT",
	14:  "PhysicalType_OFCSLOT",
	15:  "PhysicalType_LCDSLOT",
	16:  "PhysicalType_CFCARDSLOT",
	17:  "PhysicalType_CMUSLOT",
	18:  "PhysicalType_FNAME8090UNKNOWN",
	19:  "PhysicalType_FNAME8090WHOLE",
	20:  "PhysicalType_FNAME8090NE5000EX",
	21:  "PhysicalType_FNAME8090CLUSTERCENTRAL",
	22:  "PhysicalType_FNAME8090NE5000EXX_VB",
	24:  "PhysicalType_CHASSIS1",
	25:  "PhysicalType_CHASSIS2",
	26:  "PhysicalType_CCCCHASSIS",
	27:  "PhysicalType_CE585048T4S2QEI",
	28:  "PhysicalType_CE685048S4QEI",
	29:  "PhysicalType_CE685048T4QEI",
	30:  "PhysicalType_CR52MPUA",
	31:  "PhysicalType_CR52MPUB",
	32:  "PhysicalType_CR55MPUA",
	33:  "PhysicalType_C55MPUA",
	34:  "PhysicalType_C56MPUC",
	35:  "PhysicalType_CR55MPUAB",
	36:  "PhysicalType_CR56RPUA",
	37:  "PhysicalType_CR52LPUA",
	38:  "PhysicalType_CR52LPUB",
	39:  "PhysicalType_CR52LPUC",
	40:  "PhysicalType_CR52LPUE",
	41:  "PhysicalType_CR52LPUR",
	42:  "PhysicalType_CR52LPUF",
	43:  "PhysicalType_CR52LPUG",
	44:  "PhysicalType_CR52LPUH",
	45:  "PhysicalType_CR52LPUI",
	46:  "PhysicalType_CR52LPUK",
	47:  "PhysicalType_CR52LPUM",
	48:  "PhysicalType_CR52LPUN",
	49:  "PhysicalType_CR52SPUC",
	50:  "PhysicalType_CR56LPUF100A",
	51:  "PhysicalType_CR56LPUF100B",
	52:  "PhysicalType_CR56LPUI100A",
	53:  "PhysicalType_CR56LPUI100B",
	54:  "PhysicalType_CR56LPUI100C",
	55:  "PhysicalType_CR56LPUF200A",
	56:  "PhysicalType_RNRLPUB",
	57:  "PhysicalType_RNRLPUD",
	58:  "PhysicalType_RNRLPUF",
	59:  "PhysicalType_RNRNS",
	60:  "PhysicalType_RNRGRE",
	61:  "PhysicalType_CR52SFUA",
	62:  "PhysicalType_CR52SRUA",
	63:  "PhysicalType_CR52SFUD",
	64:  "PhysicalType_CR52SFUF",
	65:  "PhysicalType_CR52SFUG",
	66:  "PhysicalType_CR52SFUC",
	67:  "PhysicalType_CR52SFEA",
	68:  "PhysicalType_CR52KX_SFEA",
	69:  "PhysicalType_CR55SFUA",
	70:  "PhysicalType_CR55ECUA",
	71:  "PhysicalType_CR55CX_ECUA",
	72:  "PhysicalType_CR55ICUA",
	73:  "PhysicalType_CR56SFUF100B",
	74:  "PhysicalType_CR55SFUI100A",
	75:  "PhysicalType_CR56SFUF100C",
	76:  "PhysicalType_CR56SFU200A",
	77:  "PhysicalType_CR55ECU100A",
	78:  "PhysicalType_CR52SFEB",
	79:  "PhysicalType_DE51SRU1A",
	80:  "PhysicalType_DE51SRU1B",
	81:  "PhysicalType_DE51SRU1C",
	82:  "PhysicalType_CR5DSFUFA06C",
	83:  "PhysicalType_CR5DSFUIK060",
	84:  "PhysicalType_BOOTROM",
	85:  "PhysicalType_FLASH",
	86:  "PhysicalType_EPLD1",
	87:  "PhysicalType_EPLD2",
	88:  "PhysicalType_CR52E1XX",
	89:  "PhysicalType_CR52W1XX",
	90:  "PhysicalType_CR52EAGF",
	91:  "PhysicalType_CR52P4UF",
	92:  "PhysicalType_CR52P1XX",
	93:  "PhysicalType_CR52P4HF",
	94:  "PhysicalType_CR52E2XX",
	95:  "PhysicalType_CR52W2XX",
	96:  "PhysicalType_CR52P2XX",
	97:  "PhysicalType_CR52EMGE",
	98:  "PhysicalType_CR52P8CF",
	99:  "PhysicalType_CR52EFGE",
	100: "PhysicalType_CR52P1UF",
	101: "PhysicalType_CR52P2UF",
	102: "PhysicalType_CR52E5GF",
	103: "PhysicalType_CR52P4CF",
	104: "PhysicalType_CR53P1MZ",
	105: "PhysicalType_CR52D1MV",
	106: "PhysicalType_CR52E4XX",
	107: "PhysicalType_CR56P2XX",
	108: "PhysicalType_CR56L2XX",
	109: "PhysicalType_CR56E2XX",
	110: "PhysicalType_CR56D2XX",
	111: "PhysicalType_CR56L5XX",
	112: "PhysicalType_CR56E5XX",
	113: "PhysicalType_CR56P1MZ",
	114: "PhysicalType_CR56E1NC",
	115: "PhysicalType_CR56EFGF",
	116: "PhysicalType_CR52EKGFY",
	117: "PhysicalType_CR57EFGF",
	118: "PhysicalType_CR56E1NCC",
	119: "PhysicalType_CR52P1XZ",
	120: "PhysicalType_CR52E1XZ",
	121: "PhysicalType_CR52W1XZ",
	122: "PhysicalType_SPU",
	123: "PhysicalType_TSUA",
	124: "PhysicalType_CR56E1MC",
	125: "PhysicalType_CR56LAXFA",
	126: "PhysicalType_CR55OFCA",
	127: "PhysicalType_CR55CX_OFCA",
	128: "PhysicalType_CR52OFCB",
	129: "PhysicalType_CR55OFC40",
	130: "PhysicalType_CR55OFC100A",
	131: "PhysicalType_CR55OFC100B",
	132: "PhysicalType_CR52OFCV",
	133: "PhysicalType_ETH",
	134: "PhysicalType_POS",
	135: "PhysicalType_GE",
	136: "PhysicalType_X_10GE",
	137: "PhysicalType_GF",
	138: "PhysicalType_X_10GF",
	139: "PhysicalType_X_40GF",
	140: "PhysicalType_X_10GFCOM",
	141: "PhysicalType_X_40GFSPLIT",
	142: "PhysicalType_VSR",
	143: "PhysicalType_LFE",
	144: "PhysicalType_POWER",
	145: "PhysicalType_CLOCK",
	146: "PhysicalType_FAN",
	147: "PhysicalType_LCD",
	148: "PhysicalType_CFCARD",
	149: "PhysicalType_CMU",
	150: "PhysicalType_CR5D00EKGF60",
	151: "PhysicalType_CR5D00P4XX60",
	152: "PhysicalType_CR5D00P8UF60",
	153: "PhysicalType_CR5D00E4XX60",
	154: "PhysicalType_CR5D00W4XX60",
	155: "PhysicalType_CR5DLPUFA060",
	156: "PhysicalType_CR5D00LEXF60",
	157: "PhysicalType_CR5D00E2NC60",
	158: "PhysicalType_CR5DE1NLAX60",
	159: "PhysicalType_CR5DSFEBA06B",
	160: "PhysicalType_CR5D0MPUB460",
	161: "PhysicalType_CR5DSFUFA06B",
	162: "PhysicalType_CR5DSFUIE060",
	163: "PhysicalType_CR5D0MPUA450",
	164: "PhysicalType_CR5DECUFA050",
	165: "PhysicalType_CR5DSFUIA050",
	166: "PhysicalType_CR5D00L5XX60",
	167: "PhysicalType_CR5D00E5XX60",
	168: "PhysicalType_CR5D00L2XX60",
	169: "PhysicalType_CR5D00E2XX60",
	170: "PhysicalType_CR5D00EFGF60",
	171: "PhysicalType_CR5D00P1MZ60",
	172: "PhysicalType_CR5D00P2XX60",
	173: "PhysicalType_CR5M00E1MC60",
	174: "PhysicalType_CR5D00E1NC60",
	175: "PhysicalType_CR5D00LAXX60",
	176: "PhysicalType_CR5D0OFCA060",
	177: "PhysicalType_T1XCS",
	178: "PhysicalType_T1EXL2",
	179: "PhysicalType_T1EX12",
	180: "PhysicalType_T1EX8",
	181: "PhysicalType_T1EH1",
	182: "PhysicalType_T1EG24",
	183: "PhysicalType_T1CH1",
	184: "PhysicalType_T1CQ4",
	185: "PhysicalType_T1SCA",
	186: "PhysicalType_T1FAN",
	187: "PhysicalType_T1PIU",
	188: "PhysicalType_T1EFI",
	189: "PhysicalType_XCA",
	190: "PhysicalType_TNU1SCC",
	191: "PhysicalType_C52MPUA",
	192: "PhysicalType_C52MPUB",
	193: "PhysicalType_LPUE",
	194: "PhysicalType_LPUF",
	195: "PhysicalType_TPA1EFI",
	196: "PhysicalType_TNT1EX8",
	197: "PhysicalType_OTHER",
}

var Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_value = map[string]int32{
	"PhysicalType_UNKNOWN":                 0,
	"PhysicalType_CHASSIS":                 3,
	"PhysicalType_BOARDSLOT":               4,
	"PhysicalType_MPUSLOT":                 5,
	"PhysicalType_LPUSLOT":                 6,
	"PhysicalType_SFUSLOT":                 7,
	"PhysicalType_ICUSLOT":                 8,
	"PhysicalType_ECUSLOT":                 9,
	"PhysicalType_CLKSLOT":                 10,
	"PhysicalType_FANSLOT":                 11,
	"PhysicalType_POWERSLOT":               12,
	"PhysicalType_PICSLOT":                 13,
	"PhysicalType_OFCSLOT":                 14,
	"PhysicalType_LCDSLOT":                 15,
	"PhysicalType_CFCARDSLOT":              16,
	"PhysicalType_CMUSLOT":                 17,
	"PhysicalType_FNAME8090UNKNOWN":        18,
	"PhysicalType_FNAME8090WHOLE":          19,
	"PhysicalType_FNAME8090NE5000EX":       20,
	"PhysicalType_FNAME8090CLUSTERCENTRAL": 21,
	"PhysicalType_FNAME8090NE5000EXX_VB":   22,
	"PhysicalType_CHASSIS1":                24,
	"PhysicalType_CHASSIS2":                25,
	"PhysicalType_CCCCHASSIS":              26,
	"PhysicalType_CE585048T4S2QEI":         27,
	"PhysicalType_CE685048S4QEI":           28,
	"PhysicalType_CE685048T4QEI":           29,
	"PhysicalType_CR52MPUA":                30,
	"PhysicalType_CR52MPUB":                31,
	"PhysicalType_CR55MPUA":                32,
	"PhysicalType_C55MPUA":                 33,
	"PhysicalType_C56MPUC":                 34,
	"PhysicalType_CR55MPUAB":               35,
	"PhysicalType_CR56RPUA":                36,
	"PhysicalType_CR52LPUA":                37,
	"PhysicalType_CR52LPUB":                38,
	"PhysicalType_CR52LPUC":                39,
	"PhysicalType_CR52LPUE":                40,
	"PhysicalType_CR52LPUR":                41,
	"PhysicalType_CR52LPUF":                42,
	"PhysicalType_CR52LPUG":                43,
	"PhysicalType_CR52LPUH":                44,
	"PhysicalType_CR52LPUI":                45,
	"PhysicalType_CR52LPUK":                46,
	"PhysicalType_CR52LPUM":                47,
	"PhysicalType_CR52LPUN":                48,
	"PhysicalType_CR52SPUC":                49,
	"PhysicalType_CR56LPUF100A":            50,
	"PhysicalType_CR56LPUF100B":            51,
	"PhysicalType_CR56LPUI100A":            52,
	"PhysicalType_CR56LPUI100B":            53,
	"PhysicalType_CR56LPUI100C":            54,
	"PhysicalType_CR56LPUF200A":            55,
	"PhysicalType_RNRLPUB":                 56,
	"PhysicalType_RNRLPUD":                 57,
	"PhysicalType_RNRLPUF":                 58,
	"PhysicalType_RNRNS":                   59,
	"PhysicalType_RNRGRE":                  60,
	"PhysicalType_CR52SFUA":                61,
	"PhysicalType_CR52SRUA":                62,
	"PhysicalType_CR52SFUD":                63,
	"PhysicalType_CR52SFUF":                64,
	"PhysicalType_CR52SFUG":                65,
	"PhysicalType_CR52SFUC":                66,
	"PhysicalType_CR52SFEA":                67,
	"PhysicalType_CR52KX_SFEA":             68,
	"PhysicalType_CR55SFUA":                69,
	"PhysicalType_CR55ECUA":                70,
	"PhysicalType_CR55CX_ECUA":             71,
	"PhysicalType_CR55ICUA":                72,
	"PhysicalType_CR56SFUF100B":            73,
	"PhysicalType_CR55SFUI100A":            74,
	"PhysicalType_CR56SFUF100C":            75,
	"PhysicalType_CR56SFU200A":             76,
	"PhysicalType_CR55ECU100A":             77,
	"PhysicalType_CR52SFEB":                78,
	"PhysicalType_DE51SRU1A":               79,
	"PhysicalType_DE51SRU1B":               80,
	"PhysicalType_DE51SRU1C":               81,
	"PhysicalType_CR5DSFUFA06C":            82,
	"PhysicalType_CR5DSFUIK060":            83,
	"PhysicalType_BOOTROM":                 84,
	"PhysicalType_FLASH":                   85,
	"PhysicalType_EPLD1":                   86,
	"PhysicalType_EPLD2":                   87,
	"PhysicalType_CR52E1XX":                88,
	"PhysicalType_CR52W1XX":                89,
	"PhysicalType_CR52EAGF":                90,
	"PhysicalType_CR52P4UF":                91,
	"PhysicalType_CR52P1XX":                92,
	"PhysicalType_CR52P4HF":                93,
	"PhysicalType_CR52E2XX":                94,
	"PhysicalType_CR52W2XX":                95,
	"PhysicalType_CR52P2XX":                96,
	"PhysicalType_CR52EMGE":                97,
	"PhysicalType_CR52P8CF":                98,
	"PhysicalType_CR52EFGE":                99,
	"PhysicalType_CR52P1UF":                100,
	"PhysicalType_CR52P2UF":                101,
	"PhysicalType_CR52E5GF":                102,
	"PhysicalType_CR52P4CF":                103,
	"PhysicalType_CR53P1MZ":                104,
	"PhysicalType_CR52D1MV":                105,
	"PhysicalType_CR52E4XX":                106,
	"PhysicalType_CR56P2XX":                107,
	"PhysicalType_CR56L2XX":                108,
	"PhysicalType_CR56E2XX":                109,
	"PhysicalType_CR56D2XX":                110,
	"PhysicalType_CR56L5XX":                111,
	"PhysicalType_CR56E5XX":                112,
	"PhysicalType_CR56P1MZ":                113,
	"PhysicalType_CR56E1NC":                114,
	"PhysicalType_CR56EFGF":                115,
	"PhysicalType_CR52EKGFY":               116,
	"PhysicalType_CR57EFGF":                117,
	"PhysicalType_CR56E1NCC":               118,
	"PhysicalType_CR52P1XZ":                119,
	"PhysicalType_CR52E1XZ":                120,
	"PhysicalType_CR52W1XZ":                121,
	"PhysicalType_SPU":                     122,
	"PhysicalType_TSUA":                    123,
	"PhysicalType_CR56E1MC":                124,
	"PhysicalType_CR56LAXFA":               125,
	"PhysicalType_CR55OFCA":                126,
	"PhysicalType_CR55CX_OFCA":             127,
	"PhysicalType_CR52OFCB":                128,
	"PhysicalType_CR55OFC40":               129,
	"PhysicalType_CR55OFC100A":             130,
	"PhysicalType_CR55OFC100B":             131,
	"PhysicalType_CR52OFCV":                132,
	"PhysicalType_ETH":                     133,
	"PhysicalType_POS":                     134,
	"PhysicalType_GE":                      135,
	"PhysicalType_X_10GE":                  136,
	"PhysicalType_GF":                      137,
	"PhysicalType_X_10GF":                  138,
	"PhysicalType_X_40GF":                  139,
	"PhysicalType_X_10GFCOM":               140,
	"PhysicalType_X_40GFSPLIT":             141,
	"PhysicalType_VSR":                     142,
	"PhysicalType_LFE":                     143,
	"PhysicalType_POWER":                   144,
	"PhysicalType_CLOCK":                   145,
	"PhysicalType_FAN":                     146,
	"PhysicalType_LCD":                     147,
	"PhysicalType_CFCARD":                  148,
	"PhysicalType_CMU":                     149,
	"PhysicalType_CR5D00EKGF60":            150,
	"PhysicalType_CR5D00P4XX60":            151,
	"PhysicalType_CR5D00P8UF60":            152,
	"PhysicalType_CR5D00E4XX60":            153,
	"PhysicalType_CR5D00W4XX60":            154,
	"PhysicalType_CR5DLPUFA060":            155,
	"PhysicalType_CR5D00LEXF60":            156,
	"PhysicalType_CR5D00E2NC60":            157,
	"PhysicalType_CR5DE1NLAX60":            158,
	"PhysicalType_CR5DSFEBA06B":            159,
	"PhysicalType_CR5D0MPUB460":            160,
	"PhysicalType_CR5DSFUFA06B":            161,
	"PhysicalType_CR5DSFUIE060":            162,
	"PhysicalType_CR5D0MPUA450":            163,
	"PhysicalType_CR5DECUFA050":            164,
	"PhysicalType_CR5DSFUIA050":            165,
	"PhysicalType_CR5D00L5XX60":            166,
	"PhysicalType_CR5D00E5XX60":            167,
	"PhysicalType_CR5D00L2XX60":            168,
	"PhysicalType_CR5D00E2XX60":            169,
	"PhysicalType_CR5D00EFGF60":            170,
	"PhysicalType_CR5D00P1MZ60":            171,
	"PhysicalType_CR5D00P2XX60":            172,
	"PhysicalType_CR5M00E1MC60":            173,
	"PhysicalType_CR5D00E1NC60":            174,
	"PhysicalType_CR5D00LAXX60":            175,
	"PhysicalType_CR5D0OFCA060":            176,
	"PhysicalType_T1XCS":                   177,
	"PhysicalType_T1EXL2":                  178,
	"PhysicalType_T1EX12":                  179,
	"PhysicalType_T1EX8":                   180,
	"PhysicalType_T1EH1":                   181,
	"PhysicalType_T1EG24":                  182,
	"PhysicalType_T1CH1":                   183,
	"PhysicalType_T1CQ4":                   184,
	"PhysicalType_T1SCA":                   185,
	"PhysicalType_T1FAN":                   186,
	"PhysicalType_T1PIU":                   187,
	"PhysicalType_T1EFI":                   188,
	"PhysicalType_XCA":                     189,
	"PhysicalType_TNU1SCC":                 190,
	"PhysicalType_C52MPUA":                 191,
	"PhysicalType_C52MPUB":                 192,
	"PhysicalType_LPUE":                    193,
	"PhysicalType_LPUF":                    194,
	"PhysicalType_TPA1EFI":                 195,
	"PhysicalType_TNT1EX8":                 196,
	"PhysicalType_OTHER":                   197,
}

func (x Devm_InconsistentEntitys_InconsistentEntity_PhysicalType) String() string {
	return proto.EnumName(Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_name, int32(x))
}

func (Devm_InconsistentEntitys_InconsistentEntity_PhysicalType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 13, 0, 2}
}

type Devm_InconsistentEntitys_InconsistentEntity_OperState int32

const (
	Devm_InconsistentEntitys_InconsistentEntity_OperState_UNKNOWN              Devm_InconsistentEntitys_InconsistentEntity_OperState = 0
	Devm_InconsistentEntitys_InconsistentEntity_OperState_NORMAL               Devm_InconsistentEntitys_InconsistentEntity_OperState = 1
	Devm_InconsistentEntitys_InconsistentEntity_OperState_FAULT                Devm_InconsistentEntitys_InconsistentEntity_OperState = 2
	Devm_InconsistentEntitys_InconsistentEntity_OperState_OFFLINE              Devm_InconsistentEntitys_InconsistentEntity_OperState = 3
	Devm_InconsistentEntitys_InconsistentEntity_OperState_NOTSUPPORTED         Devm_InconsistentEntitys_InconsistentEntity_OperState = 4
	Devm_InconsistentEntitys_InconsistentEntity_OperState_OPTICALNOTEQUIPPED   Devm_InconsistentEntitys_InconsistentEntity_OperState = 5
	Devm_InconsistentEntitys_InconsistentEntity_OperState_NOTINSTALL           Devm_InconsistentEntitys_InconsistentEntity_OperState = 6
	Devm_InconsistentEntitys_InconsistentEntity_OperState_WRONGTYPE            Devm_InconsistentEntitys_InconsistentEntity_OperState = 7
	Devm_InconsistentEntitys_InconsistentEntity_OperState_REGISTERED           Devm_InconsistentEntitys_InconsistentEntity_OperState = 8
	Devm_InconsistentEntitys_InconsistentEntity_OperState_UNREGISTERED         Devm_InconsistentEntitys_InconsistentEntity_OperState = 9
	Devm_InconsistentEntitys_InconsistentEntity_OperState_POWEROFF             Devm_InconsistentEntitys_InconsistentEntity_OperState = 10
	Devm_InconsistentEntitys_InconsistentEntity_OperState_PORTX_PHYSICALX_DOWN Devm_InconsistentEntitys_InconsistentEntity_OperState = 11
)

var Devm_InconsistentEntitys_InconsistentEntity_OperState_name = map[int32]string{
	0:  "OperState_UNKNOWN",
	1:  "OperState_NORMAL",
	2:  "OperState_FAULT",
	3:  "OperState_OFFLINE",
	4:  "OperState_NOTSUPPORTED",
	5:  "OperState_OPTICALNOTEQUIPPED",
	6:  "OperState_NOTINSTALL",
	7:  "OperState_WRONGTYPE",
	8:  "OperState_REGISTERED",
	9:  "OperState_UNREGISTERED",
	10: "OperState_POWEROFF",
	11: "OperState_PORTX_PHYSICALX_DOWN",
}

var Devm_InconsistentEntitys_InconsistentEntity_OperState_value = map[string]int32{
	"OperState_UNKNOWN":              0,
	"OperState_NORMAL":               1,
	"OperState_FAULT":                2,
	"OperState_OFFLINE":              3,
	"OperState_NOTSUPPORTED":         4,
	"OperState_OPTICALNOTEQUIPPED":   5,
	"OperState_NOTINSTALL":           6,
	"OperState_WRONGTYPE":            7,
	"OperState_REGISTERED":           8,
	"OperState_UNREGISTERED":         9,
	"OperState_POWEROFF":             10,
	"OperState_PORTX_PHYSICALX_DOWN": 11,
}

func (x Devm_InconsistentEntitys_InconsistentEntity_OperState) String() string {
	return proto.EnumName(Devm_InconsistentEntitys_InconsistentEntity_OperState_name, int32(x))
}

func (Devm_InconsistentEntitys_InconsistentEntity_OperState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 13, 0, 3}
}

type Devm_OfflineCfgs_Offline_Class int32

const (
	Devm_OfflineCfgs_Offline_INVALID_ENUM_VALUE_Class Devm_OfflineCfgs_Offline_Class = 0
	Devm_OfflineCfgs_Offline_Class_CHASSIS            Devm_OfflineCfgs_Offline_Class = 1
	Devm_OfflineCfgs_Offline_Class_BOARD              Devm_OfflineCfgs_Offline_Class = 3
	Devm_OfflineCfgs_Offline_Class_CARD               Devm_OfflineCfgs_Offline_Class = 8
)

var Devm_OfflineCfgs_Offline_Class_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_Class",
	1: "Class_CHASSIS",
	3: "Class_BOARD",
	8: "Class_CARD",
}

var Devm_OfflineCfgs_Offline_Class_value = map[string]int32{
	"INVALID_ENUM_VALUE_Class": 0,
	"Class_CHASSIS":            1,
	"Class_BOARD":              3,
	"Class_CARD":               8,
}

func (x Devm_OfflineCfgs_Offline_Class) String() string {
	return proto.EnumName(Devm_OfflineCfgs_Offline_Class_name, int32(x))
}

func (Devm_OfflineCfgs_Offline_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 14, 0, 0}
}

type Devm struct {
	PhysicalEntitys      *Devm_PhysicalEntitys     `protobuf:"bytes,1,opt,name=physical_entitys,json=physical-entitys,proto3" json:"physical_entitys,omitempty"`
	LogicEntitys         *Devm_LogicEntitys        `protobuf:"bytes,2,opt,name=logic_entitys,json=logic-entitys,proto3" json:"logic_entitys,omitempty"`
	Chassiss             *Devm_Chassiss            `protobuf:"bytes,3,opt,name=chassiss,proto3" json:"chassiss,omitempty"`
	LogicContainers      *Devm_LogicContainers     `protobuf:"bytes,4,opt,name=logic_containers,json=logic-containers,proto3" json:"logic_containers,omitempty"`
	Containers           *Devm_Containers          `protobuf:"bytes,5,opt,name=containers,proto3" json:"containers,omitempty"`
	MpuBoards            *Devm_MpuBoards           `protobuf:"bytes,6,opt,name=mpu_boards,json=mpu-boards,proto3" json:"mpu_boards,omitempty"`
	LpuBoards            *Devm_LpuBoards           `protobuf:"bytes,7,opt,name=lpu_boards,json=lpu-boards,proto3" json:"lpu_boards,omitempty"`
	SfuBoards            *Devm_SfuBoards           `protobuf:"bytes,8,opt,name=sfu_boards,json=sfu-boards,proto3" json:"sfu_boards,omitempty"`
	Cards                *Devm_Cards               `protobuf:"bytes,9,opt,name=cards,proto3" json:"cards,omitempty"`
	CfCards              *Devm_CfCards             `protobuf:"bytes,10,opt,name=cf_cards,json=cf-cards,proto3" json:"cf_cards,omitempty"`
	Ports                *Devm_Ports               `protobuf:"bytes,11,opt,name=ports,proto3" json:"ports,omitempty"`
	LogicPorts           *Devm_LogicPorts          `protobuf:"bytes,12,opt,name=logic_ports,json=logic-ports,proto3" json:"logic_ports,omitempty"`
	EntityClasses        *Devm_EntityClasses       `protobuf:"bytes,13,opt,name=entity_classes,json=entity-classes,proto3" json:"entity_classes,omitempty"`
	InconsistentEntitys  *Devm_InconsistentEntitys `protobuf:"bytes,14,opt,name=inconsistent_entitys,json=inconsistent-entitys,proto3" json:"inconsistent_entitys,omitempty"`
	OfflineCfgs          *Devm_OfflineCfgs         `protobuf:"bytes,15,opt,name=offline_cfgs,json=offline-cfgs,proto3" json:"offline_cfgs,omitempty"`
	ScheduleReboot       *Devm_ScheduleReboot      `protobuf:"bytes,16,opt,name=schedule_reboot,json=schedule-reboot,proto3" json:"schedule_reboot,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Devm) Reset()         { *m = Devm{} }
func (m *Devm) String() string { return proto.CompactTextString(m) }
func (*Devm) ProtoMessage()    {}
func (*Devm) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0}
}

func (m *Devm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm.Unmarshal(m, b)
}
func (m *Devm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm.Marshal(b, m, deterministic)
}
func (m *Devm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm.Merge(m, src)
}
func (m *Devm) XXX_Size() int {
	return xxx_messageInfo_Devm.Size(m)
}
func (m *Devm) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm.DiscardUnknown(m)
}

var xxx_messageInfo_Devm proto.InternalMessageInfo

func (m *Devm) GetPhysicalEntitys() *Devm_PhysicalEntitys {
	if m != nil {
		return m.PhysicalEntitys
	}
	return nil
}

func (m *Devm) GetLogicEntitys() *Devm_LogicEntitys {
	if m != nil {
		return m.LogicEntitys
	}
	return nil
}

func (m *Devm) GetChassiss() *Devm_Chassiss {
	if m != nil {
		return m.Chassiss
	}
	return nil
}

func (m *Devm) GetLogicContainers() *Devm_LogicContainers {
	if m != nil {
		return m.LogicContainers
	}
	return nil
}

func (m *Devm) GetContainers() *Devm_Containers {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *Devm) GetMpuBoards() *Devm_MpuBoards {
	if m != nil {
		return m.MpuBoards
	}
	return nil
}

func (m *Devm) GetLpuBoards() *Devm_LpuBoards {
	if m != nil {
		return m.LpuBoards
	}
	return nil
}

func (m *Devm) GetSfuBoards() *Devm_SfuBoards {
	if m != nil {
		return m.SfuBoards
	}
	return nil
}

func (m *Devm) GetCards() *Devm_Cards {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *Devm) GetCfCards() *Devm_CfCards {
	if m != nil {
		return m.CfCards
	}
	return nil
}

func (m *Devm) GetPorts() *Devm_Ports {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Devm) GetLogicPorts() *Devm_LogicPorts {
	if m != nil {
		return m.LogicPorts
	}
	return nil
}

func (m *Devm) GetEntityClasses() *Devm_EntityClasses {
	if m != nil {
		return m.EntityClasses
	}
	return nil
}

func (m *Devm) GetInconsistentEntitys() *Devm_InconsistentEntitys {
	if m != nil {
		return m.InconsistentEntitys
	}
	return nil
}

func (m *Devm) GetOfflineCfgs() *Devm_OfflineCfgs {
	if m != nil {
		return m.OfflineCfgs
	}
	return nil
}

func (m *Devm) GetScheduleReboot() *Devm_ScheduleReboot {
	if m != nil {
		return m.ScheduleReboot
	}
	return nil
}

type Devm_PhysicalEntitys struct {
	PhysicalEntity       []*Devm_PhysicalEntitys_PhysicalEntity `protobuf:"bytes,1,rep,name=physical_entity,json=physical-entity,proto3" json:"physical_entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Devm_PhysicalEntitys) Reset()         { *m = Devm_PhysicalEntitys{} }
func (m *Devm_PhysicalEntitys) String() string { return proto.CompactTextString(m) }
func (*Devm_PhysicalEntitys) ProtoMessage()    {}
func (*Devm_PhysicalEntitys) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 0}
}

func (m *Devm_PhysicalEntitys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_PhysicalEntitys.Unmarshal(m, b)
}
func (m *Devm_PhysicalEntitys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_PhysicalEntitys.Marshal(b, m, deterministic)
}
func (m *Devm_PhysicalEntitys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_PhysicalEntitys.Merge(m, src)
}
func (m *Devm_PhysicalEntitys) XXX_Size() int {
	return xxx_messageInfo_Devm_PhysicalEntitys.Size(m)
}
func (m *Devm_PhysicalEntitys) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_PhysicalEntitys.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_PhysicalEntitys proto.InternalMessageInfo

func (m *Devm_PhysicalEntitys) GetPhysicalEntity() []*Devm_PhysicalEntitys_PhysicalEntity {
	if m != nil {
		return m.PhysicalEntity
	}
	return nil
}

type Devm_PhysicalEntitys_PhysicalEntity struct {
	Class                  Devm_PhysicalEntitys_PhysicalEntity_Class        `protobuf:"varint,1,opt,name=class,proto3,enum=huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_Class" json:"class,omitempty"`
	Position               string                                           `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	SerialNumber           string                                           `protobuf:"bytes,3,opt,name=serial_number,json=serial-number,proto3" json:"serial_number,omitempty"`
	Index                  uint32                                           `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	ChassisIndex           uint32                                           `protobuf:"varint,5,opt,name=chassis_index,json=chassis-index,proto3" json:"chassis_index,omitempty"`
	BoardIndex             uint32                                           `protobuf:"varint,6,opt,name=board_index,json=board-index,proto3" json:"board_index,omitempty"`
	Name                   string                                           `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	EntityDescription      string                                           `protobuf:"bytes,8,opt,name=entity_description,json=entity-description,proto3" json:"entity_description,omitempty"`
	Alias                  string                                           `protobuf:"bytes,9,opt,name=alias,proto3" json:"alias,omitempty"`
	VendorType             string                                           `protobuf:"bytes,10,opt,name=vendor_type,json=vendor-type,proto3" json:"vendor_type,omitempty"`
	ContainedIndex         uint32                                           `protobuf:"varint,11,opt,name=contained_index,json=contained-index,proto3" json:"contained_index,omitempty"`
	ParentRelativePosition uint32                                           `protobuf:"varint,12,opt,name=parent_relative_position,json=parent-relative-position,proto3" json:"parent_relative_position,omitempty"`
	HardwareVersion        string                                           `protobuf:"bytes,13,opt,name=hardware_version,json=hardware-version,proto3" json:"hardware_version,omitempty"`
	FirmwareVersion        string                                           `protobuf:"bytes,14,opt,name=firmware_version,json=firmware-version,proto3" json:"firmware_version,omitempty"`
	SoftwareVersion        string                                           `protobuf:"bytes,15,opt,name=software_version,json=software-version,proto3" json:"software_version,omitempty"`
	ModuleName             string                                           `protobuf:"bytes,16,opt,name=module_name,json=module-name,proto3" json:"module_name,omitempty"`
	IsFru                  bool                                             `protobuf:"varint,17,opt,name=is_fru,json=is-fru,proto3" json:"is_fru,omitempty"`
	AdminState             Devm_PhysicalEntitys_PhysicalEntity_AdminState   `protobuf:"varint,18,opt,name=admin_state,json=admin-state,proto3,enum=huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_AdminState" json:"admin_state,omitempty"`
	RunningState           Devm_PhysicalEntitys_PhysicalEntity_RunningState `protobuf:"varint,19,opt,name=running_state,json=running-state,proto3,enum=huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_RunningState" json:"running_state,omitempty"`
	StandbyState           Devm_PhysicalEntitys_PhysicalEntity_StandbyState `protobuf:"varint,20,opt,name=standby_state,json=standby-state,proto3,enum=huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_StandbyState" json:"standby_state,omitempty"`
	SystemOid              string                                           `protobuf:"bytes,21,opt,name=system_oid,json=system-oid,proto3" json:"system_oid,omitempty"`
	LsName                 string                                           `protobuf:"bytes,22,opt,name=ls_name,json=ls-name,proto3" json:"ls_name,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                         `json:"-"`
	XXX_unrecognized       []byte                                           `json:"-"`
	XXX_sizecache          int32                                            `json:"-"`
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) Reset()         { *m = Devm_PhysicalEntitys_PhysicalEntity{} }
func (m *Devm_PhysicalEntitys_PhysicalEntity) String() string { return proto.CompactTextString(m) }
func (*Devm_PhysicalEntitys_PhysicalEntity) ProtoMessage()    {}
func (*Devm_PhysicalEntitys_PhysicalEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 0, 0}
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_PhysicalEntitys_PhysicalEntity.Unmarshal(m, b)
}
func (m *Devm_PhysicalEntitys_PhysicalEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_PhysicalEntitys_PhysicalEntity.Marshal(b, m, deterministic)
}
func (m *Devm_PhysicalEntitys_PhysicalEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_PhysicalEntitys_PhysicalEntity.Merge(m, src)
}
func (m *Devm_PhysicalEntitys_PhysicalEntity) XXX_Size() int {
	return xxx_messageInfo_Devm_PhysicalEntitys_PhysicalEntity.Size(m)
}
func (m *Devm_PhysicalEntitys_PhysicalEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_PhysicalEntitys_PhysicalEntity.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_PhysicalEntitys_PhysicalEntity proto.InternalMessageInfo

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetClass() Devm_PhysicalEntitys_PhysicalEntity_Class {
	if m != nil {
		return m.Class
	}
	return Devm_PhysicalEntitys_PhysicalEntity_Class_OTHER
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetChassisIndex() uint32 {
	if m != nil {
		return m.ChassisIndex
	}
	return 0
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetBoardIndex() uint32 {
	if m != nil {
		return m.BoardIndex
	}
	return 0
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetEntityDescription() string {
	if m != nil {
		return m.EntityDescription
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetVendorType() string {
	if m != nil {
		return m.VendorType
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetContainedIndex() uint32 {
	if m != nil {
		return m.ContainedIndex
	}
	return 0
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetParentRelativePosition() uint32 {
	if m != nil {
		return m.ParentRelativePosition
	}
	return 0
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetHardwareVersion() string {
	if m != nil {
		return m.HardwareVersion
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetFirmwareVersion() string {
	if m != nil {
		return m.FirmwareVersion
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetSoftwareVersion() string {
	if m != nil {
		return m.SoftwareVersion
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetIsFru() bool {
	if m != nil {
		return m.IsFru
	}
	return false
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetAdminState() Devm_PhysicalEntitys_PhysicalEntity_AdminState {
	if m != nil {
		return m.AdminState
	}
	return Devm_PhysicalEntitys_PhysicalEntity_AdminState_INACTIVE
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetRunningState() Devm_PhysicalEntitys_PhysicalEntity_RunningState {
	if m != nil {
		return m.RunningState
	}
	return Devm_PhysicalEntitys_PhysicalEntity_RunningState_UNKNOWN
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetStandbyState() Devm_PhysicalEntitys_PhysicalEntity_StandbyState {
	if m != nil {
		return m.StandbyState
	}
	return Devm_PhysicalEntitys_PhysicalEntity_StandbyState_MASTER
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetSystemOid() string {
	if m != nil {
		return m.SystemOid
	}
	return ""
}

func (m *Devm_PhysicalEntitys_PhysicalEntity) GetLsName() string {
	if m != nil {
		return m.LsName
	}
	return ""
}

type Devm_LogicEntitys struct {
	LogicEntity          []*Devm_LogicEntitys_LogicEntity `protobuf:"bytes,1,rep,name=logic_entity,json=logic-entity,proto3" json:"logic_entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Devm_LogicEntitys) Reset()         { *m = Devm_LogicEntitys{} }
func (m *Devm_LogicEntitys) String() string { return proto.CompactTextString(m) }
func (*Devm_LogicEntitys) ProtoMessage()    {}
func (*Devm_LogicEntitys) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 1}
}

func (m *Devm_LogicEntitys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicEntitys.Unmarshal(m, b)
}
func (m *Devm_LogicEntitys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicEntitys.Marshal(b, m, deterministic)
}
func (m *Devm_LogicEntitys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicEntitys.Merge(m, src)
}
func (m *Devm_LogicEntitys) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicEntitys.Size(m)
}
func (m *Devm_LogicEntitys) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicEntitys.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicEntitys proto.InternalMessageInfo

func (m *Devm_LogicEntitys) GetLogicEntity() []*Devm_LogicEntitys_LogicEntity {
	if m != nil {
		return m.LogicEntity
	}
	return nil
}

type Devm_LogicEntitys_LogicEntity struct {
	Class                  Devm_LogicEntitys_LogicEntity_Class      `protobuf:"varint,1,opt,name=class,proto3,enum=huawei_devm.Devm_LogicEntitys_LogicEntity_Class" json:"class,omitempty"`
	Position               string                                   `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	SerialNumber           string                                   `protobuf:"bytes,3,opt,name=serial_number,json=serial-number,proto3" json:"serial_number,omitempty"`
	VendorType             Devm_LogicEntitys_LogicEntity_VendorType `protobuf:"varint,4,opt,name=vendor_type,json=vendor-type,proto3,enum=huawei_devm.Devm_LogicEntitys_LogicEntity_VendorType" json:"vendor_type,omitempty"`
	Name                   string                                   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	EntityDescription      string                                   `protobuf:"bytes,6,opt,name=entity_description,json=entity-description,proto3" json:"entity_description,omitempty"`
	Index                  uint32                                   `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`
	OperState              Devm_LogicEntitys_LogicEntity_OperState  `protobuf:"varint,8,opt,name=oper_state,json=oper-state,proto3,enum=huawei_devm.Devm_LogicEntitys_LogicEntity_OperState" json:"oper_state,omitempty"`
	ParentIndex            uint32                                   `protobuf:"varint,9,opt,name=parent_index,json=parent-index,proto3" json:"parent_index,omitempty"`
	ParentRelativePosition uint32                                   `protobuf:"varint,10,opt,name=parent_relative_position,json=parent-relative-position,proto3" json:"parent_relative_position,omitempty"`
	Memo                   string                                   `protobuf:"bytes,11,opt,name=memo,proto3" json:"memo,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                 `json:"-"`
	XXX_unrecognized       []byte                                   `json:"-"`
	XXX_sizecache          int32                                    `json:"-"`
}

func (m *Devm_LogicEntitys_LogicEntity) Reset()         { *m = Devm_LogicEntitys_LogicEntity{} }
func (m *Devm_LogicEntitys_LogicEntity) String() string { return proto.CompactTextString(m) }
func (*Devm_LogicEntitys_LogicEntity) ProtoMessage()    {}
func (*Devm_LogicEntitys_LogicEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 1, 0}
}

func (m *Devm_LogicEntitys_LogicEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicEntitys_LogicEntity.Unmarshal(m, b)
}
func (m *Devm_LogicEntitys_LogicEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicEntitys_LogicEntity.Marshal(b, m, deterministic)
}
func (m *Devm_LogicEntitys_LogicEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicEntitys_LogicEntity.Merge(m, src)
}
func (m *Devm_LogicEntitys_LogicEntity) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicEntitys_LogicEntity.Size(m)
}
func (m *Devm_LogicEntitys_LogicEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicEntitys_LogicEntity.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicEntitys_LogicEntity proto.InternalMessageInfo

func (m *Devm_LogicEntitys_LogicEntity) GetClass() Devm_LogicEntitys_LogicEntity_Class {
	if m != nil {
		return m.Class
	}
	return Devm_LogicEntitys_LogicEntity_Class_OTHER
}

func (m *Devm_LogicEntitys_LogicEntity) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_LogicEntitys_LogicEntity) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Devm_LogicEntitys_LogicEntity) GetVendorType() Devm_LogicEntitys_LogicEntity_VendorType {
	if m != nil {
		return m.VendorType
	}
	return Devm_LogicEntitys_LogicEntity_VendorType_UNKNOWN
}

func (m *Devm_LogicEntitys_LogicEntity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Devm_LogicEntitys_LogicEntity) GetEntityDescription() string {
	if m != nil {
		return m.EntityDescription
	}
	return ""
}

func (m *Devm_LogicEntitys_LogicEntity) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_LogicEntitys_LogicEntity) GetOperState() Devm_LogicEntitys_LogicEntity_OperState {
	if m != nil {
		return m.OperState
	}
	return Devm_LogicEntitys_LogicEntity_OperState_UNKNOWN
}

func (m *Devm_LogicEntitys_LogicEntity) GetParentIndex() uint32 {
	if m != nil {
		return m.ParentIndex
	}
	return 0
}

func (m *Devm_LogicEntitys_LogicEntity) GetParentRelativePosition() uint32 {
	if m != nil {
		return m.ParentRelativePosition
	}
	return 0
}

func (m *Devm_LogicEntitys_LogicEntity) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

type Devm_Chassiss struct {
	Chassis              []*Devm_Chassiss_Chassis `protobuf:"bytes,1,rep,name=chassis,proto3" json:"chassis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Devm_Chassiss) Reset()         { *m = Devm_Chassiss{} }
func (m *Devm_Chassiss) String() string { return proto.CompactTextString(m) }
func (*Devm_Chassiss) ProtoMessage()    {}
func (*Devm_Chassiss) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 2}
}

func (m *Devm_Chassiss) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Chassiss.Unmarshal(m, b)
}
func (m *Devm_Chassiss) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Chassiss.Marshal(b, m, deterministic)
}
func (m *Devm_Chassiss) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Chassiss.Merge(m, src)
}
func (m *Devm_Chassiss) XXX_Size() int {
	return xxx_messageInfo_Devm_Chassiss.Size(m)
}
func (m *Devm_Chassiss) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Chassiss.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Chassiss proto.InternalMessageInfo

func (m *Devm_Chassiss) GetChassis() []*Devm_Chassiss_Chassis {
	if m != nil {
		return m.Chassis
	}
	return nil
}

type Devm_Chassiss_Chassis struct {
	Position             string                                     `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                uint32                                     `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string                                     `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ServiceType          string                                     `protobuf:"bytes,4,opt,name=service_type,json=service-type,proto3" json:"service_type,omitempty"`
	SlotNum              uint32                                     `protobuf:"varint,5,opt,name=slot_num,json=slot-num,proto3" json:"slot_num,omitempty"`
	BoardNum             uint32                                     `protobuf:"varint,6,opt,name=board_num,json=board-num,proto3" json:"board_num,omitempty"`
	FanNum               uint32                                     `protobuf:"varint,7,opt,name=fan_num,json=fan-num,proto3" json:"fan_num,omitempty"`
	PowerNum             uint32                                     `protobuf:"varint,8,opt,name=power_num,json=power-num,proto3" json:"power_num,omitempty"`
	UpTime               uint32                                     `protobuf:"varint,9,opt,name=up_time,json=up-time,proto3" json:"up_time,omitempty"`
	StatusLastChange     uint32                                     `protobuf:"varint,10,opt,name=status_last_change,json=status-last-change,proto3" json:"status_last_change,omitempty"`
	EntityLastChange     uint32                                     `protobuf:"varint,11,opt,name=entity_last_change,json=entity-last-change,proto3" json:"entity_last_change,omitempty"`
	CurrentId            uint32                                     `protobuf:"varint,12,opt,name=current_id,json=current-id,proto3" json:"current_id,omitempty"`
	NextId               uint32                                     `protobuf:"varint,13,opt,name=next_id,json=next-id,proto3" json:"next_id,omitempty"`
	CurrentRunMode       Devm_Chassiss_Chassis_CurrentRunMode       `protobuf:"varint,14,opt,name=current_run_mode,json=current-run-mode,proto3,enum=huawei_devm.Devm_Chassiss_Chassis_CurrentRunMode" json:"current_run_mode,omitempty"`
	NextRunMode          Devm_Chassiss_Chassis_NextRunMode          `protobuf:"varint,15,opt,name=next_run_mode,json=next-run-mode,proto3,enum=huawei_devm.Devm_Chassiss_Chassis_NextRunMode" json:"next_run_mode,omitempty"`
	DustCleanCycle       uint32                                     `protobuf:"varint,16,opt,name=dust_clean_cycle,json=dust-clean-cycle,proto3" json:"dust_clean_cycle,omitempty"`
	LastCleanDate        string                                     `protobuf:"bytes,17,opt,name=last_clean_date,json=last-clean-date,proto3" json:"last_clean_date,omitempty"`
	UpToLastClean        uint32                                     `protobuf:"varint,18,opt,name=up_to_last_clean,json=up-to-last-clean,proto3" json:"up_to_last_clean,omitempty"`
	AlarmExistDays       uint32                                     `protobuf:"varint,19,opt,name=alarm_exist_days,json=alarm-exist-days,proto3" json:"alarm_exist_days,omitempty"`
	MonitorBoardChanges  *Devm_Chassiss_Chassis_MonitorBoardChanges `protobuf:"bytes,20,opt,name=monitor_board_changes,json=monitor-board-changes,proto3" json:"monitor_board_changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *Devm_Chassiss_Chassis) Reset()         { *m = Devm_Chassiss_Chassis{} }
func (m *Devm_Chassiss_Chassis) String() string { return proto.CompactTextString(m) }
func (*Devm_Chassiss_Chassis) ProtoMessage()    {}
func (*Devm_Chassiss_Chassis) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 2, 0}
}

func (m *Devm_Chassiss_Chassis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Chassiss_Chassis.Unmarshal(m, b)
}
func (m *Devm_Chassiss_Chassis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Chassiss_Chassis.Marshal(b, m, deterministic)
}
func (m *Devm_Chassiss_Chassis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Chassiss_Chassis.Merge(m, src)
}
func (m *Devm_Chassiss_Chassis) XXX_Size() int {
	return xxx_messageInfo_Devm_Chassiss_Chassis.Size(m)
}
func (m *Devm_Chassiss_Chassis) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Chassiss_Chassis.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Chassiss_Chassis proto.InternalMessageInfo

func (m *Devm_Chassiss_Chassis) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_Chassiss_Chassis) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Devm_Chassiss_Chassis) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *Devm_Chassiss_Chassis) GetSlotNum() uint32 {
	if m != nil {
		return m.SlotNum
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetBoardNum() uint32 {
	if m != nil {
		return m.BoardNum
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetFanNum() uint32 {
	if m != nil {
		return m.FanNum
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetPowerNum() uint32 {
	if m != nil {
		return m.PowerNum
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetUpTime() uint32 {
	if m != nil {
		return m.UpTime
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetStatusLastChange() uint32 {
	if m != nil {
		return m.StatusLastChange
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetEntityLastChange() uint32 {
	if m != nil {
		return m.EntityLastChange
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetCurrentId() uint32 {
	if m != nil {
		return m.CurrentId
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetNextId() uint32 {
	if m != nil {
		return m.NextId
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetCurrentRunMode() Devm_Chassiss_Chassis_CurrentRunMode {
	if m != nil {
		return m.CurrentRunMode
	}
	return Devm_Chassiss_Chassis_CurrentRunMode_UNKNOWN
}

func (m *Devm_Chassiss_Chassis) GetNextRunMode() Devm_Chassiss_Chassis_NextRunMode {
	if m != nil {
		return m.NextRunMode
	}
	return Devm_Chassiss_Chassis_NextRunMode_UNKNOWN
}

func (m *Devm_Chassiss_Chassis) GetDustCleanCycle() uint32 {
	if m != nil {
		return m.DustCleanCycle
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetLastCleanDate() string {
	if m != nil {
		return m.LastCleanDate
	}
	return ""
}

func (m *Devm_Chassiss_Chassis) GetUpToLastClean() uint32 {
	if m != nil {
		return m.UpToLastClean
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetAlarmExistDays() uint32 {
	if m != nil {
		return m.AlarmExistDays
	}
	return 0
}

func (m *Devm_Chassiss_Chassis) GetMonitorBoardChanges() *Devm_Chassiss_Chassis_MonitorBoardChanges {
	if m != nil {
		return m.MonitorBoardChanges
	}
	return nil
}

type Devm_Chassiss_Chassis_MonitorBoardChanges struct {
	MonitorBoardChange   []*Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange `protobuf:"bytes,1,rep,name=monitor_board_change,json=monitor-board-change,proto3" json:"monitor_board_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                        `json:"-"`
	XXX_unrecognized     []byte                                                          `json:"-"`
	XXX_sizecache        int32                                                           `json:"-"`
}

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) Reset() {
	*m = Devm_Chassiss_Chassis_MonitorBoardChanges{}
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_Chassiss_Chassis_MonitorBoardChanges) ProtoMessage() {}
func (*Devm_Chassiss_Chassis_MonitorBoardChanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 2, 0, 0}
}

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges.Unmarshal(m, b)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges.Marshal(b, m, deterministic)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges.Merge(m, src)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) XXX_Size() int {
	return xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges.Size(m)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges proto.InternalMessageInfo

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges) GetMonitorBoardChange() []*Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange {
	if m != nil {
		return m.MonitorBoardChange
	}
	return nil
}

type Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange struct {
	BoardIndex           uint32   `protobuf:"varint,1,opt,name=board_index,json=board-index,proto3" json:"board_index,omitempty"`
	StatusLastChange     uint32   `protobuf:"varint,2,opt,name=status_last_change,json=status-last-change,proto3" json:"status_last_change,omitempty"`
	EntityLastChange     uint32   `protobuf:"varint,3,opt,name=entity_last_change,json=entity-last-change,proto3" json:"entity_last_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) Reset() {
	*m = Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange{}
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) ProtoMessage() {}
func (*Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 2, 0, 0, 0}
}

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange.Unmarshal(m, b)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange.Marshal(b, m, deterministic)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange.Merge(m, src)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) XXX_Size() int {
	return xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange.Size(m)
}
func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange proto.InternalMessageInfo

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) GetBoardIndex() uint32 {
	if m != nil {
		return m.BoardIndex
	}
	return 0
}

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) GetStatusLastChange() uint32 {
	if m != nil {
		return m.StatusLastChange
	}
	return 0
}

func (m *Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange) GetEntityLastChange() uint32 {
	if m != nil {
		return m.EntityLastChange
	}
	return 0
}

type Devm_LogicContainers struct {
	LogicContainer       []*Devm_LogicContainers_LogicContainer `protobuf:"bytes,1,rep,name=logic_container,json=logic-container,proto3" json:"logic_container,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Devm_LogicContainers) Reset()         { *m = Devm_LogicContainers{} }
func (m *Devm_LogicContainers) String() string { return proto.CompactTextString(m) }
func (*Devm_LogicContainers) ProtoMessage()    {}
func (*Devm_LogicContainers) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 3}
}

func (m *Devm_LogicContainers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicContainers.Unmarshal(m, b)
}
func (m *Devm_LogicContainers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicContainers.Marshal(b, m, deterministic)
}
func (m *Devm_LogicContainers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicContainers.Merge(m, src)
}
func (m *Devm_LogicContainers) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicContainers.Size(m)
}
func (m *Devm_LogicContainers) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicContainers.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicContainers proto.InternalMessageInfo

func (m *Devm_LogicContainers) GetLogicContainer() []*Devm_LogicContainers_LogicContainer {
	if m != nil {
		return m.LogicContainer
	}
	return nil
}

type Devm_LogicContainers_LogicContainer struct {
	Position             string                                                    `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                uint32                                                    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	ContainerType        Devm_LogicContainers_LogicContainer_ContainerType         `protobuf:"varint,3,opt,name=container_type,json=container-type,proto3,enum=huawei_devm.Devm_LogicContainers_LogicContainer_ContainerType" json:"container_type,omitempty"`
	EquipedEntityType    Devm_LogicContainers_LogicContainer_EquipedEntityType     `protobuf:"varint,4,opt,name=equiped_entity_type,json=equiped-entity-type,proto3,enum=huawei_devm.Devm_LogicContainers_LogicContainer_EquipedEntityType" json:"equiped_entity_type,omitempty"`
	SupportedEntityTypes *Devm_LogicContainers_LogicContainer_SupportedEntityTypes `protobuf:"bytes,5,opt,name=supported_entity_types,json=supported-entity-types,proto3" json:"supported_entity_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *Devm_LogicContainers_LogicContainer) Reset()         { *m = Devm_LogicContainers_LogicContainer{} }
func (m *Devm_LogicContainers_LogicContainer) String() string { return proto.CompactTextString(m) }
func (*Devm_LogicContainers_LogicContainer) ProtoMessage()    {}
func (*Devm_LogicContainers_LogicContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 3, 0}
}

func (m *Devm_LogicContainers_LogicContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer.Unmarshal(m, b)
}
func (m *Devm_LogicContainers_LogicContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer.Marshal(b, m, deterministic)
}
func (m *Devm_LogicContainers_LogicContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicContainers_LogicContainer.Merge(m, src)
}
func (m *Devm_LogicContainers_LogicContainer) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer.Size(m)
}
func (m *Devm_LogicContainers_LogicContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicContainers_LogicContainer.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicContainers_LogicContainer proto.InternalMessageInfo

func (m *Devm_LogicContainers_LogicContainer) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_LogicContainers_LogicContainer) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_LogicContainers_LogicContainer) GetContainerType() Devm_LogicContainers_LogicContainer_ContainerType {
	if m != nil {
		return m.ContainerType
	}
	return Devm_LogicContainers_LogicContainer_ContainerType_UNKNOWN
}

func (m *Devm_LogicContainers_LogicContainer) GetEquipedEntityType() Devm_LogicContainers_LogicContainer_EquipedEntityType {
	if m != nil {
		return m.EquipedEntityType
	}
	return Devm_LogicContainers_LogicContainer_EquipedEntityType_UNKNOWN
}

func (m *Devm_LogicContainers_LogicContainer) GetSupportedEntityTypes() *Devm_LogicContainers_LogicContainer_SupportedEntityTypes {
	if m != nil {
		return m.SupportedEntityTypes
	}
	return nil
}

type Devm_LogicContainers_LogicContainer_SupportedEntityTypes struct {
	SupportedEntityType  []*Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType `protobuf:"bytes,1,rep,name=supported_entity_type,json=supported-entity-type,proto3" json:"supported_entity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                          `json:"-"`
	XXX_sizecache        int32                                                                           `json:"-"`
}

func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) Reset() {
	*m = Devm_LogicContainers_LogicContainer_SupportedEntityTypes{}
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_LogicContainers_LogicContainer_SupportedEntityTypes) ProtoMessage() {}
func (*Devm_LogicContainers_LogicContainer_SupportedEntityTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 3, 0, 0}
}

func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes.Unmarshal(m, b)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes.Marshal(b, m, deterministic)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes.Merge(m, src)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes.Size(m)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes proto.InternalMessageInfo

func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes) GetSupportedEntityType() []*Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType {
	if m != nil {
		return m.SupportedEntityType
	}
	return nil
}

type Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType struct {
	EntityType           Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType `protobuf:"varint,1,opt,name=entity_type,json=entity-type,proto3,enum=huawei_devm.Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType" json:"entity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) Reset() {
	*m = Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType{}
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) ProtoMessage() {}
func (*Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 3, 0, 0, 0}
}

func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType.Unmarshal(m, b)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType.Marshal(b, m, deterministic)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType.Merge(m, src)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType.Size(m)
}
func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType proto.InternalMessageInfo

func (m *Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType) GetEntityType() Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType {
	if m != nil {
		return m.EntityType
	}
	return Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_UNKNOWN
}

type Devm_Containers struct {
	Container            []*Devm_Containers_Container `protobuf:"bytes,1,rep,name=container,proto3" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Devm_Containers) Reset()         { *m = Devm_Containers{} }
func (m *Devm_Containers) String() string { return proto.CompactTextString(m) }
func (*Devm_Containers) ProtoMessage()    {}
func (*Devm_Containers) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 4}
}

func (m *Devm_Containers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Containers.Unmarshal(m, b)
}
func (m *Devm_Containers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Containers.Marshal(b, m, deterministic)
}
func (m *Devm_Containers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Containers.Merge(m, src)
}
func (m *Devm_Containers) XXX_Size() int {
	return xxx_messageInfo_Devm_Containers.Size(m)
}
func (m *Devm_Containers) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Containers.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Containers proto.InternalMessageInfo

func (m *Devm_Containers) GetContainer() []*Devm_Containers_Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type Devm_Containers_Container struct {
	Position             string                                          `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                uint32                                          `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string                                          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	EquipedEntityType    string                                          `protobuf:"bytes,4,opt,name=equiped_entity_type,json=equiped-entity-type,proto3" json:"equiped_entity_type,omitempty"`
	SupportedEntityTypes *Devm_Containers_Container_SupportedEntityTypes `protobuf:"bytes,5,opt,name=supported_entity_types,json=supported-entity-types,proto3" json:"supported_entity_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *Devm_Containers_Container) Reset()         { *m = Devm_Containers_Container{} }
func (m *Devm_Containers_Container) String() string { return proto.CompactTextString(m) }
func (*Devm_Containers_Container) ProtoMessage()    {}
func (*Devm_Containers_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 4, 0}
}

func (m *Devm_Containers_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Containers_Container.Unmarshal(m, b)
}
func (m *Devm_Containers_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Containers_Container.Marshal(b, m, deterministic)
}
func (m *Devm_Containers_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Containers_Container.Merge(m, src)
}
func (m *Devm_Containers_Container) XXX_Size() int {
	return xxx_messageInfo_Devm_Containers_Container.Size(m)
}
func (m *Devm_Containers_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Containers_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Containers_Container proto.InternalMessageInfo

func (m *Devm_Containers_Container) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_Containers_Container) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_Containers_Container) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Devm_Containers_Container) GetEquipedEntityType() string {
	if m != nil {
		return m.EquipedEntityType
	}
	return ""
}

func (m *Devm_Containers_Container) GetSupportedEntityTypes() *Devm_Containers_Container_SupportedEntityTypes {
	if m != nil {
		return m.SupportedEntityTypes
	}
	return nil
}

type Devm_Containers_Container_SupportedEntityTypes struct {
	SupportedEntityType  []*Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType `protobuf:"bytes,1,rep,name=supported_entity_type,json=supported-entity-type,proto3" json:"supported_entity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                `json:"-"`
	XXX_sizecache        int32                                                                 `json:"-"`
}

func (m *Devm_Containers_Container_SupportedEntityTypes) Reset() {
	*m = Devm_Containers_Container_SupportedEntityTypes{}
}
func (m *Devm_Containers_Container_SupportedEntityTypes) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_Containers_Container_SupportedEntityTypes) ProtoMessage() {}
func (*Devm_Containers_Container_SupportedEntityTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 4, 0, 0}
}

func (m *Devm_Containers_Container_SupportedEntityTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes.Unmarshal(m, b)
}
func (m *Devm_Containers_Container_SupportedEntityTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes.Marshal(b, m, deterministic)
}
func (m *Devm_Containers_Container_SupportedEntityTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes.Merge(m, src)
}
func (m *Devm_Containers_Container_SupportedEntityTypes) XXX_Size() int {
	return xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes.Size(m)
}
func (m *Devm_Containers_Container_SupportedEntityTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes proto.InternalMessageInfo

func (m *Devm_Containers_Container_SupportedEntityTypes) GetSupportedEntityType() []*Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType {
	if m != nil {
		return m.SupportedEntityType
	}
	return nil
}

type Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType struct {
	EntityType           string   `protobuf:"bytes,1,opt,name=entity_type,json=entity-type,proto3" json:"entity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) Reset() {
	*m = Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType{}
}
func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) ProtoMessage() {}
func (*Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 4, 0, 0, 0}
}

func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType.Unmarshal(m, b)
}
func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType.Marshal(b, m, deterministic)
}
func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType.Merge(m, src)
}
func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) XXX_Size() int {
	return xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType.Size(m)
}
func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType proto.InternalMessageInfo

func (m *Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

type Devm_MpuBoards struct {
	MpuBoard             []*Devm_MpuBoards_MpuBoard `protobuf:"bytes,1,rep,name=mpu_board,json=mpu-board,proto3" json:"mpu_board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Devm_MpuBoards) Reset()         { *m = Devm_MpuBoards{} }
func (m *Devm_MpuBoards) String() string { return proto.CompactTextString(m) }
func (*Devm_MpuBoards) ProtoMessage()    {}
func (*Devm_MpuBoards) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 5}
}

func (m *Devm_MpuBoards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_MpuBoards.Unmarshal(m, b)
}
func (m *Devm_MpuBoards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_MpuBoards.Marshal(b, m, deterministic)
}
func (m *Devm_MpuBoards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_MpuBoards.Merge(m, src)
}
func (m *Devm_MpuBoards) XXX_Size() int {
	return xxx_messageInfo_Devm_MpuBoards.Size(m)
}
func (m *Devm_MpuBoards) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_MpuBoards.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_MpuBoards proto.InternalMessageInfo

func (m *Devm_MpuBoards) GetMpuBoard() []*Devm_MpuBoards_MpuBoard {
	if m != nil {
		return m.MpuBoard
	}
	return nil
}

type Devm_MpuBoards_MpuBoard struct {
	Position             string                         `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                uint32                         `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	BoardType            string                         `protobuf:"bytes,3,opt,name=board_type,json=board-type,proto3" json:"board_type,omitempty"`
	UpTime               uint32                         `protobuf:"varint,4,opt,name=up_time,json=up-time,proto3" json:"up_time,omitempty"`
	SdramSize            uint32                         `protobuf:"varint,5,opt,name=sdram_size,json=sdram-size,proto3" json:"sdram_size,omitempty"`
	NvramSize            uint32                         `protobuf:"varint,6,opt,name=nvram_size,json=nvram-size,proto3" json:"nvram_size,omitempty"`
	FlashSize            uint32                         `protobuf:"varint,7,opt,name=flash_size,json=flash-size,proto3" json:"flash_size,omitempty"`
	LsRole               Devm_MpuBoards_MpuBoard_LsRole `protobuf:"varint,8,opt,name=ls_role,json=ls-role,proto3,enum=huawei_devm.Devm_MpuBoards_MpuBoard_LsRole" json:"ls_role,omitempty"`
	LastResetTime        string                         `protobuf:"bytes,9,opt,name=last_reset_time,json=last-reset-time,proto3" json:"last_reset_time,omitempty"`
	LastResetReason      string                         `protobuf:"bytes,10,opt,name=last_reset_reason,json=last-reset-reason,proto3" json:"last_reset_reason,omitempty"`
	RegisterTime         string                         `protobuf:"bytes,11,opt,name=register_time,json=register-time,proto3" json:"register_time,omitempty"`
	IsRegister           bool                           `protobuf:"varint,12,opt,name=is_register,json=is-register,proto3" json:"is_register,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Devm_MpuBoards_MpuBoard) Reset()         { *m = Devm_MpuBoards_MpuBoard{} }
func (m *Devm_MpuBoards_MpuBoard) String() string { return proto.CompactTextString(m) }
func (*Devm_MpuBoards_MpuBoard) ProtoMessage()    {}
func (*Devm_MpuBoards_MpuBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 5, 0}
}

func (m *Devm_MpuBoards_MpuBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_MpuBoards_MpuBoard.Unmarshal(m, b)
}
func (m *Devm_MpuBoards_MpuBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_MpuBoards_MpuBoard.Marshal(b, m, deterministic)
}
func (m *Devm_MpuBoards_MpuBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_MpuBoards_MpuBoard.Merge(m, src)
}
func (m *Devm_MpuBoards_MpuBoard) XXX_Size() int {
	return xxx_messageInfo_Devm_MpuBoards_MpuBoard.Size(m)
}
func (m *Devm_MpuBoards_MpuBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_MpuBoards_MpuBoard.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_MpuBoards_MpuBoard proto.InternalMessageInfo

func (m *Devm_MpuBoards_MpuBoard) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_MpuBoards_MpuBoard) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_MpuBoards_MpuBoard) GetBoardType() string {
	if m != nil {
		return m.BoardType
	}
	return ""
}

func (m *Devm_MpuBoards_MpuBoard) GetUpTime() uint32 {
	if m != nil {
		return m.UpTime
	}
	return 0
}

func (m *Devm_MpuBoards_MpuBoard) GetSdramSize() uint32 {
	if m != nil {
		return m.SdramSize
	}
	return 0
}

func (m *Devm_MpuBoards_MpuBoard) GetNvramSize() uint32 {
	if m != nil {
		return m.NvramSize
	}
	return 0
}

func (m *Devm_MpuBoards_MpuBoard) GetFlashSize() uint32 {
	if m != nil {
		return m.FlashSize
	}
	return 0
}

func (m *Devm_MpuBoards_MpuBoard) GetLsRole() Devm_MpuBoards_MpuBoard_LsRole {
	if m != nil {
		return m.LsRole
	}
	return Devm_MpuBoards_MpuBoard_LsRole_UNKNOWN
}

func (m *Devm_MpuBoards_MpuBoard) GetLastResetTime() string {
	if m != nil {
		return m.LastResetTime
	}
	return ""
}

func (m *Devm_MpuBoards_MpuBoard) GetLastResetReason() string {
	if m != nil {
		return m.LastResetReason
	}
	return ""
}

func (m *Devm_MpuBoards_MpuBoard) GetRegisterTime() string {
	if m != nil {
		return m.RegisterTime
	}
	return ""
}

func (m *Devm_MpuBoards_MpuBoard) GetIsRegister() bool {
	if m != nil {
		return m.IsRegister
	}
	return false
}

type Devm_LpuBoards struct {
	LpuBoard             []*Devm_LpuBoards_LpuBoard `protobuf:"bytes,1,rep,name=lpu_board,json=lpu-board,proto3" json:"lpu_board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Devm_LpuBoards) Reset()         { *m = Devm_LpuBoards{} }
func (m *Devm_LpuBoards) String() string { return proto.CompactTextString(m) }
func (*Devm_LpuBoards) ProtoMessage()    {}
func (*Devm_LpuBoards) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 6}
}

func (m *Devm_LpuBoards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LpuBoards.Unmarshal(m, b)
}
func (m *Devm_LpuBoards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LpuBoards.Marshal(b, m, deterministic)
}
func (m *Devm_LpuBoards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LpuBoards.Merge(m, src)
}
func (m *Devm_LpuBoards) XXX_Size() int {
	return xxx_messageInfo_Devm_LpuBoards.Size(m)
}
func (m *Devm_LpuBoards) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LpuBoards.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LpuBoards proto.InternalMessageInfo

func (m *Devm_LpuBoards) GetLpuBoard() []*Devm_LpuBoards_LpuBoard {
	if m != nil {
		return m.LpuBoard
	}
	return nil
}

type Devm_LpuBoards_LpuBoard struct {
	Position             string                                  `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                uint32                                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	BoardType            string                                  `protobuf:"bytes,3,opt,name=board_type,json=board-type,proto3" json:"board_type,omitempty"`
	SdramSize            uint32                                  `protobuf:"varint,4,opt,name=sdram_size,json=sdram-size,proto3" json:"sdram_size,omitempty"`
	FlashSize            uint32                                  `protobuf:"varint,5,opt,name=flash_size,json=flash-size,proto3" json:"flash_size,omitempty"`
	UpTime               uint32                                  `protobuf:"varint,6,opt,name=up_time,json=up-time,proto3" json:"up_time,omitempty"`
	NpRdramSize          uint32                                  `protobuf:"varint,7,opt,name=np_rdram_size,json=np-rdram-size,proto3" json:"np_rdram_size,omitempty"`
	NpSramSize           uint32                                  `protobuf:"varint,8,opt,name=np_sram_size,json=np-sram-size,proto3" json:"np_sram_size,omitempty"`
	ServiceType          Devm_LpuBoards_LpuBoard_ServiceType     `protobuf:"varint,9,opt,name=service_type,json=service-type,proto3,enum=huawei_devm.Devm_LpuBoards_LpuBoard_ServiceType" json:"service_type,omitempty"`
	NextServiceType      Devm_LpuBoards_LpuBoard_NextServiceType `protobuf:"varint,10,opt,name=next_service_type,json=next-service-type,proto3,enum=huawei_devm.Devm_LpuBoards_LpuBoard_NextServiceType" json:"next_service_type,omitempty"`
	PicNum               uint32                                  `protobuf:"varint,11,opt,name=pic_num,json=pic-num,proto3" json:"pic_num,omitempty"`
	SubSlotNum           uint32                                  `protobuf:"varint,12,opt,name=sub_slot_num,json=sub-slot-num,proto3" json:"sub_slot_num,omitempty"`
	Clock_8KPort         string                                  `protobuf:"bytes,13,opt,name=clock_8k_port,json=clock-8k-port,proto3" json:"clock_8k_port,omitempty"`
	CurrentL3Clk         uint32                                  `protobuf:"varint,14,opt,name=current_l3_clk,json=current-l3-clk,proto3" json:"current_l3_clk,omitempty"`
	RegisterTime         string                                  `protobuf:"bytes,15,opt,name=register_time,json=register-time,proto3" json:"register_time,omitempty"`
	IsRegister           bool                                    `protobuf:"varint,16,opt,name=is_register,json=is-register,proto3" json:"is_register,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Devm_LpuBoards_LpuBoard) Reset()         { *m = Devm_LpuBoards_LpuBoard{} }
func (m *Devm_LpuBoards_LpuBoard) String() string { return proto.CompactTextString(m) }
func (*Devm_LpuBoards_LpuBoard) ProtoMessage()    {}
func (*Devm_LpuBoards_LpuBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 6, 0}
}

func (m *Devm_LpuBoards_LpuBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LpuBoards_LpuBoard.Unmarshal(m, b)
}
func (m *Devm_LpuBoards_LpuBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LpuBoards_LpuBoard.Marshal(b, m, deterministic)
}
func (m *Devm_LpuBoards_LpuBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LpuBoards_LpuBoard.Merge(m, src)
}
func (m *Devm_LpuBoards_LpuBoard) XXX_Size() int {
	return xxx_messageInfo_Devm_LpuBoards_LpuBoard.Size(m)
}
func (m *Devm_LpuBoards_LpuBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LpuBoards_LpuBoard.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LpuBoards_LpuBoard proto.InternalMessageInfo

func (m *Devm_LpuBoards_LpuBoard) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_LpuBoards_LpuBoard) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetBoardType() string {
	if m != nil {
		return m.BoardType
	}
	return ""
}

func (m *Devm_LpuBoards_LpuBoard) GetSdramSize() uint32 {
	if m != nil {
		return m.SdramSize
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetFlashSize() uint32 {
	if m != nil {
		return m.FlashSize
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetUpTime() uint32 {
	if m != nil {
		return m.UpTime
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetNpRdramSize() uint32 {
	if m != nil {
		return m.NpRdramSize
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetNpSramSize() uint32 {
	if m != nil {
		return m.NpSramSize
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetServiceType() Devm_LpuBoards_LpuBoard_ServiceType {
	if m != nil {
		return m.ServiceType
	}
	return Devm_LpuBoards_LpuBoard_ServiceType_LPU
}

func (m *Devm_LpuBoards_LpuBoard) GetNextServiceType() Devm_LpuBoards_LpuBoard_NextServiceType {
	if m != nil {
		return m.NextServiceType
	}
	return Devm_LpuBoards_LpuBoard_NextServiceType_LPU
}

func (m *Devm_LpuBoards_LpuBoard) GetPicNum() uint32 {
	if m != nil {
		return m.PicNum
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetSubSlotNum() uint32 {
	if m != nil {
		return m.SubSlotNum
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetClock_8KPort() string {
	if m != nil {
		return m.Clock_8KPort
	}
	return ""
}

func (m *Devm_LpuBoards_LpuBoard) GetCurrentL3Clk() uint32 {
	if m != nil {
		return m.CurrentL3Clk
	}
	return 0
}

func (m *Devm_LpuBoards_LpuBoard) GetRegisterTime() string {
	if m != nil {
		return m.RegisterTime
	}
	return ""
}

func (m *Devm_LpuBoards_LpuBoard) GetIsRegister() bool {
	if m != nil {
		return m.IsRegister
	}
	return false
}

type Devm_SfuBoards struct {
	SfuBoard             []*Devm_SfuBoards_SfuBoard `protobuf:"bytes,1,rep,name=sfu_board,json=sfu-board,proto3" json:"sfu_board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Devm_SfuBoards) Reset()         { *m = Devm_SfuBoards{} }
func (m *Devm_SfuBoards) String() string { return proto.CompactTextString(m) }
func (*Devm_SfuBoards) ProtoMessage()    {}
func (*Devm_SfuBoards) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 7}
}

func (m *Devm_SfuBoards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_SfuBoards.Unmarshal(m, b)
}
func (m *Devm_SfuBoards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_SfuBoards.Marshal(b, m, deterministic)
}
func (m *Devm_SfuBoards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_SfuBoards.Merge(m, src)
}
func (m *Devm_SfuBoards) XXX_Size() int {
	return xxx_messageInfo_Devm_SfuBoards.Size(m)
}
func (m *Devm_SfuBoards) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_SfuBoards.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_SfuBoards proto.InternalMessageInfo

func (m *Devm_SfuBoards) GetSfuBoard() []*Devm_SfuBoards_SfuBoard {
	if m != nil {
		return m.SfuBoard
	}
	return nil
}

type Devm_SfuBoards_SfuBoard struct {
	Position             string   `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	BoardType            string   `protobuf:"bytes,3,opt,name=board_type,json=board-type,proto3" json:"board_type,omitempty"`
	SdramSize            uint32   `protobuf:"varint,4,opt,name=sdram_size,json=sdram-size,proto3" json:"sdram_size,omitempty"`
	FlashSize            uint32   `protobuf:"varint,5,opt,name=flash_size,json=flash-size,proto3" json:"flash_size,omitempty"`
	UpTime               uint32   `protobuf:"varint,6,opt,name=up_time,json=up-time,proto3" json:"up_time,omitempty"`
	RegisterTime         string   `protobuf:"bytes,7,opt,name=register_time,json=register-time,proto3" json:"register_time,omitempty"`
	IsRegister           bool     `protobuf:"varint,8,opt,name=is_register,json=is-register,proto3" json:"is_register,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devm_SfuBoards_SfuBoard) Reset()         { *m = Devm_SfuBoards_SfuBoard{} }
func (m *Devm_SfuBoards_SfuBoard) String() string { return proto.CompactTextString(m) }
func (*Devm_SfuBoards_SfuBoard) ProtoMessage()    {}
func (*Devm_SfuBoards_SfuBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 7, 0}
}

func (m *Devm_SfuBoards_SfuBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_SfuBoards_SfuBoard.Unmarshal(m, b)
}
func (m *Devm_SfuBoards_SfuBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_SfuBoards_SfuBoard.Marshal(b, m, deterministic)
}
func (m *Devm_SfuBoards_SfuBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_SfuBoards_SfuBoard.Merge(m, src)
}
func (m *Devm_SfuBoards_SfuBoard) XXX_Size() int {
	return xxx_messageInfo_Devm_SfuBoards_SfuBoard.Size(m)
}
func (m *Devm_SfuBoards_SfuBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_SfuBoards_SfuBoard.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_SfuBoards_SfuBoard proto.InternalMessageInfo

func (m *Devm_SfuBoards_SfuBoard) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_SfuBoards_SfuBoard) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_SfuBoards_SfuBoard) GetBoardType() string {
	if m != nil {
		return m.BoardType
	}
	return ""
}

func (m *Devm_SfuBoards_SfuBoard) GetSdramSize() uint32 {
	if m != nil {
		return m.SdramSize
	}
	return 0
}

func (m *Devm_SfuBoards_SfuBoard) GetFlashSize() uint32 {
	if m != nil {
		return m.FlashSize
	}
	return 0
}

func (m *Devm_SfuBoards_SfuBoard) GetUpTime() uint32 {
	if m != nil {
		return m.UpTime
	}
	return 0
}

func (m *Devm_SfuBoards_SfuBoard) GetRegisterTime() string {
	if m != nil {
		return m.RegisterTime
	}
	return ""
}

func (m *Devm_SfuBoards_SfuBoard) GetIsRegister() bool {
	if m != nil {
		return m.IsRegister
	}
	return false
}

type Devm_Cards struct {
	Card                 []*Devm_Cards_Card `protobuf:"bytes,1,rep,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Devm_Cards) Reset()         { *m = Devm_Cards{} }
func (m *Devm_Cards) String() string { return proto.CompactTextString(m) }
func (*Devm_Cards) ProtoMessage()    {}
func (*Devm_Cards) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 8}
}

func (m *Devm_Cards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Cards.Unmarshal(m, b)
}
func (m *Devm_Cards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Cards.Marshal(b, m, deterministic)
}
func (m *Devm_Cards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Cards.Merge(m, src)
}
func (m *Devm_Cards) XXX_Size() int {
	return xxx_messageInfo_Devm_Cards.Size(m)
}
func (m *Devm_Cards) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Cards.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Cards proto.InternalMessageInfo

func (m *Devm_Cards) GetCard() []*Devm_Cards_Card {
	if m != nil {
		return m.Card
	}
	return nil
}

type Devm_Cards_Card struct {
	Position             string                         `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                uint32                         `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Type                 string                         `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	HardType             string                         `protobuf:"bytes,4,opt,name=hard_type,json=hard-type,proto3" json:"hard_type,omitempty"`
	PortNum              uint32                         `protobuf:"varint,5,opt,name=port_num,json=port-num,proto3" json:"port_num,omitempty"`
	InitStatus           Devm_Cards_Card_InitStatus     `protobuf:"varint,6,opt,name=init_status,json=init-status,proto3,enum=huawei_devm.Devm_Cards_Card_InitStatus" json:"init_status,omitempty"`
	RegisterStatus       Devm_Cards_Card_RegisterStatus `protobuf:"varint,7,opt,name=register_status,json=register-status,proto3,enum=huawei_devm.Devm_Cards_Card_RegisterStatus" json:"register_status,omitempty"`
	Pic                  *Devm_Cards_Card_Pic           `protobuf:"bytes,8,opt,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Devm_Cards_Card) Reset()         { *m = Devm_Cards_Card{} }
func (m *Devm_Cards_Card) String() string { return proto.CompactTextString(m) }
func (*Devm_Cards_Card) ProtoMessage()    {}
func (*Devm_Cards_Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 8, 0}
}

func (m *Devm_Cards_Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Cards_Card.Unmarshal(m, b)
}
func (m *Devm_Cards_Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Cards_Card.Marshal(b, m, deterministic)
}
func (m *Devm_Cards_Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Cards_Card.Merge(m, src)
}
func (m *Devm_Cards_Card) XXX_Size() int {
	return xxx_messageInfo_Devm_Cards_Card.Size(m)
}
func (m *Devm_Cards_Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Cards_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Cards_Card proto.InternalMessageInfo

func (m *Devm_Cards_Card) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_Cards_Card) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_Cards_Card) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Devm_Cards_Card) GetHardType() string {
	if m != nil {
		return m.HardType
	}
	return ""
}

func (m *Devm_Cards_Card) GetPortNum() uint32 {
	if m != nil {
		return m.PortNum
	}
	return 0
}

func (m *Devm_Cards_Card) GetInitStatus() Devm_Cards_Card_InitStatus {
	if m != nil {
		return m.InitStatus
	}
	return Devm_Cards_Card_InitStatus_FAIL
}

func (m *Devm_Cards_Card) GetRegisterStatus() Devm_Cards_Card_RegisterStatus {
	if m != nil {
		return m.RegisterStatus
	}
	return Devm_Cards_Card_RegisterStatus_UNREGISTERED
}

func (m *Devm_Cards_Card) GetPic() *Devm_Cards_Card_Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type Devm_Cards_Card_Pic struct {
	LogicStatus          Devm_Cards_Card_Pic_LogicStatus `protobuf:"varint,1,opt,name=logic_status,json=logic-status,proto3,enum=huawei_devm.Devm_Cards_Card_Pic_LogicStatus" json:"logic_status,omitempty"`
	UpTime               string                          `protobuf:"bytes,2,opt,name=up_time,json=up-time,proto3" json:"up_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Devm_Cards_Card_Pic) Reset()         { *m = Devm_Cards_Card_Pic{} }
func (m *Devm_Cards_Card_Pic) String() string { return proto.CompactTextString(m) }
func (*Devm_Cards_Card_Pic) ProtoMessage()    {}
func (*Devm_Cards_Card_Pic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 8, 0, 0}
}

func (m *Devm_Cards_Card_Pic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Cards_Card_Pic.Unmarshal(m, b)
}
func (m *Devm_Cards_Card_Pic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Cards_Card_Pic.Marshal(b, m, deterministic)
}
func (m *Devm_Cards_Card_Pic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Cards_Card_Pic.Merge(m, src)
}
func (m *Devm_Cards_Card_Pic) XXX_Size() int {
	return xxx_messageInfo_Devm_Cards_Card_Pic.Size(m)
}
func (m *Devm_Cards_Card_Pic) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Cards_Card_Pic.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Cards_Card_Pic proto.InternalMessageInfo

func (m *Devm_Cards_Card_Pic) GetLogicStatus() Devm_Cards_Card_Pic_LogicStatus {
	if m != nil {
		return m.LogicStatus
	}
	return Devm_Cards_Card_Pic_LogicStatus_FAIL
}

func (m *Devm_Cards_Card_Pic) GetUpTime() string {
	if m != nil {
		return m.UpTime
	}
	return ""
}

type Devm_CfCards struct {
	CfCard               []*Devm_CfCards_CfCard `protobuf:"bytes,1,rep,name=cf_card,json=cf-card,proto3" json:"cf_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Devm_CfCards) Reset()         { *m = Devm_CfCards{} }
func (m *Devm_CfCards) String() string { return proto.CompactTextString(m) }
func (*Devm_CfCards) ProtoMessage()    {}
func (*Devm_CfCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 9}
}

func (m *Devm_CfCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_CfCards.Unmarshal(m, b)
}
func (m *Devm_CfCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_CfCards.Marshal(b, m, deterministic)
}
func (m *Devm_CfCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_CfCards.Merge(m, src)
}
func (m *Devm_CfCards) XXX_Size() int {
	return xxx_messageInfo_Devm_CfCards.Size(m)
}
func (m *Devm_CfCards) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_CfCards.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_CfCards proto.InternalMessageInfo

func (m *Devm_CfCards) GetCfCard() []*Devm_CfCards_CfCard {
	if m != nil {
		return m.CfCard
	}
	return nil
}

type Devm_CfCards_CfCard struct {
	Position             string   `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	SerialNumber         string   `protobuf:"bytes,2,opt,name=serial_number,json=serial-number,proto3" json:"serial_number,omitempty"`
	Index                uint32   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	CardType             string   `protobuf:"bytes,4,opt,name=card_type,json=card-type,proto3" json:"card_type,omitempty"`
	MemorySize           uint32   `protobuf:"varint,5,opt,name=memory_size,json=memory-size,proto3" json:"memory_size,omitempty"`
	MemoryUsed           uint32   `protobuf:"varint,6,opt,name=memory_used,json=memory-used,proto3" json:"memory_used,omitempty"`
	MemoryFree           uint32   `protobuf:"varint,7,opt,name=memory_free,json=memory-free,proto3" json:"memory_free,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devm_CfCards_CfCard) Reset()         { *m = Devm_CfCards_CfCard{} }
func (m *Devm_CfCards_CfCard) String() string { return proto.CompactTextString(m) }
func (*Devm_CfCards_CfCard) ProtoMessage()    {}
func (*Devm_CfCards_CfCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 9, 0}
}

func (m *Devm_CfCards_CfCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_CfCards_CfCard.Unmarshal(m, b)
}
func (m *Devm_CfCards_CfCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_CfCards_CfCard.Marshal(b, m, deterministic)
}
func (m *Devm_CfCards_CfCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_CfCards_CfCard.Merge(m, src)
}
func (m *Devm_CfCards_CfCard) XXX_Size() int {
	return xxx_messageInfo_Devm_CfCards_CfCard.Size(m)
}
func (m *Devm_CfCards_CfCard) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_CfCards_CfCard.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_CfCards_CfCard proto.InternalMessageInfo

func (m *Devm_CfCards_CfCard) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_CfCards_CfCard) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Devm_CfCards_CfCard) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_CfCards_CfCard) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Devm_CfCards_CfCard) GetMemorySize() uint32 {
	if m != nil {
		return m.MemorySize
	}
	return 0
}

func (m *Devm_CfCards_CfCard) GetMemoryUsed() uint32 {
	if m != nil {
		return m.MemoryUsed
	}
	return 0
}

func (m *Devm_CfCards_CfCard) GetMemoryFree() uint32 {
	if m != nil {
		return m.MemoryFree
	}
	return 0
}

type Devm_Ports struct {
	Port                 []*Devm_Ports_Port `protobuf:"bytes,1,rep,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Devm_Ports) Reset()         { *m = Devm_Ports{} }
func (m *Devm_Ports) String() string { return proto.CompactTextString(m) }
func (*Devm_Ports) ProtoMessage()    {}
func (*Devm_Ports) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10}
}

func (m *Devm_Ports) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports.Unmarshal(m, b)
}
func (m *Devm_Ports) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports.Marshal(b, m, deterministic)
}
func (m *Devm_Ports) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports.Merge(m, src)
}
func (m *Devm_Ports) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports.Size(m)
}
func (m *Devm_Ports) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports proto.InternalMessageInfo

func (m *Devm_Ports) GetPort() []*Devm_Ports_Port {
	if m != nil {
		return m.Port
	}
	return nil
}

type Devm_Ports_Port struct {
	Position                string                             `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Index                   uint32                             `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	AdminState              Devm_Ports_Port_AdminState         `protobuf:"varint,3,opt,name=admin_state,json=admin-state,proto3,enum=huawei_devm.Devm_Ports_Port_AdminState" json:"admin_state,omitempty"`
	Type                    Devm_Ports_Port_Type               `protobuf:"varint,4,opt,name=type,proto3,enum=huawei_devm.Devm_Ports_Port_Type" json:"type,omitempty"`
	HardType                Devm_Ports_Port_HardType           `protobuf:"varint,5,opt,name=hard_type,json=hard-type,proto3,enum=huawei_devm.Devm_Ports_Port_HardType" json:"hard_type,omitempty"`
	LoopbackMode            Devm_Ports_Port_LoopbackMode       `protobuf:"varint,6,opt,name=loopback_mode,json=loopback-mode,proto3,enum=huawei_devm.Devm_Ports_Port_LoopbackMode" json:"loopback_mode,omitempty"`
	EnableTransmissionDelay uint32                             `protobuf:"varint,7,opt,name=enable_transmission_delay,json=enable-transmission-delay,proto3" json:"enable_transmission_delay,omitempty"`
	LastUpTime              string                             `protobuf:"bytes,8,opt,name=last_up_time,json=last-up-time,proto3" json:"last_up_time,omitempty"`
	LastDownTime            string                             `protobuf:"bytes,9,opt,name=last_down_time,json=last-down-time,proto3" json:"last_down_time,omitempty"`
	MediumType              Devm_Ports_Port_MediumType         `protobuf:"varint,10,opt,name=medium_type,json=medium-type,proto3,enum=huawei_devm.Devm_Ports_Port_MediumType" json:"medium_type,omitempty"`
	OpticalEquipped         bool                               `protobuf:"varint,11,opt,name=optical_equipped,json=optical-equipped,proto3" json:"optical_equipped,omitempty"`
	PhysicalBandwidth       uint64                             `protobuf:"varint,12,opt,name=physical_bandwidth,json=physical-bandwidth,proto3" json:"physical_bandwidth,omitempty"`
	Ethernet                *Devm_Ports_Port_Ethernet          `protobuf:"bytes,13,opt,name=ethernet,proto3" json:"ethernet,omitempty"`
	Laser                   *Devm_Ports_Port_Laser             `protobuf:"bytes,14,opt,name=laser,proto3" json:"laser,omitempty"`
	OpticalModule           *Devm_Ports_Port_OpticalModule     `protobuf:"bytes,15,opt,name=optical_module,json=optical-module,proto3" json:"optical_module,omitempty"`
	TransmissionAlarm       *Devm_Ports_Port_TransmissionAlarm `protobuf:"bytes,16,opt,name=transmission_alarm,json=transmission-alarm,proto3" json:"transmission_alarm,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                           `json:"-"`
	XXX_unrecognized        []byte                             `json:"-"`
	XXX_sizecache           int32                              `json:"-"`
}

func (m *Devm_Ports_Port) Reset()         { *m = Devm_Ports_Port{} }
func (m *Devm_Ports_Port) String() string { return proto.CompactTextString(m) }
func (*Devm_Ports_Port) ProtoMessage()    {}
func (*Devm_Ports_Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0}
}

func (m *Devm_Ports_Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port.Unmarshal(m, b)
}
func (m *Devm_Ports_Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port.Merge(m, src)
}
func (m *Devm_Ports_Port) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port.Size(m)
}
func (m *Devm_Ports_Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port proto.InternalMessageInfo

func (m *Devm_Ports_Port) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_Ports_Port) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_Ports_Port) GetAdminState() Devm_Ports_Port_AdminState {
	if m != nil {
		return m.AdminState
	}
	return Devm_Ports_Port_AdminState_INACTIVE
}

func (m *Devm_Ports_Port) GetType() Devm_Ports_Port_Type {
	if m != nil {
		return m.Type
	}
	return Devm_Ports_Port_Type_UNKNOWN
}

func (m *Devm_Ports_Port) GetHardType() Devm_Ports_Port_HardType {
	if m != nil {
		return m.HardType
	}
	return Devm_Ports_Port_HardType_UNKNOWN
}

func (m *Devm_Ports_Port) GetLoopbackMode() Devm_Ports_Port_LoopbackMode {
	if m != nil {
		return m.LoopbackMode
	}
	return Devm_Ports_Port_LoopbackMode_NOLOOPBACK
}

func (m *Devm_Ports_Port) GetEnableTransmissionDelay() uint32 {
	if m != nil {
		return m.EnableTransmissionDelay
	}
	return 0
}

func (m *Devm_Ports_Port) GetLastUpTime() string {
	if m != nil {
		return m.LastUpTime
	}
	return ""
}

func (m *Devm_Ports_Port) GetLastDownTime() string {
	if m != nil {
		return m.LastDownTime
	}
	return ""
}

func (m *Devm_Ports_Port) GetMediumType() Devm_Ports_Port_MediumType {
	if m != nil {
		return m.MediumType
	}
	return Devm_Ports_Port_MediumType_NOTSUPPORTED
}

func (m *Devm_Ports_Port) GetOpticalEquipped() bool {
	if m != nil {
		return m.OpticalEquipped
	}
	return false
}

func (m *Devm_Ports_Port) GetPhysicalBandwidth() uint64 {
	if m != nil {
		return m.PhysicalBandwidth
	}
	return 0
}

func (m *Devm_Ports_Port) GetEthernet() *Devm_Ports_Port_Ethernet {
	if m != nil {
		return m.Ethernet
	}
	return nil
}

func (m *Devm_Ports_Port) GetLaser() *Devm_Ports_Port_Laser {
	if m != nil {
		return m.Laser
	}
	return nil
}

func (m *Devm_Ports_Port) GetOpticalModule() *Devm_Ports_Port_OpticalModule {
	if m != nil {
		return m.OpticalModule
	}
	return nil
}

func (m *Devm_Ports_Port) GetTransmissionAlarm() *Devm_Ports_Port_TransmissionAlarm {
	if m != nil {
		return m.TransmissionAlarm
	}
	return nil
}

type Devm_Ports_Port_Ethernet struct {
	Speed                Devm_Ports_Port_Ethernet_Speed           `protobuf:"varint,1,opt,name=speed,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_Speed" json:"speed,omitempty"`
	Duplex               Devm_Ports_Port_Ethernet_Duplex          `protobuf:"varint,2,opt,name=duplex,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_Duplex" json:"duplex,omitempty"`
	Negotiation          Devm_Ports_Port_Ethernet_Negotiation     `protobuf:"varint,3,opt,name=negotiation,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_Negotiation" json:"negotiation,omitempty"`
	NegotiationMode      Devm_Ports_Port_Ethernet_NegotiationMode `protobuf:"varint,4,opt,name=negotiation_mode,json=negotiation-mode,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_NegotiationMode" json:"negotiation_mode,omitempty"`
	DownHoldTime         uint32                                   `protobuf:"varint,5,opt,name=down_hold_time,json=down-hold-time,proto3" json:"down_hold_time,omitempty"`
	UpHoldTime           uint32                                   `protobuf:"varint,6,opt,name=up_hold_time,json=up-hold-time,proto3" json:"up_hold_time,omitempty"`
	TransMode            Devm_Ports_Port_Ethernet_TransMode       `protobuf:"varint,7,opt,name=trans_mode,json=trans-mode,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_TransMode" json:"trans_mode,omitempty"`
	SpeedSwitchMode      Devm_Ports_Port_Ethernet_SpeedSwitchMode `protobuf:"varint,8,opt,name=speed_switch_mode,json=speed-switch-mode,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_SpeedSwitchMode" json:"speed_switch_mode,omitempty"`
	BitError             Devm_Ports_Port_Ethernet_BitError        `protobuf:"varint,9,opt,name=bit_error,json=bit-error,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_BitError" json:"bit_error,omitempty"`
	TriggerTime          uint32                                   `protobuf:"varint,10,opt,name=trigger_time,json=trigger-time,proto3" json:"trigger_time,omitempty"`
	TriggerTimeType      Devm_Ports_Port_Ethernet_TriggerTimeType `protobuf:"varint,11,opt,name=trigger_time_type,json=trigger-time-type,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_TriggerTimeType" json:"trigger_time_type,omitempty"`
	TxPowerCfgType       Devm_Ports_Port_Ethernet_TxPowerCfgType  `protobuf:"varint,12,opt,name=tx_power_cfg_type,json=tx-power-cfg-type,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_TxPowerCfgType" json:"tx_power_cfg_type,omitempty"`
	TxPowerTargetValue   int32                                    `protobuf:"varint,13,opt,name=tx_power_target_value,json=tx-power-target-value,proto3" json:"tx_power_target_value,omitempty"`
	FecMode              Devm_Ports_Port_Ethernet_FecMode         `protobuf:"varint,14,opt,name=fec_mode,json=fec-mode,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_FecMode" json:"fec_mode,omitempty"`
	EthFecMode           Devm_Ports_Port_Ethernet_EthFecMode      `protobuf:"varint,15,opt,name=eth_fec_mode,json=eth-fec-mode,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_EthFecMode" json:"eth_fec_mode,omitempty"`
	FecPreAlmThrc        uint32                                   `protobuf:"varint,16,opt,name=fec_pre_alm_thrc,json=fec-pre-alm-thrc,proto3" json:"fec_pre_alm_thrc,omitempty"`
	FecPreAlmThrp        uint32                                   `protobuf:"varint,17,opt,name=fec_pre_alm_thrp,json=fec-pre-alm-thrp,proto3" json:"fec_pre_alm_thrp,omitempty"`
	FecPreRsumThrc       uint32                                   `protobuf:"varint,18,opt,name=fec_pre_rsum_thrc,json=fec-pre-rsum-thrc,proto3" json:"fec_pre_rsum_thrc,omitempty"`
	FecPreRsumThrp       uint32                                   `protobuf:"varint,19,opt,name=fec_pre_rsum_thrp,json=fec-pre-rsum-thrp,proto3" json:"fec_pre_rsum_thrp,omitempty"`
	JumboFrame           uint32                                   `protobuf:"varint,20,opt,name=jumbo_frame,json=jumbo-frame,proto3" json:"jumbo_frame,omitempty"`
	Flowctl              Devm_Ports_Port_Ethernet_Flowctl         `protobuf:"varint,21,opt,name=flowctl,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_Flowctl" json:"flowctl,omitempty"`
	GfMediaType          Devm_Ports_Port_Ethernet_GfMediaType     `protobuf:"varint,22,opt,name=gf_media_type,json=gf-media-type,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_GfMediaType" json:"gf_media_type,omitempty"`
	HoldUp               Devm_Ports_Port_Ethernet_HoldUp          `protobuf:"varint,23,opt,name=hold_up,json=hold-up,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_HoldUp" json:"hold_up,omitempty"`
	Txipg                Devm_Ports_Port_Ethernet_Txipg           `protobuf:"varint,24,opt,name=txipg,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_Txipg" json:"txipg,omitempty"`
	SwitchSpeed          Devm_Ports_Port_Ethernet_SwitchSpeed     `protobuf:"varint,25,opt,name=switch_speed,json=switch-speed,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_SwitchSpeed" json:"switch_speed,omitempty"`
	PromiscuousMode      Devm_Ports_Port_Ethernet_PromiscuousMode `protobuf:"varint,26,opt,name=promiscuous_mode,json=promiscuous-mode,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_PromiscuousMode" json:"promiscuous_mode,omitempty"`
	FlexphySpeed         Devm_Ports_Port_Ethernet_FlexphySpeed    `protobuf:"varint,27,opt,name=flexphy_speed,json=flexphy-speed,proto3,enum=huawei_devm.Devm_Ports_Port_Ethernet_FlexphySpeed" json:"flexphy_speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Devm_Ports_Port_Ethernet) Reset()         { *m = Devm_Ports_Port_Ethernet{} }
func (m *Devm_Ports_Port_Ethernet) String() string { return proto.CompactTextString(m) }
func (*Devm_Ports_Port_Ethernet) ProtoMessage()    {}
func (*Devm_Ports_Port_Ethernet) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 0}
}

func (m *Devm_Ports_Port_Ethernet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_Ethernet.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_Ethernet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_Ethernet.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_Ethernet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_Ethernet.Merge(m, src)
}
func (m *Devm_Ports_Port_Ethernet) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_Ethernet.Size(m)
}
func (m *Devm_Ports_Port_Ethernet) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_Ethernet.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_Ethernet proto.InternalMessageInfo

func (m *Devm_Ports_Port_Ethernet) GetSpeed() Devm_Ports_Port_Ethernet_Speed {
	if m != nil {
		return m.Speed
	}
	return Devm_Ports_Port_Ethernet_Speed_X_10M
}

func (m *Devm_Ports_Port_Ethernet) GetDuplex() Devm_Ports_Port_Ethernet_Duplex {
	if m != nil {
		return m.Duplex
	}
	return Devm_Ports_Port_Ethernet_Duplex_AUTO
}

func (m *Devm_Ports_Port_Ethernet) GetNegotiation() Devm_Ports_Port_Ethernet_Negotiation {
	if m != nil {
		return m.Negotiation
	}
	return Devm_Ports_Port_Ethernet_Negotiation_DISABLED
}

func (m *Devm_Ports_Port_Ethernet) GetNegotiationMode() Devm_Ports_Port_Ethernet_NegotiationMode {
	if m != nil {
		return m.NegotiationMode
	}
	return Devm_Ports_Port_Ethernet_NegotiationMode_SLAVE
}

func (m *Devm_Ports_Port_Ethernet) GetDownHoldTime() uint32 {
	if m != nil {
		return m.DownHoldTime
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetUpHoldTime() uint32 {
	if m != nil {
		return m.UpHoldTime
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetTransMode() Devm_Ports_Port_Ethernet_TransMode {
	if m != nil {
		return m.TransMode
	}
	return Devm_Ports_Port_Ethernet_TransMode_LANX_MODE
}

func (m *Devm_Ports_Port_Ethernet) GetSpeedSwitchMode() Devm_Ports_Port_Ethernet_SpeedSwitchMode {
	if m != nil {
		return m.SpeedSwitchMode
	}
	return Devm_Ports_Port_Ethernet_SpeedSwitchMode_MANUAL
}

func (m *Devm_Ports_Port_Ethernet) GetBitError() Devm_Ports_Port_Ethernet_BitError {
	if m != nil {
		return m.BitError
	}
	return Devm_Ports_Port_Ethernet_BitError_CRC
}

func (m *Devm_Ports_Port_Ethernet) GetTriggerTime() uint32 {
	if m != nil {
		return m.TriggerTime
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetTriggerTimeType() Devm_Ports_Port_Ethernet_TriggerTimeType {
	if m != nil {
		return m.TriggerTimeType
	}
	return Devm_Ports_Port_Ethernet_TriggerTimeType_SECOND
}

func (m *Devm_Ports_Port_Ethernet) GetTxPowerCfgType() Devm_Ports_Port_Ethernet_TxPowerCfgType {
	if m != nil {
		return m.TxPowerCfgType
	}
	return Devm_Ports_Port_Ethernet_TxPowerCfgType_TXX_POWERX_TARGET
}

func (m *Devm_Ports_Port_Ethernet) GetTxPowerTargetValue() int32 {
	if m != nil {
		return m.TxPowerTargetValue
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetFecMode() Devm_Ports_Port_Ethernet_FecMode {
	if m != nil {
		return m.FecMode
	}
	return Devm_Ports_Port_Ethernet_FecMode_NONE
}

func (m *Devm_Ports_Port_Ethernet) GetEthFecMode() Devm_Ports_Port_Ethernet_EthFecMode {
	if m != nil {
		return m.EthFecMode
	}
	return Devm_Ports_Port_Ethernet_EthFecMode_DISABLE
}

func (m *Devm_Ports_Port_Ethernet) GetFecPreAlmThrc() uint32 {
	if m != nil {
		return m.FecPreAlmThrc
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetFecPreAlmThrp() uint32 {
	if m != nil {
		return m.FecPreAlmThrp
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetFecPreRsumThrc() uint32 {
	if m != nil {
		return m.FecPreRsumThrc
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetFecPreRsumThrp() uint32 {
	if m != nil {
		return m.FecPreRsumThrp
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetJumboFrame() uint32 {
	if m != nil {
		return m.JumboFrame
	}
	return 0
}

func (m *Devm_Ports_Port_Ethernet) GetFlowctl() Devm_Ports_Port_Ethernet_Flowctl {
	if m != nil {
		return m.Flowctl
	}
	return Devm_Ports_Port_Ethernet_Flowctl_ALLX_DISABLED
}

func (m *Devm_Ports_Port_Ethernet) GetGfMediaType() Devm_Ports_Port_Ethernet_GfMediaType {
	if m != nil {
		return m.GfMediaType
	}
	return Devm_Ports_Port_Ethernet_GfMediaType_AUTO
}

func (m *Devm_Ports_Port_Ethernet) GetHoldUp() Devm_Ports_Port_Ethernet_HoldUp {
	if m != nil {
		return m.HoldUp
	}
	return Devm_Ports_Port_Ethernet_HoldUp_DISABLED
}

func (m *Devm_Ports_Port_Ethernet) GetTxipg() Devm_Ports_Port_Ethernet_Txipg {
	if m != nil {
		return m.Txipg
	}
	return Devm_Ports_Port_Ethernet_Txipg_SHRINK
}

func (m *Devm_Ports_Port_Ethernet) GetSwitchSpeed() Devm_Ports_Port_Ethernet_SwitchSpeed {
	if m != nil {
		return m.SwitchSpeed
	}
	return Devm_Ports_Port_Ethernet_SwitchSpeed_UNDO
}

func (m *Devm_Ports_Port_Ethernet) GetPromiscuousMode() Devm_Ports_Port_Ethernet_PromiscuousMode {
	if m != nil {
		return m.PromiscuousMode
	}
	return Devm_Ports_Port_Ethernet_PromiscuousMode_OFF
}

func (m *Devm_Ports_Port_Ethernet) GetFlexphySpeed() Devm_Ports_Port_Ethernet_FlexphySpeed {
	if m != nil {
		return m.FlexphySpeed
	}
	return Devm_Ports_Port_Ethernet_INVALID_ENUM_VALUE_FlexphySpeed
}

type Devm_Ports_Port_Laser struct {
	AutoShutEnable       Devm_Ports_Port_Laser_AutoShutEnable `protobuf:"varint,1,opt,name=auto_shut_enable,json=auto-shut-enable,proto3,enum=huawei_devm.Devm_Ports_Port_Laser_AutoShutEnable" json:"auto_shut_enable,omitempty"`
	OpenTime             uint32                               `protobuf:"varint,2,opt,name=open_time,json=open-time,proto3" json:"open_time,omitempty"`
	CloseTime            uint32                               `protobuf:"varint,3,opt,name=close_time,json=close-time,proto3" json:"close_time,omitempty"`
	Status               Devm_Ports_Port_Laser_Status         `protobuf:"varint,4,opt,name=status,proto3,enum=huawei_devm.Devm_Ports_Port_Laser_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Devm_Ports_Port_Laser) Reset()         { *m = Devm_Ports_Port_Laser{} }
func (m *Devm_Ports_Port_Laser) String() string { return proto.CompactTextString(m) }
func (*Devm_Ports_Port_Laser) ProtoMessage()    {}
func (*Devm_Ports_Port_Laser) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 1}
}

func (m *Devm_Ports_Port_Laser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_Laser.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_Laser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_Laser.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_Laser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_Laser.Merge(m, src)
}
func (m *Devm_Ports_Port_Laser) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_Laser.Size(m)
}
func (m *Devm_Ports_Port_Laser) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_Laser.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_Laser proto.InternalMessageInfo

func (m *Devm_Ports_Port_Laser) GetAutoShutEnable() Devm_Ports_Port_Laser_AutoShutEnable {
	if m != nil {
		return m.AutoShutEnable
	}
	return Devm_Ports_Port_Laser_AutoShutEnable_DISABLE
}

func (m *Devm_Ports_Port_Laser) GetOpenTime() uint32 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *Devm_Ports_Port_Laser) GetCloseTime() uint32 {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

func (m *Devm_Ports_Port_Laser) GetStatus() Devm_Ports_Port_Laser_Status {
	if m != nil {
		return m.Status
	}
	return Devm_Ports_Port_Laser_Status_ON
}

type Devm_Ports_Port_OpticalModule struct {
	VendorName                 string                                      `protobuf:"bytes,1,opt,name=vendor_name,json=vendor-name,proto3" json:"vendor_name,omitempty"`
	VendorPn                   string                                      `protobuf:"bytes,2,opt,name=vendor_pn,json=vendor-pn,proto3" json:"vendor_pn,omitempty"`
	TransBw                    string                                      `protobuf:"bytes,3,opt,name=trans_bw,json=trans-bw,proto3" json:"trans_bw,omitempty"`
	TransMode                  Devm_Ports_Port_OpticalModule_TransMode     `protobuf:"varint,4,opt,name=trans_mode,json=trans-mode,proto3,enum=huawei_devm.Devm_Ports_Port_OpticalModule_TransMode" json:"trans_mode,omitempty"`
	HotPlug                    bool                                        `protobuf:"varint,5,opt,name=hot_plug,json=hot-plug,proto3" json:"hot_plug,omitempty"`
	Type                       Devm_Ports_Port_OpticalModule_Type          `protobuf:"varint,6,opt,name=type,proto3,enum=huawei_devm.Devm_Ports_Port_OpticalModule_Type" json:"type,omitempty"`
	FiberType                  Devm_Ports_Port_OpticalModule_FiberType     `protobuf:"varint,7,opt,name=fiber_type,json=fiber-type,proto3,enum=huawei_devm.Devm_Ports_Port_OpticalModule_FiberType" json:"fiber_type,omitempty"`
	Wavelength                 string                                      `protobuf:"bytes,8,opt,name=wavelength,proto3" json:"wavelength,omitempty"`
	TransmissionDistance       string                                      `protobuf:"bytes,9,opt,name=transmission_distance,json=transmission-distance,proto3" json:"transmission_distance,omitempty"`
	TxPower                    string                                      `protobuf:"bytes,10,opt,name=tx_power,json=tx-power,proto3" json:"tx_power,omitempty"`
	RxPower                    string                                      `protobuf:"bytes,11,opt,name=rx_power,json=rx-power,proto3" json:"rx_power,omitempty"`
	RxHighWarnPower            string                                      `protobuf:"bytes,12,opt,name=rx_high_warn_power,json=rx-high-warn-power,proto3" json:"rx_high_warn_power,omitempty"`
	RxLowWarnPower             string                                      `protobuf:"bytes,13,opt,name=rx_low_warn_power,json=rx-low-warn-power,proto3" json:"rx_low_warn_power,omitempty"`
	TxHighWarnPower            string                                      `protobuf:"bytes,14,opt,name=tx_high_warn_power,json=tx-high-warn-power,proto3" json:"tx_high_warn_power,omitempty"`
	TxLowWarnPower             string                                      `protobuf:"bytes,15,opt,name=tx_low_warn_power,json=tx-low-warn-power,proto3" json:"tx_low_warn_power,omitempty"`
	RxHighAlarmPower           string                                      `protobuf:"bytes,16,opt,name=rx_high_alarm_power,json=rx-high-alarm-power,proto3" json:"rx_high_alarm_power,omitempty"`
	RxLowAlarmPower            string                                      `protobuf:"bytes,17,opt,name=rx_low_alarm_power,json=rx-low-alarm-power,proto3" json:"rx_low_alarm_power,omitempty"`
	TxHighAlarmPower           string                                      `protobuf:"bytes,18,opt,name=tx_high_alarm_power,json=tx-high-alarm-power,proto3" json:"tx_high_alarm_power,omitempty"`
	TxLowAlarmPower            string                                      `protobuf:"bytes,19,opt,name=tx_low_alarm_power,json=tx-low-alarm-power,proto3" json:"tx_low_alarm_power,omitempty"`
	Tunable                    Devm_Ports_Port_OpticalModule_Tunable       `protobuf:"varint,20,opt,name=tunable,proto3,enum=huawei_devm.Devm_Ports_Port_OpticalModule_Tunable" json:"tunable,omitempty"`
	ChromaticDispersion        string                                      `protobuf:"bytes,21,opt,name=chromatic_dispersion,json=chromatic-dispersion,proto3" json:"chromatic_dispersion,omitempty"`
	PolarizationModeDispersion string                                      `protobuf:"bytes,22,opt,name=polarization_mode_dispersion,json=polarization-mode-dispersion,proto3" json:"polarization_mode_dispersion,omitempty"`
	DirectionType              Devm_Ports_Port_OpticalModule_DirectionType `protobuf:"varint,23,opt,name=direction_type,json=direction-type,proto3,enum=huawei_devm.Devm_Ports_Port_OpticalModule_DirectionType" json:"direction_type,omitempty"`
	TotalRxPower               string                                      `protobuf:"bytes,24,opt,name=total_rx_power,json=total-rx-power,proto3" json:"total_rx_power,omitempty"`
	TotalRxHighWarn            string                                      `protobuf:"bytes,25,opt,name=total_rx_high_warn,json=total-rx-high-warn,proto3" json:"total_rx_high_warn,omitempty"`
	TotalRxLowWarn             string                                      `protobuf:"bytes,26,opt,name=total_rx_low_warn,json=total-rx-low-warn,proto3" json:"total_rx_low_warn,omitempty"`
	TotalRxHighAlarm           string                                      `protobuf:"bytes,27,opt,name=total_rx_high_alarm,json=total-rx-high-alarm,proto3" json:"total_rx_high_alarm,omitempty"`
	TotalRxLowAlarm            string                                      `protobuf:"bytes,28,opt,name=total_rx_low_alarm,json=total-rx-low-alarm,proto3" json:"total_rx_low_alarm,omitempty"`
	Bias                       int32                                       `protobuf:"varint,29,opt,name=bias,proto3" json:"bias,omitempty"`
	Voltage                    int32                                       `protobuf:"varint,30,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Temperature                int32                                       `protobuf:"varint,31,opt,name=temperature,proto3" json:"temperature,omitempty"`
	VendorOui                  string                                      `protobuf:"bytes,32,opt,name=vendor_oui,json=vendor-oui,proto3" json:"vendor_oui,omitempty"`
	VendorRev                  string                                      `protobuf:"bytes,33,opt,name=vendor_rev,json=vendor-rev,proto3" json:"vendor_rev,omitempty"`
	GponSn                     string                                      `protobuf:"bytes,34,opt,name=gpon_sn,json=gpon-sn,proto3" json:"gpon_sn,omitempty"`
	Channels                   *Devm_Ports_Port_OpticalModule_Channels     `protobuf:"bytes,35,opt,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                    `json:"-"`
	XXX_unrecognized           []byte                                      `json:"-"`
	XXX_sizecache              int32                                       `json:"-"`
}

func (m *Devm_Ports_Port_OpticalModule) Reset()         { *m = Devm_Ports_Port_OpticalModule{} }
func (m *Devm_Ports_Port_OpticalModule) String() string { return proto.CompactTextString(m) }
func (*Devm_Ports_Port_OpticalModule) ProtoMessage()    {}
func (*Devm_Ports_Port_OpticalModule) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2}
}

func (m *Devm_Ports_Port_OpticalModule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_OpticalModule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_OpticalModule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_OpticalModule.Merge(m, src)
}
func (m *Devm_Ports_Port_OpticalModule) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule.Size(m)
}
func (m *Devm_Ports_Port_OpticalModule) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_OpticalModule.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_OpticalModule proto.InternalMessageInfo

func (m *Devm_Ports_Port_OpticalModule) GetVendorName() string {
	if m != nil {
		return m.VendorName
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetVendorPn() string {
	if m != nil {
		return m.VendorPn
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTransBw() string {
	if m != nil {
		return m.TransBw
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTransMode() Devm_Ports_Port_OpticalModule_TransMode {
	if m != nil {
		return m.TransMode
	}
	return Devm_Ports_Port_OpticalModule_TransMode_UNKNOWN
}

func (m *Devm_Ports_Port_OpticalModule) GetHotPlug() bool {
	if m != nil {
		return m.HotPlug
	}
	return false
}

func (m *Devm_Ports_Port_OpticalModule) GetType() Devm_Ports_Port_OpticalModule_Type {
	if m != nil {
		return m.Type
	}
	return Devm_Ports_Port_OpticalModule_Type_UNKNOWN
}

func (m *Devm_Ports_Port_OpticalModule) GetFiberType() Devm_Ports_Port_OpticalModule_FiberType {
	if m != nil {
		return m.FiberType
	}
	return Devm_Ports_Port_OpticalModule_FiberType_UNKNOWN
}

func (m *Devm_Ports_Port_OpticalModule) GetWavelength() string {
	if m != nil {
		return m.Wavelength
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTransmissionDistance() string {
	if m != nil {
		return m.TransmissionDistance
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTxPower() string {
	if m != nil {
		return m.TxPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetRxPower() string {
	if m != nil {
		return m.RxPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetRxHighWarnPower() string {
	if m != nil {
		return m.RxHighWarnPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetRxLowWarnPower() string {
	if m != nil {
		return m.RxLowWarnPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTxHighWarnPower() string {
	if m != nil {
		return m.TxHighWarnPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTxLowWarnPower() string {
	if m != nil {
		return m.TxLowWarnPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetRxHighAlarmPower() string {
	if m != nil {
		return m.RxHighAlarmPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetRxLowAlarmPower() string {
	if m != nil {
		return m.RxLowAlarmPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTxHighAlarmPower() string {
	if m != nil {
		return m.TxHighAlarmPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTxLowAlarmPower() string {
	if m != nil {
		return m.TxLowAlarmPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTunable() Devm_Ports_Port_OpticalModule_Tunable {
	if m != nil {
		return m.Tunable
	}
	return Devm_Ports_Port_OpticalModule_INVALID_ENUM_VALUE_Tunable
}

func (m *Devm_Ports_Port_OpticalModule) GetChromaticDispersion() string {
	if m != nil {
		return m.ChromaticDispersion
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetPolarizationModeDispersion() string {
	if m != nil {
		return m.PolarizationModeDispersion
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetDirectionType() Devm_Ports_Port_OpticalModule_DirectionType {
	if m != nil {
		return m.DirectionType
	}
	return Devm_Ports_Port_OpticalModule_INVALID_ENUM_VALUE_DirectionType
}

func (m *Devm_Ports_Port_OpticalModule) GetTotalRxPower() string {
	if m != nil {
		return m.TotalRxPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTotalRxHighWarn() string {
	if m != nil {
		return m.TotalRxHighWarn
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTotalRxLowWarn() string {
	if m != nil {
		return m.TotalRxLowWarn
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTotalRxHighAlarm() string {
	if m != nil {
		return m.TotalRxHighAlarm
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetTotalRxLowAlarm() string {
	if m != nil {
		return m.TotalRxLowAlarm
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetBias() int32 {
	if m != nil {
		return m.Bias
	}
	return 0
}

func (m *Devm_Ports_Port_OpticalModule) GetVoltage() int32 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *Devm_Ports_Port_OpticalModule) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *Devm_Ports_Port_OpticalModule) GetVendorOui() string {
	if m != nil {
		return m.VendorOui
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetVendorRev() string {
	if m != nil {
		return m.VendorRev
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetGponSn() string {
	if m != nil {
		return m.GponSn
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule) GetChannels() *Devm_Ports_Port_OpticalModule_Channels {
	if m != nil {
		return m.Channels
	}
	return nil
}

type Devm_Ports_Port_OpticalModule_Channels struct {
	Channel              []*Devm_Ports_Port_OpticalModule_Channels_Channel `protobuf:"bytes,1,rep,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *Devm_Ports_Port_OpticalModule_Channels) Reset() {
	*m = Devm_Ports_Port_OpticalModule_Channels{}
}
func (m *Devm_Ports_Port_OpticalModule_Channels) String() string { return proto.CompactTextString(m) }
func (*Devm_Ports_Port_OpticalModule_Channels) ProtoMessage()    {}
func (*Devm_Ports_Port_OpticalModule_Channels) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2, 0}
}

func (m *Devm_Ports_Port_OpticalModule_Channels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_OpticalModule_Channels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_OpticalModule_Channels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels.Merge(m, src)
}
func (m *Devm_Ports_Port_OpticalModule_Channels) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels.Size(m)
}
func (m *Devm_Ports_Port_OpticalModule_Channels) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels proto.InternalMessageInfo

func (m *Devm_Ports_Port_OpticalModule_Channels) GetChannel() []*Devm_Ports_Port_OpticalModule_Channels_Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type Devm_Ports_Port_OpticalModule_Channels_Channel struct {
	Number               uint32   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	TxPower              string   `protobuf:"bytes,2,opt,name=tx_power,json=tx-power,proto3" json:"tx_power,omitempty"`
	RxPower              string   `protobuf:"bytes,3,opt,name=rx_power,json=rx-power,proto3" json:"rx_power,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) Reset() {
	*m = Devm_Ports_Port_OpticalModule_Channels_Channel{}
}
func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_Ports_Port_OpticalModule_Channels_Channel) ProtoMessage() {}
func (*Devm_Ports_Port_OpticalModule_Channels_Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 2, 0, 0}
}

func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels_Channel.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels_Channel.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels_Channel.Merge(m, src)
}
func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels_Channel.Size(m)
}
func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_OpticalModule_Channels_Channel proto.InternalMessageInfo

func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) GetTxPower() string {
	if m != nil {
		return m.TxPower
	}
	return ""
}

func (m *Devm_Ports_Port_OpticalModule_Channels_Channel) GetRxPower() string {
	if m != nil {
		return m.RxPower
	}
	return ""
}

type Devm_Ports_Port_TransmissionAlarm struct {
	TransAlarmIfdowns    *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns `protobuf:"bytes,1,opt,name=trans_alarm_ifdowns,json=trans-alarm-ifdowns,proto3" json:"trans_alarm_ifdowns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *Devm_Ports_Port_TransmissionAlarm) Reset()         { *m = Devm_Ports_Port_TransmissionAlarm{} }
func (m *Devm_Ports_Port_TransmissionAlarm) String() string { return proto.CompactTextString(m) }
func (*Devm_Ports_Port_TransmissionAlarm) ProtoMessage()    {}
func (*Devm_Ports_Port_TransmissionAlarm) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 3}
}

func (m *Devm_Ports_Port_TransmissionAlarm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_TransmissionAlarm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_TransmissionAlarm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm.Merge(m, src)
}
func (m *Devm_Ports_Port_TransmissionAlarm) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm.Size(m)
}
func (m *Devm_Ports_Port_TransmissionAlarm) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm proto.InternalMessageInfo

func (m *Devm_Ports_Port_TransmissionAlarm) GetTransAlarmIfdowns() *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns {
	if m != nil {
		return m.TransAlarmIfdowns
	}
	return nil
}

type Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns struct {
	TransAlarmIfdown     []*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown `protobuf:"bytes,1,rep,name=trans_alarm_ifdown,json=trans-alarm-ifdown,proto3" json:"trans_alarm_ifdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                  `json:"-"`
	XXX_sizecache        int32                                                                   `json:"-"`
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) Reset() {
	*m = Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns{}
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) ProtoMessage() {}
func (*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 3, 0}
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns.Merge(m, src)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns.Size(m)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns proto.InternalMessageInfo

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns) GetTransAlarmIfdown() []*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown {
	if m != nil {
		return m.TransAlarmIfdown
	}
	return nil
}

type Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown struct {
	AlarmType            Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType `protobuf:"varint,1,opt,name=alarm_type,json=alarm-type,proto3,enum=huawei_devm.Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType" json:"alarm_type,omitempty"`
	Ifdown               bool                                                                           `protobuf:"varint,2,opt,name=ifdown,proto3" json:"ifdown,omitempty"`
	AlarmStatus          bool                                                                           `protobuf:"varint,3,opt,name=alarm_status,json=alarm-status,proto3" json:"alarm_status,omitempty"`
	IsInFiltering        bool                                                                           `protobuf:"varint,4,opt,name=is_in_filtering,json=is-in-filtering,proto3" json:"is_in_filtering,omitempty"`
	IsInSuppressing      bool                                                                           `protobuf:"varint,5,opt,name=is_in_suppressing,json=is-in-suppressing,proto3" json:"is_in_suppressing,omitempty"`
	IsInAging            bool                                                                           `protobuf:"varint,6,opt,name=is_in_aging,json=is-in-aging,proto3" json:"is_in_aging,omitempty"`
	FlappingCount        uint32                                                                         `protobuf:"varint,7,opt,name=flapping_count,json=flapping-count,proto3" json:"flapping_count,omitempty"`
	SuppressingCount     uint32                                                                         `protobuf:"varint,8,opt,name=suppressing_count,json=suppressing-count,proto3" json:"suppressing_count,omitempty"`
	FigureOfMerit        string                                                                         `protobuf:"bytes,9,opt,name=figure_of_merit,json=figure-of-merit,proto3" json:"figure_of_merit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                         `json:"-"`
	XXX_sizecache        int32                                                                          `json:"-"`
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) Reset() {
	*m = Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown{}
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) ProtoMessage() {}
func (*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 10, 0, 3, 0, 0}
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown.Unmarshal(m, b)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown.Marshal(b, m, deterministic)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown.Merge(m, src)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) XXX_Size() int {
	return xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown.Size(m)
}
func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown proto.InternalMessageInfo

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetAlarmType() Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType {
	if m != nil {
		return m.AlarmType
	}
	return Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_AUAIS
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetIfdown() bool {
	if m != nil {
		return m.Ifdown
	}
	return false
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetAlarmStatus() bool {
	if m != nil {
		return m.AlarmStatus
	}
	return false
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetIsInFiltering() bool {
	if m != nil {
		return m.IsInFiltering
	}
	return false
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetIsInSuppressing() bool {
	if m != nil {
		return m.IsInSuppressing
	}
	return false
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetIsInAging() bool {
	if m != nil {
		return m.IsInAging
	}
	return false
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetFlappingCount() uint32 {
	if m != nil {
		return m.FlappingCount
	}
	return 0
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetSuppressingCount() uint32 {
	if m != nil {
		return m.SuppressingCount
	}
	return 0
}

func (m *Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown) GetFigureOfMerit() string {
	if m != nil {
		return m.FigureOfMerit
	}
	return ""
}

type Devm_LogicPorts struct {
	LogicPort            []*Devm_LogicPorts_LogicPort `protobuf:"bytes,1,rep,name=logic_port,json=logic-port,proto3" json:"logic_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Devm_LogicPorts) Reset()         { *m = Devm_LogicPorts{} }
func (m *Devm_LogicPorts) String() string { return proto.CompactTextString(m) }
func (*Devm_LogicPorts) ProtoMessage()    {}
func (*Devm_LogicPorts) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 11}
}

func (m *Devm_LogicPorts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicPorts.Unmarshal(m, b)
}
func (m *Devm_LogicPorts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicPorts.Marshal(b, m, deterministic)
}
func (m *Devm_LogicPorts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicPorts.Merge(m, src)
}
func (m *Devm_LogicPorts) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicPorts.Size(m)
}
func (m *Devm_LogicPorts) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicPorts.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicPorts proto.InternalMessageInfo

func (m *Devm_LogicPorts) GetLogicPort() []*Devm_LogicPorts_LogicPort {
	if m != nil {
		return m.LogicPort
	}
	return nil
}

type Devm_LogicPorts_LogicPort struct {
	Position                string                               `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	SerialNumber            string                               `protobuf:"bytes,2,opt,name=serial_number,json=serial-number,proto3" json:"serial_number,omitempty"`
	PortType                Devm_LogicPorts_LogicPort_PortType   `protobuf:"varint,3,opt,name=port_type,json=port-type,proto3,enum=huawei_devm.Devm_LogicPorts_LogicPort_PortType" json:"port_type,omitempty"`
	Index                   uint32                               `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	AdminState              Devm_LogicPorts_LogicPort_AdminState `protobuf:"varint,5,opt,name=admin_state,json=admin-state,proto3,enum=huawei_devm.Devm_LogicPorts_LogicPort_AdminState" json:"admin_state,omitempty"`
	HardType                Devm_LogicPorts_LogicPort_HardType   `protobuf:"varint,6,opt,name=hard_type,json=hard-type,proto3,enum=huawei_devm.Devm_LogicPorts_LogicPort_HardType" json:"hard_type,omitempty"`
	EnableTransmissionDelay uint32                               `protobuf:"varint,7,opt,name=enable_transmission_delay,json=enable-transmission-delay,proto3" json:"enable_transmission_delay,omitempty"`
	Level                   Devm_LogicPorts_LogicPort_Level      `protobuf:"varint,8,opt,name=level,proto3,enum=huawei_devm.Devm_LogicPorts_LogicPort_Level" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                             `json:"-"`
	XXX_unrecognized        []byte                               `json:"-"`
	XXX_sizecache           int32                                `json:"-"`
}

func (m *Devm_LogicPorts_LogicPort) Reset()         { *m = Devm_LogicPorts_LogicPort{} }
func (m *Devm_LogicPorts_LogicPort) String() string { return proto.CompactTextString(m) }
func (*Devm_LogicPorts_LogicPort) ProtoMessage()    {}
func (*Devm_LogicPorts_LogicPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 11, 0}
}

func (m *Devm_LogicPorts_LogicPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_LogicPorts_LogicPort.Unmarshal(m, b)
}
func (m *Devm_LogicPorts_LogicPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_LogicPorts_LogicPort.Marshal(b, m, deterministic)
}
func (m *Devm_LogicPorts_LogicPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_LogicPorts_LogicPort.Merge(m, src)
}
func (m *Devm_LogicPorts_LogicPort) XXX_Size() int {
	return xxx_messageInfo_Devm_LogicPorts_LogicPort.Size(m)
}
func (m *Devm_LogicPorts_LogicPort) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_LogicPorts_LogicPort.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_LogicPorts_LogicPort proto.InternalMessageInfo

func (m *Devm_LogicPorts_LogicPort) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_LogicPorts_LogicPort) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Devm_LogicPorts_LogicPort) GetPortType() Devm_LogicPorts_LogicPort_PortType {
	if m != nil {
		return m.PortType
	}
	return Devm_LogicPorts_LogicPort_PortType_UNKNOWN
}

func (m *Devm_LogicPorts_LogicPort) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Devm_LogicPorts_LogicPort) GetAdminState() Devm_LogicPorts_LogicPort_AdminState {
	if m != nil {
		return m.AdminState
	}
	return Devm_LogicPorts_LogicPort_AdminState_INACTIVE
}

func (m *Devm_LogicPorts_LogicPort) GetHardType() Devm_LogicPorts_LogicPort_HardType {
	if m != nil {
		return m.HardType
	}
	return Devm_LogicPorts_LogicPort_HardType_UNKNOWN
}

func (m *Devm_LogicPorts_LogicPort) GetEnableTransmissionDelay() uint32 {
	if m != nil {
		return m.EnableTransmissionDelay
	}
	return 0
}

func (m *Devm_LogicPorts_LogicPort) GetLevel() Devm_LogicPorts_LogicPort_Level {
	if m != nil {
		return m.Level
	}
	return Devm_LogicPorts_LogicPort_Level_X_0XFF
}

type Devm_EntityClasses struct {
	EntityClass          []*Devm_EntityClasses_EntityClass `protobuf:"bytes,1,rep,name=entity_class,json=entity-class,proto3" json:"entity_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Devm_EntityClasses) Reset()         { *m = Devm_EntityClasses{} }
func (m *Devm_EntityClasses) String() string { return proto.CompactTextString(m) }
func (*Devm_EntityClasses) ProtoMessage()    {}
func (*Devm_EntityClasses) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 12}
}

func (m *Devm_EntityClasses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_EntityClasses.Unmarshal(m, b)
}
func (m *Devm_EntityClasses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_EntityClasses.Marshal(b, m, deterministic)
}
func (m *Devm_EntityClasses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_EntityClasses.Merge(m, src)
}
func (m *Devm_EntityClasses) XXX_Size() int {
	return xxx_messageInfo_Devm_EntityClasses.Size(m)
}
func (m *Devm_EntityClasses) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_EntityClasses.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_EntityClasses proto.InternalMessageInfo

func (m *Devm_EntityClasses) GetEntityClass() []*Devm_EntityClasses_EntityClass {
	if m != nil {
		return m.EntityClass
	}
	return nil
}

type Devm_EntityClasses_EntityClass struct {
	ClassName            Devm_EntityClasses_EntityClass_ClassName `protobuf:"varint,1,opt,name=class_name,json=class-name,proto3,enum=huawei_devm.Devm_EntityClasses_EntityClass_ClassName" json:"class_name,omitempty"`
	IsResetable          bool                                     `protobuf:"varint,2,opt,name=is_resetable,json=is-resetable,proto3" json:"is_resetable,omitempty"`
	IsSwitchoverable     bool                                     `protobuf:"varint,3,opt,name=is_switchoverable,json=is-switchoverable,proto3" json:"is_switchoverable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Devm_EntityClasses_EntityClass) Reset()         { *m = Devm_EntityClasses_EntityClass{} }
func (m *Devm_EntityClasses_EntityClass) String() string { return proto.CompactTextString(m) }
func (*Devm_EntityClasses_EntityClass) ProtoMessage()    {}
func (*Devm_EntityClasses_EntityClass) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 12, 0}
}

func (m *Devm_EntityClasses_EntityClass) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_EntityClasses_EntityClass.Unmarshal(m, b)
}
func (m *Devm_EntityClasses_EntityClass) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_EntityClasses_EntityClass.Marshal(b, m, deterministic)
}
func (m *Devm_EntityClasses_EntityClass) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_EntityClasses_EntityClass.Merge(m, src)
}
func (m *Devm_EntityClasses_EntityClass) XXX_Size() int {
	return xxx_messageInfo_Devm_EntityClasses_EntityClass.Size(m)
}
func (m *Devm_EntityClasses_EntityClass) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_EntityClasses_EntityClass.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_EntityClasses_EntityClass proto.InternalMessageInfo

func (m *Devm_EntityClasses_EntityClass) GetClassName() Devm_EntityClasses_EntityClass_ClassName {
	if m != nil {
		return m.ClassName
	}
	return Devm_EntityClasses_EntityClass_ClassName_OTHER
}

func (m *Devm_EntityClasses_EntityClass) GetIsResetable() bool {
	if m != nil {
		return m.IsResetable
	}
	return false
}

func (m *Devm_EntityClasses_EntityClass) GetIsSwitchoverable() bool {
	if m != nil {
		return m.IsSwitchoverable
	}
	return false
}

type Devm_InconsistentEntitys struct {
	InconsistentEntity   []*Devm_InconsistentEntitys_InconsistentEntity `protobuf:"bytes,1,rep,name=inconsistent_entity,json=inconsistent-entity,proto3" json:"inconsistent_entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *Devm_InconsistentEntitys) Reset()         { *m = Devm_InconsistentEntitys{} }
func (m *Devm_InconsistentEntitys) String() string { return proto.CompactTextString(m) }
func (*Devm_InconsistentEntitys) ProtoMessage()    {}
func (*Devm_InconsistentEntitys) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 13}
}

func (m *Devm_InconsistentEntitys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_InconsistentEntitys.Unmarshal(m, b)
}
func (m *Devm_InconsistentEntitys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_InconsistentEntitys.Marshal(b, m, deterministic)
}
func (m *Devm_InconsistentEntitys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_InconsistentEntitys.Merge(m, src)
}
func (m *Devm_InconsistentEntitys) XXX_Size() int {
	return xxx_messageInfo_Devm_InconsistentEntitys.Size(m)
}
func (m *Devm_InconsistentEntitys) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_InconsistentEntitys.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_InconsistentEntitys proto.InternalMessageInfo

func (m *Devm_InconsistentEntitys) GetInconsistentEntity() []*Devm_InconsistentEntitys_InconsistentEntity {
	if m != nil {
		return m.InconsistentEntity
	}
	return nil
}

type Devm_InconsistentEntitys_InconsistentEntity struct {
	Class                Devm_InconsistentEntitys_InconsistentEntity_Class        `protobuf:"varint,1,opt,name=class,proto3,enum=huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_Class" json:"class,omitempty"`
	Position             string                                                   `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	SerialNumber         string                                                   `protobuf:"bytes,3,opt,name=serial_number,json=serial-number,proto3" json:"serial_number,omitempty"`
	LogicalType          Devm_InconsistentEntitys_InconsistentEntity_LogicalType  `protobuf:"varint,4,opt,name=logical_type,json=logical-type,proto3,enum=huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_LogicalType" json:"logical_type,omitempty"`
	PhysicalType         Devm_InconsistentEntitys_InconsistentEntity_PhysicalType `protobuf:"varint,5,opt,name=physical_type,json=physical-type,proto3,enum=huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_PhysicalType" json:"physical_type,omitempty"`
	OperState            Devm_InconsistentEntitys_InconsistentEntity_OperState    `protobuf:"varint,6,opt,name=oper_state,json=oper-state,proto3,enum=huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_OperState" json:"oper_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *Devm_InconsistentEntitys_InconsistentEntity) Reset() {
	*m = Devm_InconsistentEntitys_InconsistentEntity{}
}
func (m *Devm_InconsistentEntitys_InconsistentEntity) String() string {
	return proto.CompactTextString(m)
}
func (*Devm_InconsistentEntitys_InconsistentEntity) ProtoMessage() {}
func (*Devm_InconsistentEntitys_InconsistentEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 13, 0}
}

func (m *Devm_InconsistentEntitys_InconsistentEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_InconsistentEntitys_InconsistentEntity.Unmarshal(m, b)
}
func (m *Devm_InconsistentEntitys_InconsistentEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_InconsistentEntitys_InconsistentEntity.Marshal(b, m, deterministic)
}
func (m *Devm_InconsistentEntitys_InconsistentEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_InconsistentEntitys_InconsistentEntity.Merge(m, src)
}
func (m *Devm_InconsistentEntitys_InconsistentEntity) XXX_Size() int {
	return xxx_messageInfo_Devm_InconsistentEntitys_InconsistentEntity.Size(m)
}
func (m *Devm_InconsistentEntitys_InconsistentEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_InconsistentEntitys_InconsistentEntity.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_InconsistentEntitys_InconsistentEntity proto.InternalMessageInfo

func (m *Devm_InconsistentEntitys_InconsistentEntity) GetClass() Devm_InconsistentEntitys_InconsistentEntity_Class {
	if m != nil {
		return m.Class
	}
	return Devm_InconsistentEntitys_InconsistentEntity_Class_OTHER
}

func (m *Devm_InconsistentEntitys_InconsistentEntity) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Devm_InconsistentEntitys_InconsistentEntity) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Devm_InconsistentEntitys_InconsistentEntity) GetLogicalType() Devm_InconsistentEntitys_InconsistentEntity_LogicalType {
	if m != nil {
		return m.LogicalType
	}
	return Devm_InconsistentEntitys_InconsistentEntity_LogicalType_UNKNOWN
}

func (m *Devm_InconsistentEntitys_InconsistentEntity) GetPhysicalType() Devm_InconsistentEntitys_InconsistentEntity_PhysicalType {
	if m != nil {
		return m.PhysicalType
	}
	return Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_UNKNOWN
}

func (m *Devm_InconsistentEntitys_InconsistentEntity) GetOperState() Devm_InconsistentEntitys_InconsistentEntity_OperState {
	if m != nil {
		return m.OperState
	}
	return Devm_InconsistentEntitys_InconsistentEntity_OperState_UNKNOWN
}

type Devm_OfflineCfgs struct {
	Offline              []*Devm_OfflineCfgs_Offline `protobuf:"bytes,1,rep,name=offline,proto3" json:"offline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Devm_OfflineCfgs) Reset()         { *m = Devm_OfflineCfgs{} }
func (m *Devm_OfflineCfgs) String() string { return proto.CompactTextString(m) }
func (*Devm_OfflineCfgs) ProtoMessage()    {}
func (*Devm_OfflineCfgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 14}
}

func (m *Devm_OfflineCfgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_OfflineCfgs.Unmarshal(m, b)
}
func (m *Devm_OfflineCfgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_OfflineCfgs.Marshal(b, m, deterministic)
}
func (m *Devm_OfflineCfgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_OfflineCfgs.Merge(m, src)
}
func (m *Devm_OfflineCfgs) XXX_Size() int {
	return xxx_messageInfo_Devm_OfflineCfgs.Size(m)
}
func (m *Devm_OfflineCfgs) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_OfflineCfgs.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_OfflineCfgs proto.InternalMessageInfo

func (m *Devm_OfflineCfgs) GetOffline() []*Devm_OfflineCfgs_Offline {
	if m != nil {
		return m.Offline
	}
	return nil
}

type Devm_OfflineCfgs_Offline struct {
	Class                Devm_OfflineCfgs_Offline_Class `protobuf:"varint,1,opt,name=class,proto3,enum=huawei_devm.Devm_OfflineCfgs_Offline_Class" json:"class,omitempty"`
	Position             string                         `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Devm_OfflineCfgs_Offline) Reset()         { *m = Devm_OfflineCfgs_Offline{} }
func (m *Devm_OfflineCfgs_Offline) String() string { return proto.CompactTextString(m) }
func (*Devm_OfflineCfgs_Offline) ProtoMessage()    {}
func (*Devm_OfflineCfgs_Offline) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 14, 0}
}

func (m *Devm_OfflineCfgs_Offline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_OfflineCfgs_Offline.Unmarshal(m, b)
}
func (m *Devm_OfflineCfgs_Offline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_OfflineCfgs_Offline.Marshal(b, m, deterministic)
}
func (m *Devm_OfflineCfgs_Offline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_OfflineCfgs_Offline.Merge(m, src)
}
func (m *Devm_OfflineCfgs_Offline) XXX_Size() int {
	return xxx_messageInfo_Devm_OfflineCfgs_Offline.Size(m)
}
func (m *Devm_OfflineCfgs_Offline) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_OfflineCfgs_Offline.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_OfflineCfgs_Offline proto.InternalMessageInfo

func (m *Devm_OfflineCfgs_Offline) GetClass() Devm_OfflineCfgs_Offline_Class {
	if m != nil {
		return m.Class
	}
	return Devm_OfflineCfgs_Offline_INVALID_ENUM_VALUE_Class
}

func (m *Devm_OfflineCfgs_Offline) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type Devm_ScheduleReboot struct {
	Datetime             string   `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime,omitempty"`
	DelayTime            string   `protobuf:"bytes,2,opt,name=delay_time,json=delay-time,proto3" json:"delay_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Devm_ScheduleReboot) Reset()         { *m = Devm_ScheduleReboot{} }
func (m *Devm_ScheduleReboot) String() string { return proto.CompactTextString(m) }
func (*Devm_ScheduleReboot) ProtoMessage()    {}
func (*Devm_ScheduleReboot) Descriptor() ([]byte, []int) {
	return fileDescriptor_b227d13a61499c89, []int{0, 15}
}

func (m *Devm_ScheduleReboot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Devm_ScheduleReboot.Unmarshal(m, b)
}
func (m *Devm_ScheduleReboot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Devm_ScheduleReboot.Marshal(b, m, deterministic)
}
func (m *Devm_ScheduleReboot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Devm_ScheduleReboot.Merge(m, src)
}
func (m *Devm_ScheduleReboot) XXX_Size() int {
	return xxx_messageInfo_Devm_ScheduleReboot.Size(m)
}
func (m *Devm_ScheduleReboot) XXX_DiscardUnknown() {
	xxx_messageInfo_Devm_ScheduleReboot.DiscardUnknown(m)
}

var xxx_messageInfo_Devm_ScheduleReboot proto.InternalMessageInfo

func (m *Devm_ScheduleReboot) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *Devm_ScheduleReboot) GetDelayTime() string {
	if m != nil {
		return m.DelayTime
	}
	return ""
}

func init() {
	proto.RegisterEnum("huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_Class", Devm_PhysicalEntitys_PhysicalEntity_Class_name, Devm_PhysicalEntitys_PhysicalEntity_Class_value)
	proto.RegisterEnum("huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_AdminState", Devm_PhysicalEntitys_PhysicalEntity_AdminState_name, Devm_PhysicalEntitys_PhysicalEntity_AdminState_value)
	proto.RegisterEnum("huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_RunningState", Devm_PhysicalEntitys_PhysicalEntity_RunningState_name, Devm_PhysicalEntitys_PhysicalEntity_RunningState_value)
	proto.RegisterEnum("huawei_devm.Devm_PhysicalEntitys_PhysicalEntity_StandbyState", Devm_PhysicalEntitys_PhysicalEntity_StandbyState_name, Devm_PhysicalEntitys_PhysicalEntity_StandbyState_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicEntitys_LogicEntity_Class", Devm_LogicEntitys_LogicEntity_Class_name, Devm_LogicEntitys_LogicEntity_Class_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicEntitys_LogicEntity_VendorType", Devm_LogicEntitys_LogicEntity_VendorType_name, Devm_LogicEntitys_LogicEntity_VendorType_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicEntitys_LogicEntity_OperState", Devm_LogicEntitys_LogicEntity_OperState_name, Devm_LogicEntitys_LogicEntity_OperState_value)
	proto.RegisterEnum("huawei_devm.Devm_Chassiss_Chassis_CurrentRunMode", Devm_Chassiss_Chassis_CurrentRunMode_name, Devm_Chassiss_Chassis_CurrentRunMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Chassiss_Chassis_NextRunMode", Devm_Chassiss_Chassis_NextRunMode_name, Devm_Chassiss_Chassis_NextRunMode_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicContainers_LogicContainer_ContainerType", Devm_LogicContainers_LogicContainer_ContainerType_name, Devm_LogicContainers_LogicContainer_ContainerType_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicContainers_LogicContainer_EquipedEntityType", Devm_LogicContainers_LogicContainer_EquipedEntityType_name, Devm_LogicContainers_LogicContainer_EquipedEntityType_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType", Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_name, Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType_EntityType_value)
	proto.RegisterEnum("huawei_devm.Devm_MpuBoards_MpuBoard_LsRole", Devm_MpuBoards_MpuBoard_LsRole_name, Devm_MpuBoards_MpuBoard_LsRole_value)
	proto.RegisterEnum("huawei_devm.Devm_LpuBoards_LpuBoard_ServiceType", Devm_LpuBoards_LpuBoard_ServiceType_name, Devm_LpuBoards_LpuBoard_ServiceType_value)
	proto.RegisterEnum("huawei_devm.Devm_LpuBoards_LpuBoard_NextServiceType", Devm_LpuBoards_LpuBoard_NextServiceType_name, Devm_LpuBoards_LpuBoard_NextServiceType_value)
	proto.RegisterEnum("huawei_devm.Devm_Cards_Card_InitStatus", Devm_Cards_Card_InitStatus_name, Devm_Cards_Card_InitStatus_value)
	proto.RegisterEnum("huawei_devm.Devm_Cards_Card_RegisterStatus", Devm_Cards_Card_RegisterStatus_name, Devm_Cards_Card_RegisterStatus_value)
	proto.RegisterEnum("huawei_devm.Devm_Cards_Card_Pic_LogicStatus", Devm_Cards_Card_Pic_LogicStatus_name, Devm_Cards_Card_Pic_LogicStatus_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_AdminState", Devm_Ports_Port_AdminState_name, Devm_Ports_Port_AdminState_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Type", Devm_Ports_Port_Type_name, Devm_Ports_Port_Type_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_HardType", Devm_Ports_Port_HardType_name, Devm_Ports_Port_HardType_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_LoopbackMode", Devm_Ports_Port_LoopbackMode_name, Devm_Ports_Port_LoopbackMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_MediumType", Devm_Ports_Port_MediumType_name, Devm_Ports_Port_MediumType_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_Speed", Devm_Ports_Port_Ethernet_Speed_name, Devm_Ports_Port_Ethernet_Speed_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_Duplex", Devm_Ports_Port_Ethernet_Duplex_name, Devm_Ports_Port_Ethernet_Duplex_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_Negotiation", Devm_Ports_Port_Ethernet_Negotiation_name, Devm_Ports_Port_Ethernet_Negotiation_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_NegotiationMode", Devm_Ports_Port_Ethernet_NegotiationMode_name, Devm_Ports_Port_Ethernet_NegotiationMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_TransMode", Devm_Ports_Port_Ethernet_TransMode_name, Devm_Ports_Port_Ethernet_TransMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_SpeedSwitchMode", Devm_Ports_Port_Ethernet_SpeedSwitchMode_name, Devm_Ports_Port_Ethernet_SpeedSwitchMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_BitError", Devm_Ports_Port_Ethernet_BitError_name, Devm_Ports_Port_Ethernet_BitError_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_TriggerTimeType", Devm_Ports_Port_Ethernet_TriggerTimeType_name, Devm_Ports_Port_Ethernet_TriggerTimeType_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_TxPowerCfgType", Devm_Ports_Port_Ethernet_TxPowerCfgType_name, Devm_Ports_Port_Ethernet_TxPowerCfgType_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_FecMode", Devm_Ports_Port_Ethernet_FecMode_name, Devm_Ports_Port_Ethernet_FecMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_EthFecMode", Devm_Ports_Port_Ethernet_EthFecMode_name, Devm_Ports_Port_Ethernet_EthFecMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_Flowctl", Devm_Ports_Port_Ethernet_Flowctl_name, Devm_Ports_Port_Ethernet_Flowctl_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_GfMediaType", Devm_Ports_Port_Ethernet_GfMediaType_name, Devm_Ports_Port_Ethernet_GfMediaType_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_HoldUp", Devm_Ports_Port_Ethernet_HoldUp_name, Devm_Ports_Port_Ethernet_HoldUp_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_Txipg", Devm_Ports_Port_Ethernet_Txipg_name, Devm_Ports_Port_Ethernet_Txipg_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_SwitchSpeed", Devm_Ports_Port_Ethernet_SwitchSpeed_name, Devm_Ports_Port_Ethernet_SwitchSpeed_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_PromiscuousMode", Devm_Ports_Port_Ethernet_PromiscuousMode_name, Devm_Ports_Port_Ethernet_PromiscuousMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Ethernet_FlexphySpeed", Devm_Ports_Port_Ethernet_FlexphySpeed_name, Devm_Ports_Port_Ethernet_FlexphySpeed_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Laser_AutoShutEnable", Devm_Ports_Port_Laser_AutoShutEnable_name, Devm_Ports_Port_Laser_AutoShutEnable_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_Laser_Status", Devm_Ports_Port_Laser_Status_name, Devm_Ports_Port_Laser_Status_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_OpticalModule_TransMode", Devm_Ports_Port_OpticalModule_TransMode_name, Devm_Ports_Port_OpticalModule_TransMode_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_OpticalModule_Type", Devm_Ports_Port_OpticalModule_Type_name, Devm_Ports_Port_OpticalModule_Type_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_OpticalModule_FiberType", Devm_Ports_Port_OpticalModule_FiberType_name, Devm_Ports_Port_OpticalModule_FiberType_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_OpticalModule_Tunable", Devm_Ports_Port_OpticalModule_Tunable_name, Devm_Ports_Port_OpticalModule_Tunable_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_OpticalModule_DirectionType", Devm_Ports_Port_OpticalModule_DirectionType_name, Devm_Ports_Port_OpticalModule_DirectionType_value)
	proto.RegisterEnum("huawei_devm.Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType", Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_name, Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown_AlarmType_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicPorts_LogicPort_PortType", Devm_LogicPorts_LogicPort_PortType_name, Devm_LogicPorts_LogicPort_PortType_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicPorts_LogicPort_AdminState", Devm_LogicPorts_LogicPort_AdminState_name, Devm_LogicPorts_LogicPort_AdminState_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicPorts_LogicPort_HardType", Devm_LogicPorts_LogicPort_HardType_name, Devm_LogicPorts_LogicPort_HardType_value)
	proto.RegisterEnum("huawei_devm.Devm_LogicPorts_LogicPort_Level", Devm_LogicPorts_LogicPort_Level_name, Devm_LogicPorts_LogicPort_Level_value)
	proto.RegisterEnum("huawei_devm.Devm_EntityClasses_EntityClass_ClassName", Devm_EntityClasses_EntityClass_ClassName_name, Devm_EntityClasses_EntityClass_ClassName_value)
	proto.RegisterEnum("huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_Class", Devm_InconsistentEntitys_InconsistentEntity_Class_name, Devm_InconsistentEntitys_InconsistentEntity_Class_value)
	proto.RegisterEnum("huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_LogicalType", Devm_InconsistentEntitys_InconsistentEntity_LogicalType_name, Devm_InconsistentEntitys_InconsistentEntity_LogicalType_value)
	proto.RegisterEnum("huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_PhysicalType", Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_name, Devm_InconsistentEntitys_InconsistentEntity_PhysicalType_value)
	proto.RegisterEnum("huawei_devm.Devm_InconsistentEntitys_InconsistentEntity_OperState", Devm_InconsistentEntitys_InconsistentEntity_OperState_name, Devm_InconsistentEntitys_InconsistentEntity_OperState_value)
	proto.RegisterEnum("huawei_devm.Devm_OfflineCfgs_Offline_Class", Devm_OfflineCfgs_Offline_Class_name, Devm_OfflineCfgs_Offline_Class_value)
	proto.RegisterType((*Devm)(nil), "huawei_devm.Devm")
	proto.RegisterType((*Devm_PhysicalEntitys)(nil), "huawei_devm.Devm.PhysicalEntitys")
	proto.RegisterType((*Devm_PhysicalEntitys_PhysicalEntity)(nil), "huawei_devm.Devm.PhysicalEntitys.PhysicalEntity")
	proto.RegisterType((*Devm_LogicEntitys)(nil), "huawei_devm.Devm.LogicEntitys")
	proto.RegisterType((*Devm_LogicEntitys_LogicEntity)(nil), "huawei_devm.Devm.LogicEntitys.LogicEntity")
	proto.RegisterType((*Devm_Chassiss)(nil), "huawei_devm.Devm.Chassiss")
	proto.RegisterType((*Devm_Chassiss_Chassis)(nil), "huawei_devm.Devm.Chassiss.Chassis")
	proto.RegisterType((*Devm_Chassiss_Chassis_MonitorBoardChanges)(nil), "huawei_devm.Devm.Chassiss.Chassis.MonitorBoardChanges")
	proto.RegisterType((*Devm_Chassiss_Chassis_MonitorBoardChanges_MonitorBoardChange)(nil), "huawei_devm.Devm.Chassiss.Chassis.MonitorBoardChanges.MonitorBoardChange")
	proto.RegisterType((*Devm_LogicContainers)(nil), "huawei_devm.Devm.LogicContainers")
	proto.RegisterType((*Devm_LogicContainers_LogicContainer)(nil), "huawei_devm.Devm.LogicContainers.LogicContainer")
	proto.RegisterType((*Devm_LogicContainers_LogicContainer_SupportedEntityTypes)(nil), "huawei_devm.Devm.LogicContainers.LogicContainer.SupportedEntityTypes")
	proto.RegisterType((*Devm_LogicContainers_LogicContainer_SupportedEntityTypes_SupportedEntityType)(nil), "huawei_devm.Devm.LogicContainers.LogicContainer.SupportedEntityTypes.SupportedEntityType")
	proto.RegisterType((*Devm_Containers)(nil), "huawei_devm.Devm.Containers")
	proto.RegisterType((*Devm_Containers_Container)(nil), "huawei_devm.Devm.Containers.Container")
	proto.RegisterType((*Devm_Containers_Container_SupportedEntityTypes)(nil), "huawei_devm.Devm.Containers.Container.SupportedEntityTypes")
	proto.RegisterType((*Devm_Containers_Container_SupportedEntityTypes_SupportedEntityType)(nil), "huawei_devm.Devm.Containers.Container.SupportedEntityTypes.SupportedEntityType")
	proto.RegisterType((*Devm_MpuBoards)(nil), "huawei_devm.Devm.MpuBoards")
	proto.RegisterType((*Devm_MpuBoards_MpuBoard)(nil), "huawei_devm.Devm.MpuBoards.MpuBoard")
	proto.RegisterType((*Devm_LpuBoards)(nil), "huawei_devm.Devm.LpuBoards")
	proto.RegisterType((*Devm_LpuBoards_LpuBoard)(nil), "huawei_devm.Devm.LpuBoards.LpuBoard")
	proto.RegisterType((*Devm_SfuBoards)(nil), "huawei_devm.Devm.SfuBoards")
	proto.RegisterType((*Devm_SfuBoards_SfuBoard)(nil), "huawei_devm.Devm.SfuBoards.SfuBoard")
	proto.RegisterType((*Devm_Cards)(nil), "huawei_devm.Devm.Cards")
	proto.RegisterType((*Devm_Cards_Card)(nil), "huawei_devm.Devm.Cards.Card")
	proto.RegisterType((*Devm_Cards_Card_Pic)(nil), "huawei_devm.Devm.Cards.Card.Pic")
	proto.RegisterType((*Devm_CfCards)(nil), "huawei_devm.Devm.CfCards")
	proto.RegisterType((*Devm_CfCards_CfCard)(nil), "huawei_devm.Devm.CfCards.CfCard")
	proto.RegisterType((*Devm_Ports)(nil), "huawei_devm.Devm.Ports")
	proto.RegisterType((*Devm_Ports_Port)(nil), "huawei_devm.Devm.Ports.Port")
	proto.RegisterType((*Devm_Ports_Port_Ethernet)(nil), "huawei_devm.Devm.Ports.Port.Ethernet")
	proto.RegisterType((*Devm_Ports_Port_Laser)(nil), "huawei_devm.Devm.Ports.Port.Laser")
	proto.RegisterType((*Devm_Ports_Port_OpticalModule)(nil), "huawei_devm.Devm.Ports.Port.OpticalModule")
	proto.RegisterType((*Devm_Ports_Port_OpticalModule_Channels)(nil), "huawei_devm.Devm.Ports.Port.OpticalModule.Channels")
	proto.RegisterType((*Devm_Ports_Port_OpticalModule_Channels_Channel)(nil), "huawei_devm.Devm.Ports.Port.OpticalModule.Channels.Channel")
	proto.RegisterType((*Devm_Ports_Port_TransmissionAlarm)(nil), "huawei_devm.Devm.Ports.Port.TransmissionAlarm")
	proto.RegisterType((*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns)(nil), "huawei_devm.Devm.Ports.Port.TransmissionAlarm.TransAlarmIfdowns")
	proto.RegisterType((*Devm_Ports_Port_TransmissionAlarm_TransAlarmIfdowns_TransAlarmIfdown)(nil), "huawei_devm.Devm.Ports.Port.TransmissionAlarm.TransAlarmIfdowns.TransAlarmIfdown")
	proto.RegisterType((*Devm_LogicPorts)(nil), "huawei_devm.Devm.LogicPorts")
	proto.RegisterType((*Devm_LogicPorts_LogicPort)(nil), "huawei_devm.Devm.LogicPorts.LogicPort")
	proto.RegisterType((*Devm_EntityClasses)(nil), "huawei_devm.Devm.EntityClasses")
	proto.RegisterType((*Devm_EntityClasses_EntityClass)(nil), "huawei_devm.Devm.EntityClasses.EntityClass")
	proto.RegisterType((*Devm_InconsistentEntitys)(nil), "huawei_devm.Devm.InconsistentEntitys")
	proto.RegisterType((*Devm_InconsistentEntitys_InconsistentEntity)(nil), "huawei_devm.Devm.InconsistentEntitys.InconsistentEntity")
	proto.RegisterType((*Devm_OfflineCfgs)(nil), "huawei_devm.Devm.OfflineCfgs")
	proto.RegisterType((*Devm_OfflineCfgs_Offline)(nil), "huawei_devm.Devm.OfflineCfgs.Offline")
	proto.RegisterType((*Devm_ScheduleReboot)(nil), "huawei_devm.Devm.ScheduleReboot")
}

func init() {
	proto.RegisterFile("proto/sensors/huawei-devm/huawei-devm.proto", fileDescriptor_b227d13a61499c89)
}

var fileDescriptor_b227d13a61499c89 = []byte{
	// 13465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0xeb, 0x9b, 0x1b, 0x5b,
	0x76, 0x17, 0x7c, 0xd4, 0xf7, 0x5e, 0x7d, 0xdb, 0x5d, 0xdd, 0xb6, 0xd5, 0x72, 0xdb, 0xee, 0xa3,
	0x73, 0x8e, 0xed, 0xe3, 0x73, 0xd4, 0x47, 0xdd, 0x76, 0xfb, 0x78, 0x2e, 0xc9, 0x8c, 0x54, 0x2a,
	0xc9, 0x1a, 0xeb, 0x76, 0x4a, 0x92, 0x2d, 0x3b, 0xef, 0xa4, 0x22, 0xab, 0xd5, 0xdd, 0xca, 0x51,
	0x4b, 0x8a, 0xa4, 0xf6, 0x65, 0xf2, 0x06, 0x08, 0xe4, 0x42, 0x2e, 0x33, 0x43, 0x26, 0xc3, 0x10,
	0x08, 0x24, 0x84, 0x5c, 0x81, 0x04, 0x48, 0xb8, 0x05, 0x08, 0x09, 0xcc, 0x84, 0x67, 0x78, 0x92,
	0x0f, 0x10, 0x78, 0x12, 0xbe, 0xf0, 0x31, 0x1f, 0x78, 0x20, 0xf0, 0xf0, 0x17, 0x10, 0x9e, 0x7d,
	0xad, 0xbd, 0x77, 0xed, 0x92, 0xed, 0x33, 0x93, 0x0f, 0x40, 0xbe, 0x74, 0xab, 0xd6, 0x6f, 0xad,
	0xb5, 0x2f, 0xb5, 0x6b, 0xd7, 0xae, 0xf5, 0xab, 0x5a, 0x1b, 0xde, 0x19, 0x0c, 0xfb, 0xe3, 0xfe,
	0x7b, 0xa3, 0x76, 0x6f, 0xd4, 0x1f, 0x8e, 0xde, 0x3b, 0x39, 0x6b, 0x3e, 0x6d, 0x77, 0x12, 0x87,
	0xed, 0x27, 0xa7, 0xf2, 0xef, 0x5d, 0xa2, 0x65, 0x2d, 0x51, 0x91, 0x87, 0x45, 0xf1, 0xef, 0xfb,
	0xf9, 0x69, 0x98, 0xc9, 0xb4, 0x9f, 0x9c, 0x5a, 0x45, 0x40, 0x83, 0x93, 0xe7, 0xa3, 0x4e, 0xab,
	0xd9, 0xf5, 0xda, 0xbd, 0x71, 0x67, 0xfc, 0x7c, 0x14, 0x8d, 0xec, 0x44, 0xae, 0x2f, 0xed, 0xbf,
	0xbe, 0x2b, 0x59, 0xec, 0x62, 0xe5, 0xdd, 0x0a, 0xd3, 0x74, 0xa8, 0xa2, 0x2b, 0x4c, 0x13, 0xcc,
	0xd4, 0xca, 0xc0, 0x4a, 0xb7, 0x7f, 0xdc, 0x69, 0x09, 0x5f, 0x53, 0xc4, 0xd7, 0xe5, 0xa0, 0xaf,
	0x02, 0x56, 0xe3, 0x8e, 0xa8, 0x91, 0xf0, 0x72, 0x1b, 0x16, 0x5a, 0x27, 0xcd, 0xd1, 0xa8, 0x33,
	0x1a, 0x45, 0xa7, 0x89, 0x83, 0x58, 0xd0, 0x81, 0xcd, 0x34, 0x5c, 0xa1, 0x8b, 0x1b, 0x43, 0x4b,
	0x6f, 0xf5, 0x7b, 0xe3, 0x66, 0xa7, 0xd7, 0x1e, 0x8e, 0xa2, 0x33, 0x61, 0x8d, 0x21, 0x15, 0xb0,
	0x85, 0xa2, 0x4b, 0x4d, 0x13, 0xbe, 0xa9, 0xf5, 0x49, 0x00, 0xc9, 0xd1, 0x2c, 0x71, 0xb4, 0x6d,
	0xa8, 0x88, 0xef, 0x43, 0xd2, 0xb7, 0x3e, 0x01, 0x70, 0x3a, 0x38, 0xf3, 0x1e, 0xf7, 0x9b, 0xc3,
	0xc3, 0x51, 0x74, 0x8e, 0x58, 0x5f, 0x0c, 0x5a, 0x17, 0x07, 0x67, 0x69, 0xa2, 0xe2, 0x62, 0xf5,
	0x04, 0x55, 0xc7, 0xc6, 0x5d, 0xdf, 0x78, 0x3e, 0xcc, 0xb8, 0xe0, 0x1b, 0x77, 0x15, 0xe3, 0xd1,
	0x91, 0x30, 0x5e, 0x08, 0x33, 0xae, 0x1e, 0x09, 0xe3, 0xd1, 0x91, 0x30, 0x4e, 0xc0, 0x6c, 0x8b,
	0xd8, 0x2d, 0x12, 0xbb, 0x0b, 0x86, 0xf6, 0x12, 0x1b, 0xaa, 0x65, 0x1d, 0xc0, 0x42, 0xeb, 0xc8,
	0xa3, 0x16, 0x40, 0x2c, 0xb6, 0x0c, 0x16, 0x47, 0xd4, 0x66, 0xa1, 0x75, 0x94, 0x68, 0xf1, 0x52,
	0x06, 0xfd, 0xe1, 0x78, 0x14, 0x5d, 0x0a, 0x2b, 0xa5, 0x82, 0x61, 0x97, 0x6a, 0x59, 0xdf, 0x0a,
	0x4b, 0xf4, 0xc4, 0x52, 0xa3, 0xe5, 0xb0, 0x53, 0x41, 0xce, 0x29, 0xb5, 0xa4, 0x06, 0x09, 0x6a,
	0x9f, 0x83, 0x55, 0x3a, 0xb6, 0xbc, 0x56, 0xb7, 0x39, 0x1a, 0xb5, 0x47, 0xd1, 0x15, 0xe2, 0xe2,
	0x4a, 0xd0, 0x05, 0x1d, 0x92, 0x36, 0x55, 0x73, 0x99, 0x59, 0x82, 0x99, 0x59, 0x0f, 0x61, 0xb3,
	0xd3, 0x6b, 0xf5, 0x7b, 0xa3, 0xce, 0x68, 0xdc, 0xee, 0x8d, 0xc5, 0x30, 0x5f, 0x25, 0xee, 0xde,
	0x0a, 0xba, 0xcb, 0x4b, 0xda, 0x7c, 0xb4, 0x2b, 0x2e, 0xc4, 0xa0, 0x4f, 0xc1, 0x72, 0xff, 0xe8,
	0xa8, 0xdb, 0xe9, 0xb5, 0xbd, 0xd6, 0xd1, 0xf1, 0x28, 0xba, 0x46, 0x5c, 0x5e, 0x0a, 0xba, 0x2c,
	0x53, 0x2d, 0xfb, 0xe8, 0x78, 0xe4, 0x72, 0x93, 0x04, 0x36, 0xb1, 0x3e, 0x03, 0x6b, 0xa3, 0xd6,
	0x49, 0xfb, 0xf0, 0xac, 0xdb, 0xf6, 0x86, 0xed, 0xc7, 0xfd, 0xfe, 0x38, 0x8a, 0x88, 0x97, 0x1d,
	0xc3, 0xd9, 0x67, 0x8a, 0x2e, 0xd1, 0x73, 0x85, 0x61, 0x82, 0x1a, 0xc6, 0x7e, 0x66, 0x1d, 0xd6,
	0xb4, 0xeb, 0xdd, 0x7a, 0x04, 0x6b, 0xda, 0x64, 0x11, 0x8d, 0xec, 0x4c, 0x5f, 0x5f, 0xda, 0x4f,
	0xbe, 0x70, 0xae, 0xd0, 0x8e, 0xdd, 0x35, 0x6d, 0xea, 0x88, 0xfd, 0x2a, 0x82, 0x55, 0x55, 0xc7,
	0x2a, 0xc0, 0x2c, 0xe9, 0x77, 0x32, 0x21, 0xad, 0xee, 0xdf, 0x7e, 0xd5, 0x42, 0x76, 0xc9, 0x59,
	0x74, 0xa9, 0x13, 0x2b, 0x06, 0x0b, 0x83, 0xfe, 0xa8, 0x33, 0xee, 0xf4, 0x7b, 0x64, 0x56, 0x5a,
	0x74, 0xc5, 0xb1, 0xf5, 0x26, 0xac, 0x8c, 0xda, 0xc3, 0x4e, 0xb3, 0xeb, 0xf5, 0xce, 0x4e, 0x1f,
	0xb7, 0x87, 0x64, 0xd6, 0x59, 0x74, 0x99, 0x30, 0x41, 0x85, 0xd6, 0x26, 0xcc, 0x76, 0x7a, 0x87,
	0xed, 0x67, 0x64, 0x4e, 0x59, 0x71, 0xe9, 0x01, 0xb6, 0x65, 0x13, 0x90, 0x47, 0xd1, 0x59, 0x82,
	0x72, 0x61, 0x82, 0x6a, 0xed, 0xc0, 0x12, 0xb9, 0xc0, 0x98, 0xce, 0x1c, 0xd1, 0xa1, 0x22, 0xa6,
	0x61, 0xc1, 0x4c, 0xaf, 0x79, 0xda, 0x26, 0x17, 0xfb, 0xa2, 0x4b, 0x7e, 0x5b, 0xbb, 0x60, 0xb1,
	0x71, 0x7b, 0xd8, 0x1e, 0xb5, 0x86, 0x9d, 0x01, 0xa9, 0xfd, 0x02, 0xd1, 0x60, 0x48, 0x42, 0x42,
	0x70, 0x0d, 0x9b, 0xdd, 0x4e, 0x93, 0x5e, 0xbc, 0x8b, 0x2e, 0x3d, 0xc0, 0x65, 0x3f, 0x69, 0xf7,
	0x0e, 0xfb, 0x43, 0x6f, 0xfc, 0x7c, 0xd0, 0x26, 0x97, 0xe9, 0xa2, 0xcb, 0x44, 0x09, 0x2c, 0xb2,
	0xae, 0xc3, 0x1a, 0x9f, 0xb9, 0x78, 0x0d, 0x97, 0x48, 0x0d, 0x7d, 0x31, 0xab, 0xe5, 0xc7, 0x21,
	0x3a, 0x68, 0x0e, 0xf1, 0xd0, 0x1f, 0xb6, 0xbb, 0xcd, 0x71, 0xe7, 0x49, 0xdb, 0x13, 0xbd, 0xba,
	0x4c, 0x4c, 0x18, 0x9e, 0xe0, 0x78, 0x42, 0xf4, 0xf2, 0x0d, 0x40, 0x27, 0xcd, 0xe1, 0xe1, 0xd3,
	0xe6, 0xb0, 0xed, 0x3d, 0x69, 0x0f, 0x47, 0xd8, 0x66, 0x85, 0x54, 0x46, 0xc8, 0x13, 0x4c, 0x8e,
	0x75, 0x8f, 0x3a, 0xc3, 0x53, 0x45, 0x77, 0x95, 0xea, 0x72, 0xb9, 0xac, 0x3b, 0xea, 0x1f, 0x8d,
	0x15, 0xdd, 0x35, 0xaa, 0xcb, 0xe5, 0x42, 0x77, 0x07, 0x96, 0x4e, 0xfb, 0xe4, 0x02, 0x21, 0x9d,
	0x8d, 0x68, 0x5f, 0x50, 0x51, 0x82, 0xf4, 0xf9, 0x79, 0x98, 0xeb, 0x8c, 0xbc, 0xa3, 0xe1, 0x59,
	0x74, 0x7d, 0x27, 0x72, 0x7d, 0xc1, 0x9d, 0xeb, 0x8c, 0x12, 0x47, 0xc3, 0x33, 0xeb, 0xb3, 0xb0,
	0xd4, 0x3c, 0x3c, 0xed, 0xf4, 0xbc, 0xd1, 0xb8, 0x39, 0x6e, 0x47, 0x2d, 0x32, 0x26, 0x3f, 0xf1,
	0xca, 0x63, 0x32, 0x85, 0x7d, 0x54, 0xb1, 0x0b, 0x97, 0xfa, 0x4b, 0x10, 0x7f, 0x56, 0x0b, 0x56,
	0x86, 0x67, 0xbd, 0x5e, 0xa7, 0x77, 0xcc, 0x0a, 0xd8, 0x20, 0x05, 0x7c, 0xcb, 0x2b, 0x17, 0xe0,
	0x52, 0x2f, 0xb4, 0x08, 0xee, 0xd3, 0x2f, 0x64, 0x34, 0x6e, 0xf6, 0x0e, 0x1f, 0x3f, 0x67, 0x85,
	0x6c, 0x7e, 0xc4, 0x42, 0xaa, 0xd4, 0x0b, 0x2b, 0x84, 0xf9, 0x64, 0x85, 0x5c, 0x06, 0x18, 0x3d,
	0x1f, 0x8d, 0xdb, 0xa7, 0x5e, 0xbf, 0x73, 0x18, 0x3d, 0x47, 0x7a, 0x98, 0x49, 0x12, 0xfd, 0xce,
	0xa1, 0x15, 0x85, 0xf9, 0xee, 0x88, 0x76, 0xff, 0x79, 0x02, 0xce, 0x77, 0x47, 0xa4, 0xeb, 0xe3,
	0x5f, 0x9b, 0x86, 0x59, 0x72, 0xcd, 0x5a, 0x6b, 0xb0, 0x44, 0x7e, 0x78, 0xe5, 0xda, 0x5d, 0xc7,
	0x45, 0xaf, 0x59, 0xeb, 0xb0, 0x42, 0x05, 0xf6, 0xdd, 0x54, 0xb5, 0x9a, 0xaf, 0xa2, 0x88, 0xb5,
	0x01, 0x6b, 0x54, 0x54, 0xac, 0xd4, 0x8b, 0xe5, 0x4c, 0xbd, 0xe0, 0xa0, 0x19, 0x5f, 0x58, 0x10,
	0xc2, 0x59, 0x5f, 0x58, 0xcd, 0x72, 0xe1, 0x9c, 0x75, 0x0e, 0xd6, 0x99, 0xc7, 0x42, 0xd9, 0xbe,
	0xc7, 0xc4, 0xf3, 0xd6, 0x26, 0x20, 0x26, 0x4e, 0xb9, 0x19, 0x26, 0x5d, 0xb4, 0x56, 0x01, 0xa8,
	0xb4, 0x52, 0x76, 0x6b, 0x08, 0xac, 0x15, 0x58, 0xa4, 0xc7, 0xd9, 0x54, 0x09, 0x21, 0xdf, 0x57,
	0xa5, 0xfc, 0xc0, 0x71, 0xab, 0xf5, 0x4a, 0xa5, 0xf0, 0x10, 0xad, 0xfb, 0xe5, 0xda, 0xe5, 0x52,
	0x2d, 0x95, 0x2f, 0x39, 0x2e, 0xb2, 0xac, 0x0d, 0x58, 0x65, 0xba, 0x15, 0xe6, 0xfe, 0x47, 0x77,
	0xac, 0x4d, 0x51, 0xc3, 0x07, 0x59, 0x26, 0xfd, 0xbc, 0x24, 0x75, 0x6c, 0x5e, 0xef, 0x2f, 0x48,
	0xd2, 0xbc, 0x90, 0x7e, 0x71, 0xc7, 0x5a, 0xe5, 0x35, 0x2a, 0x64, 0x1d, 0xf4, 0xd5, 0x1d, 0xbf,
	0x18, 0x9b, 0x3b, 0xfc, 0x1d, 0x59, 0xc9, 0xce, 0xa0, 0xdf, 0x97, 0x8e, 0x2b, 0x4e, 0x11, 0x7d,
	0xe1, 0x9a, 0xef, 0xda, 0x2e, 0x72, 0xd7, 0x5f, 0xba, 0x26, 0x69, 0xe5, 0x6d, 0xf4, 0xe3, 0xd2,
	0x71, 0xad, 0x5a, 0x47, 0x5f, 0xbe, 0x66, 0xad, 0xc0, 0x02, 0xc3, 0x8b, 0xe8, 0x97, 0xae, 0xc5,
	0x1f, 0x02, 0xf8, 0x83, 0xdc, 0xba, 0x00, 0x1b, 0xfe, 0x91, 0x97, 0x2f, 0xa5, 0xec, 0x5a, 0xfe,
	0xbe, 0x83, 0x5e, 0xc3, 0x7d, 0x26, 0x01, 0x4c, 0x1c, 0xb1, 0x2e, 0xc2, 0x05, 0x49, 0x5c, 0x2a,
	0xd7, 0x70, 0x6f, 0x96, 0xdd, 0x9a, 0x93, 0x41, 0x53, 0xf1, 0xff, 0x31, 0x05, 0xcb, 0xf2, 0xf8,
	0xb6, 0xa2, 0xb0, 0x29, 0x1f, 0x7b, 0xf5, 0xd2, 0xbd, 0x52, 0xf9, 0x41, 0x09, 0xbd, 0x86, 0xcb,
	0x55, 0x90, 0x52, 0xd9, 0x2d, 0xa6, 0x0a, 0x28, 0x62, 0x9d, 0x07, 0x4b, 0x01, 0xb2, 0xa9, 0x7a,
	0xa1, 0x86, 0xa6, 0x02, 0xae, 0xca, 0xd9, 0x6c, 0x21, 0x5f, 0x72, 0xd0, 0xb4, 0x75, 0x09, 0xb6,
	0x34, 0x57, 0x52, 0xa5, 0x66, 0xac, 0x37, 0xe0, 0x8a, 0x6a, 0x58, 0xa9, 0xe5, 0xed, 0x54, 0xa1,
	0x54, 0xae, 0x39, 0x1f, 0xd4, 0xf3, 0x95, 0x8a, 0x93, 0x41, 0xb3, 0xb8, 0x59, 0xba, 0x8f, 0x7c,
	0xa9, 0x5a, 0x4b, 0x15, 0x0a, 0x68, 0xce, 0x8a, 0xc1, 0x79, 0x05, 0x7c, 0xe0, 0x96, 0x4b, 0xb9,
	0xda, 0xc3, 0x0a, 0x1e, 0x8f, 0xba, 0xa1, 0xeb, 0xe4, 0xf2, 0xd5, 0x9a, 0xe3, 0x3a, 0x19, 0xb4,
	0x10, 0xa8, 0x59, 0xbd, 0x24, 0xc1, 0x8b, 0xd6, 0x16, 0x9c, 0x53, 0x60, 0x32, 0x3a, 0xcb, 0xd9,
	0x2c, 0x02, 0xeb, 0x2d, 0x78, 0x5d, 0x83, 0xdc, 0x5a, 0xc3, 0xab, 0xdc, 0x7d, 0x58, 0xc5, 0x75,
	0x6f, 0x78, 0x19, 0xdc, 0x8b, 0x4b, 0xf1, 0x9f, 0x8c, 0xc0, 0xb2, 0x7c, 0xad, 0xe3, 0x6e, 0x95,
	0x8f, 0xbd, 0x62, 0x0a, 0x97, 0x86, 0x5e, 0xc3, 0xdd, 0xaa, 0x00, 0xd5, 0x42, 0x8a, 0x9c, 0xcf,
	0x4b, 0xb0, 0xa5, 0xc8, 0xd5, 0x33, 0x1a, 0x80, 0xab, 0x0f, 0xab, 0x35, 0xa7, 0xc8, 0xbc, 0x4e,
	0x5b, 0xdb, 0x10, 0x35, 0xc0, 0xd4, 0xf7, 0x4c, 0xec, 0x77, 0xf7, 0x61, 0x59, 0x7e, 0x8e, 0xb0,
	0x4a, 0xb0, 0x2c, 0x3f, 0x7e, 0xb0, 0xd5, 0xc9, 0x8d, 0xc9, 0x4f, 0x1f, 0xf2, 0x81, 0xbb, 0x2c,
	0x3f, 0x89, 0xc4, 0xfe, 0xeb, 0x1e, 0x2c, 0x49, 0xa8, 0x95, 0x55, 0x57, 0x24, 0xc9, 0x97, 0x77,
	0xfc, 0xcd, 0x5e, 0x8b, 0x3c, 0x50, 0xef, 0xe9, 0x33, 0xa4, 0x3e, 0x07, 0xaf, 0x50, 0x9f, 0xfb,
	0xc4, 0xba, 0xf6, 0x7c, 0xd0, 0x56, 0x97, 0x02, 0x7c, 0x19, 0x32, 0xfb, 0xc2, 0x65, 0xc8, 0xdc,
	0xa4, 0x65, 0x08, 0x5d, 0x44, 0xcc, 0xcb, 0x0b, 0xa5, 0x1a, 0x40, 0x7f, 0xd0, 0x1e, 0xb2, 0x3b,
	0xcf, 0x02, 0xa9, 0xf1, 0xad, 0x57, 0xa8, 0x71, 0x79, 0xd0, 0x1e, 0xd2, 0x1b, 0x0e, 0xf1, 0xc3,
	0xee, 0x36, 0x71, 0x58, 0x66, 0x0b, 0x12, 0x5a, 0xe4, 0x22, 0x29, 0x92, 0xc9, 0x5e, 0x62, 0xd1,
	0x02, 0x2f, 0x58, 0xb4, 0x58, 0x30, 0x73, 0xda, 0x3e, 0xed, 0x93, 0xf5, 0xd0, 0xa2, 0x4b, 0x7e,
	0xff, 0xe9, 0x7d, 0xea, 0xff, 0x8a, 0xfb, 0xd4, 0xd7, 0xae, 0x01, 0xf8, 0x57, 0x01, 0x9e, 0xc0,
	0xfc, 0x23, 0xe9, 0x46, 0xa2, 0xca, 0xf9, 0x69, 0x9d, 0xc6, 0xf7, 0x0b, 0x49, 0x9e, 0x2e, 0xa7,
	0xdc, 0x4c, 0xb5, 0x50, 0xae, 0xa1, 0x19, 0xcd, 0xa2, 0x58, 0xa9, 0x13, 0xf9, 0xac, 0x26, 0x2f,
	0x30, 0xf9, 0x9c, 0x26, 0xaf, 0x66, 0xa9, 0x7c, 0x5e, 0x93, 0xe7, 0x6d, 0x2a, 0x5f, 0xd0, 0xe4,
	0x0e, 0x93, 0x2f, 0xea, 0x35, 0x2d, 0xdc, 0x23, 0x72, 0xd0, 0xe4, 0xd9, 0x54, 0x89, 0xc8, 0x97,
	0xb4, 0x16, 0xd0, 0x21, 0x81, 0x91, 0x65, 0xcd, 0xa2, 0x92, 0xb7, 0x89, 0x7c, 0x45, 0x93, 0x97,
	0xb3, 0x54, 0xbe, 0xaa, 0xb7, 0xcc, 0xa6, 0x3d, 0xb1, 0x86, 0x6f, 0x40, 0x72, 0x8d, 0xb2, 0x36,
	0xef, 0x24, 0xa4, 0x57, 0xb6, 0x48, 0x1b, 0xb1, 0x6e, 0x5d, 0x81, 0x8b, 0x72, 0x65, 0x4b, 0xa9,
	0xa2, 0x73, 0x27, 0xf9, 0xb1, 0x24, 0x3f, 0x1f, 0x16, 0xbe, 0x63, 0x98, 0x14, 0x1e, 0xdc, 0x2d,
	0x17, 0x1c, 0xb4, 0x61, 0xed, 0xc0, 0xb6, 0x09, 0x2e, 0x39, 0x07, 0xc9, 0x64, 0xd2, 0x69, 0xa0,
	0x4d, 0xeb, 0x2a, 0xc4, 0x4d, 0x1a, 0x76, 0xa1, 0x8e, 0x6f, 0x3a, 0xb6, 0x53, 0xaa, 0xb9, 0xa9,
	0x02, 0x3a, 0x67, 0xbd, 0x09, 0x3b, 0x93, 0x3c, 0x35, 0xbc, 0xfb, 0x69, 0x74, 0x1e, 0xdf, 0x10,
	0x83, 0xc3, 0x63, 0x0f, 0x45, 0xcd, 0xc0, 0x3e, 0xda, 0xd2, 0x3b, 0xc5, 0xb6, 0xf9, 0x98, 0x8a,
	0x59, 0x97, 0x21, 0x26, 0x43, 0xce, 0xc1, 0x9d, 0x83, 0xe4, 0xad, 0x3b, 0xb5, 0x5b, 0xd5, 0xfd,
	0x0f, 0x9c, 0x3c, 0xba, 0x88, 0x6f, 0x87, 0x0a, 0x7e, 0x9b, 0xe0, 0xd5, 0x5b, 0x18, 0xdd, 0x0e,
	0x41, 0x6b, 0x04, 0xbd, 0xa4, 0xd7, 0xc7, 0x3d, 0xd8, 0x2f, 0x56, 0xea, 0x29, 0x74, 0xd9, 0x0c,
	0xa4, 0xd1, 0x95, 0x20, 0x70, 0x40, 0x2c, 0x76, 0xf4, 0x73, 0xc7, 0xe4, 0xaf, 0x07, 0xe4, 0xb7,
	0x8b, 0x95, 0xba, 0x8d, 0xe2, 0xda, 0x40, 0xe3, 0x8e, 0xd2, 0xe8, 0x8d, 0x60, 0x11, 0xb7, 0x5d,
	0xec, 0xea, 0x4d, 0x43, 0xa5, 0x0a, 0x18, 0x78, 0xcb, 0x0c, 0xa4, 0xd1, 0x55, 0x33, 0x60, 0xa3,
	0x6b, 0x66, 0xc0, 0x41, 0xd7, 0xcd, 0x80, 0x8b, 0xde, 0x36, 0x03, 0x59, 0x74, 0xc3, 0x0c, 0xe4,
	0xd0, 0x3b, 0x66, 0xe0, 0x2e, 0x7a, 0xd7, 0x0c, 0xe4, 0x51, 0xc2, 0x0c, 0xdc, 0x43, 0xbb, 0x66,
	0xa0, 0x88, 0xde, 0x33, 0x03, 0x25, 0x94, 0x34, 0x00, 0x55, 0xdc, 0xf2, 0x3d, 0xbc, 0x76, 0xd4,
	0x7a, 0x17, 0xb7, 0x63, 0x2f, 0x99, 0x4c, 0xa1, 0xfd, 0x70, 0x30, 0x8d, 0x6e, 0x9a, 0xc1, 0x3c,
	0xb1, 0xbc, 0x15, 0x0e, 0xa6, 0xd1, 0x41, 0x38, 0x68, 0xa3, 0xdb, 0x21, 0x65, 0xee, 0x63, 0xb7,
	0xef, 0x6b, 0xa3, 0xc7, 0x2d, 0xb9, 0xe4, 0xc4, 0xde, 0x31, 0xca, 0x33, 0xe8, 0x63, 0x46, 0x79,
	0x16, 0x7d, 0x1c, 0xdf, 0x19, 0x55, 0x79, 0xa9, 0x8a, 0x3e, 0x81, 0x6f, 0x7d, 0xaa, 0x34, 0xe7,
	0x3a, 0xe8, 0x93, 0xa6, 0xbe, 0xcb, 0xd6, 0x53, 0xe8, 0x5b, 0x4c, 0x80, 0x5b, 0x4f, 0xa1, 0x6f,
	0x35, 0x5b, 0x64, 0xd0, 0xa7, 0xcc, 0x40, 0x16, 0x7d, 0xda, 0x0c, 0xe4, 0x50, 0xca, 0x0c, 0xd8,
	0x28, 0x6d, 0x04, 0x9c, 0x14, 0xb2, 0xf1, 0x93, 0x82, 0x06, 0xdc, 0x6b, 0x78, 0x04, 0xcb, 0x18,
	0x2e, 0x57, 0xd2, 0x14, 0xc7, 0x00, 0x38, 0x76, 0x3d, 0x85, 0xb2, 0x41, 0x6f, 0x07, 0x76, 0xc3,
	0x23, 0x58, 0xce, 0x60, 0x94, 0xc7, 0xc0, 0x5d, 0xc3, 0x39, 0xc4, 0xcd, 0x24, 0x67, 0x3f, 0x1f,
	0x04, 0x71, 0x1d, 0xe8, 0xb8, 0xf9, 0x4c, 0xb8, 0xa5, 0x8d, 0xee, 0x05, 0xeb, 0x82, 0x41, 0x32,
	0x32, 0x0a, 0x86, 0x7a, 0x3a, 0x76, 0x9d, 0x38, 0x2d, 0x9a, 0xbb, 0x2a, 0x8d, 0x4a, 0xda, 0xa4,
	0x93, 0x71, 0x0e, 0xf6, 0xaa, 0x6e, 0x7d, 0x2f, 0x85, 0xca, 0x21, 0x48, 0x1a, 0x55, 0x42, 0x10,
	0x1b, 0x7d, 0x10, 0xac, 0x7b, 0x06, 0xd7, 0x3d, 0x95, 0xbc, 0x6d, 0x23, 0xd7, 0x0c, 0xe6, 0xef,
	0x25, 0x6f, 0x27, 0x51, 0x55, 0x1b, 0xa6, 0xe9, 0x72, 0xb9, 0xe6, 0x96, 0x8b, 0xa8, 0xa6, 0x0d,
	0xd3, 0x6c, 0x21, 0x55, 0xbd, 0x8b, 0xea, 0x9a, 0xd4, 0xa9, 0x14, 0x32, 0x7b, 0xe8, 0xbe, 0x41,
	0xba, 0x8f, 0x1e, 0x18, 0x9a, 0xee, 0xec, 0x35, 0x1a, 0xa8, 0x61, 0x00, 0x1e, 0x60, 0xe0, 0xa1,
	0xc9, 0x22, 0x95, 0xcb, 0xa2, 0x47, 0x06, 0xa0, 0x72, 0xab, 0x9e, 0x45, 0xdf, 0x66, 0x02, 0xb0,
	0xab, 0xff, 0xcf, 0x68, 0x71, 0x37, 0x8b, 0x3e, 0x6b, 0x2a, 0x63, 0xbf, 0xd1, 0x40, 0xdf, 0x6e,
	0xaa, 0x15, 0x06, 0x3c, 0x93, 0x2b, 0x0c, 0x7c, 0x87, 0xc9, 0x55, 0x31, 0xe7, 0xa0, 0xa6, 0xc9,
	0xe2, 0x8e, 0x9d, 0x45, 0x8f, 0x4d, 0x16, 0xd9, 0x9c, 0x83, 0x5a, 0xc6, 0x76, 0xd4, 0xb3, 0xe8,
	0xd0, 0x58, 0x78, 0x3d, 0x8b, 0xda, 0x26, 0x57, 0x07, 0xb9, 0x2c, 0x3a, 0x32, 0xb6, 0xdc, 0xce,
	0xa2, 0xe3, 0x20, 0x70, 0xb3, 0xb2, 0x57, 0x7c, 0x84, 0x4e, 0x0c, 0x16, 0x99, 0xbd, 0xe2, 0x7d,
	0xd4, 0x31, 0x95, 0x71, 0xab, 0xd1, 0x40, 0xdf, 0x69, 0xb8, 0x2f, 0x92, 0x2e, 0xf9, 0xd0, 0x00,
	0x14, 0x30, 0xd0, 0x35, 0x00, 0xa4, 0xdb, 0x4f, 0x0d, 0x40, 0x06, 0x03, 0x3d, 0x93, 0xab, 0x83,
	0x46, 0x03, 0xf5, 0x4d, 0xae, 0x30, 0x30, 0x30, 0xd5, 0x0a, 0x37, 0xf0, 0xbb, 0x4c, 0x16, 0x7b,
	0x25, 0x1b, 0x0d, 0x4d, 0x40, 0x36, 0x97, 0x45, 0xa3, 0xe0, 0x92, 0x60, 0xdf, 0xb9, 0x97, 0xcb,
	0x3e, 0x44, 0xe3, 0xa0, 0xc9, 0xfb, 0xc4, 0xe4, 0x2c, 0x68, 0x42, 0x0a, 0xb1, 0xd1, 0x13, 0xf3,
	0x20, 0x7d, 0x84, 0x9e, 0x9a, 0xaf, 0x90, 0x47, 0xe8, 0x99, 0xf9, 0x0a, 0x79, 0x84, 0x9e, 0x5b,
	0x16, 0xac, 0xca, 0x6b, 0xf1, 0x4a, 0x1d, 0x7d, 0x0e, 0x3f, 0x1e, 0x49, 0xb2, 0x5a, 0xb5, 0x9e,
	0x42, 0xdf, 0x6d, 0x6c, 0x72, 0xd1, 0x46, 0xff, 0xbf, 0xa1, 0x9a, 0x85, 0x54, 0x23, 0x9b, 0x42,
	0xdf, 0x63, 0x98, 0x52, 0xcb, 0x59, 0x3b, 0x85, 0xfe, 0x8c, 0x79, 0x1e, 0x26, 0xd8, 0x9f, 0xb5,
	0xa2, 0x81, 0x9a, 0x96, 0xb3, 0x76, 0x1a, 0xfd, 0xb9, 0x88, 0xb5, 0x15, 0x58, 0x55, 0x95, 0xb3,
	0xf6, 0xad, 0x24, 0xfa, 0xde, 0x88, 0x75, 0x31, 0xe0, 0xb0, 0x9c, 0xb5, 0xc9, 0x84, 0xf9, 0xe7,
	0xc3, 0xc1, 0x34, 0xfa, 0x0b, 0x11, 0x73, 0x71, 0xf7, 0xd1, 0xf7, 0xe1, 0xc7, 0x58, 0xb9, 0x67,
	0x9c, 0xda, 0x5d, 0xf4, 0xfd, 0xba, 0xb0, 0x52, 0xae, 0xa2, 0x1f, 0x88, 0x58, 0x16, 0xac, 0x48,
	0xc2, 0x9c, 0x83, 0x7e, 0x30, 0x62, 0x9d, 0x57, 0x6e, 0xbf, 0x0d, 0x6f, 0x2f, 0x99, 0x73, 0xd0,
	0x5f, 0x0c, 0xe8, 0x66, 0xd1, 0x0f, 0x19, 0x75, 0xb3, 0xe8, 0x87, 0x83, 0xf2, 0x5b, 0x58, 0xfe,
	0x23, 0x7a, 0x47, 0x50, 0x7d, 0xbb, 0x5c, 0x44, 0x3f, 0xaa, 0xb7, 0x95, 0x9a, 0x54, 0x2b, 0x85,
	0x7c, 0x0d, 0x7d, 0x5e, 0xaf, 0xfc, 0xfd, 0xaa, 0x8b, 0xbe, 0xa0, 0x0b, 0xf1, 0x43, 0xea, 0x17,
	0x23, 0xd6, 0x39, 0x65, 0xfe, 0x25, 0x4f, 0x4a, 0xe8, 0x2f, 0xe9, 0x62, 0xf2, 0x7c, 0x8e, 0x7e,
	0x4c, 0x77, 0x81, 0x9f, 0xbc, 0xbf, 0x14, 0xf0, 0x6b, 0x67, 0xd0, 0x8f, 0xeb, 0x2d, 0xa2, 0xcf,
	0x47, 0xe8, 0xcb, 0xba, 0xb2, 0x5d, 0xac, 0xa3, 0xbf, 0x1c, 0xb1, 0xb6, 0x03, 0x77, 0x99, 0x64,
	0x12, 0x5f, 0x34, 0xb7, 0x93, 0xe8, 0x2b, 0x66, 0xb4, 0x72, 0xab, 0xd1, 0xb8, 0x9d, 0x44, 0x7f,
	0x25, 0x04, 0xbd, 0x53, 0xc7, 0xb6, 0x3f, 0x11, 0xe2, 0x99, 0xda, 0xfe, 0x55, 0x33, 0xfa, 0x80,
	0xa2, 0x7f, 0xcd, 0x84, 0xe2, 0x65, 0x58, 0x0a, 0xdf, 0xfb, 0x7e, 0xd2, 0x6c, 0x5b, 0x70, 0x1a,
	0xb8, 0xdc, 0xbf, 0x1e, 0x52, 0xee, 0x7e, 0xc9, 0xbe, 0x9d, 0x44, 0x7f, 0xc3, 0x84, 0x3a, 0x7b,
	0xa5, 0x42, 0x0a, 0x97, 0xfb, 0x53, 0x26, 0x14, 0xdf, 0xf7, 0x53, 0xc9, 0xdb, 0x69, 0xf4, 0xd3,
	0x46, 0xcf, 0xf8, 0xa1, 0xe6, 0xd6, 0xed, 0x24, 0xfa, 0x9b, 0x66, 0x5b, 0x52, 0xe7, 0x34, 0xfa,
	0x99, 0x10, 0x34, 0xef, 0xe0, 0x16, 0xfd, 0xad, 0x30, 0xcf, 0xa9, 0x5b, 0x07, 0x49, 0xf4, 0xb3,
	0xc6, 0x3a, 0xdb, 0xd8, 0xf3, 0x41, 0x12, 0xfd, 0x5c, 0x98, 0x67, 0x82, 0xfe, 0x7c, 0x48, 0x5f,
	0x1d, 0x90, 0x7e, 0xfe, 0x85, 0x90, 0xbe, 0xa2, 0xe8, 0x2f, 0x86, 0xd8, 0xee, 0x13, 0xf4, 0x97,
	0xc2, 0xfa, 0x99, 0xa0, 0x7f, 0x3b, 0x04, 0xcd, 0x92, 0x71, 0xf5, 0x77, 0x42, 0x46, 0xce, 0x5e,
	0xf1, 0xd1, 0xed, 0x24, 0xfa, 0xbb, 0x21, 0x28, 0xf5, 0xfc, 0xcb, 0x06, 0xb4, 0x98, 0x4c, 0xe2,
	0x59, 0xf2, 0x76, 0x12, 0xfd, 0x4a, 0x48, 0xb9, 0x7b, 0xe4, 0xec, 0xff, 0xbd, 0x90, 0x16, 0xa5,
	0x88, 0xe7, 0xbf, 0x6f, 0x44, 0xf1, 0x7c, 0x89, 0xcf, 0xd1, 0x3f, 0xd0, 0xaf, 0xcb, 0xda, 0x5e,
	0xc3, 0xae, 0xa2, 0x5f, 0xd5, 0xaf, 0xb6, 0xda, 0x9e, 0xd3, 0x28, 0xec, 0xa3, 0x5f, 0x33, 0xc9,
	0xf7, 0xf6, 0xd1, 0x3f, 0x0c, 0xba, 0x71, 0x1a, 0x77, 0xd0, 0x3f, 0x32, 0x88, 0xef, 0xee, 0xa1,
	0x7f, 0x6c, 0xf0, 0x92, 0xdb, 0xbf, 0x85, 0xfe, 0x49, 0x50, 0xdd, 0xbe, 0xbb, 0x87, 0xfe, 0xa9,
	0x41, 0xfc, 0xc1, 0x2d, 0xf4, 0xeb, 0x41, 0x71, 0xd5, 0x4e, 0xa1, 0x7f, 0x16, 0x14, 0xe3, 0x49,
	0xe5, 0x9f, 0x07, 0xc5, 0x95, 0x7c, 0x1d, 0xfd, 0x0b, 0x43, 0x0d, 0xb3, 0x79, 0xf4, 0x1b, 0xfa,
	0xac, 0xd2, 0xb0, 0x53, 0xe8, 0x5f, 0x46, 0xac, 0x0b, 0xca, 0xf2, 0xb4, 0x56, 0xaa, 0xef, 0x55,
	0x6d, 0x1b, 0xfd, 0xa6, 0x0e, 0xd8, 0x2c, 0x5c, 0xf0, 0x5b, 0x66, 0x20, 0x8d, 0xfe, 0x55, 0xc4,
	0xda, 0x54, 0xee, 0x93, 0xe4, 0x21, 0xfb, 0x5f, 0x1b, 0xa4, 0x59, 0xf4, 0xd5, 0x40, 0xb1, 0x95,
	0x14, 0xa9, 0xe4, 0xd7, 0x82, 0xf5, 0xa1, 0xdd, 0xfe, 0xdb, 0x7a, 0xa3, 0x68, 0xbc, 0xf5, 0xdf,
	0x44, 0xe2, 0x5f, 0x9f, 0x82, 0x45, 0x11, 0x19, 0xc6, 0x4f, 0x79, 0xe2, 0x40, 0x8a, 0xe1, 0x6d,
	0x02, 0xf2, 0xc5, 0x82, 0x09, 0xda, 0x80, 0x35, 0x5f, 0xca, 0x69, 0x20, 0xc5, 0x83, 0xcf, 0x01,
	0xc5, 0xe0, 0xbc, 0xec, 0x41, 0x21, 0x80, 0x76, 0x60, 0x5b, 0x32, 0x31, 0xb1, 0x3f, 0x51, 0xd8,
	0x54, 0xac, 0x7d, 0xea, 0xe7, 0x02, 0x6c, 0xf8, 0x88, 0xcc, 0xfb, 0x28, 0x26, 0x0a, 0xe9, 0xa3,
	0x54, 0x45, 0x63, 0x7c, 0xce, 0x83, 0xe5, 0x63, 0x12, 0xdd, 0x13, 0x87, 0xcb, 0xb2, 0xdc, 0xc4,
	0xf5, 0xc4, 0x7e, 0x68, 0x19, 0x16, 0xf8, 0x4b, 0x55, 0xd6, 0x27, 0x61, 0x9e, 0xbd, 0xc0, 0xc0,
	0x48, 0x94, 0x78, 0xf8, 0x1b, 0x58, 0xfc, 0x87, 0xcb, 0x4d, 0x62, 0xbf, 0xb9, 0x04, 0xf3, 0x4c,
	0xa8, 0x70, 0x1d, 0x11, 0x8d, 0xeb, 0x10, 0x44, 0xc1, 0x94, 0x4c, 0x14, 0x58, 0x30, 0x43, 0x48,
	0x0d, 0x4a, 0x7c, 0x90, 0xdf, 0x56, 0x1c, 0x96, 0x47, 0xed, 0xe1, 0x93, 0x4e, 0xab, 0xed, 0x13,
	0x1e, 0x8b, 0x2e, 0x97, 0x51, 0xea, 0x22, 0x06, 0x0b, 0xa3, 0x6e, 0x7f, 0xec, 0xf5, 0xce, 0x4e,
	0xd9, 0x4b, 0x18, 0xe4, 0x38, 0xd1, 0x3b, 0x3b, 0xb5, 0xb6, 0x61, 0x91, 0xbe, 0x7f, 0x81, 0x41,
	0xfa, 0xf6, 0x05, 0x15, 0x10, 0x34, 0x0a, 0xf3, 0x47, 0xcd, 0x1e, 0xc1, 0x28, 0x65, 0x81, 0x0f,
	0xb9, 0xdd, 0xa0, 0xff, 0xb4, 0x3d, 0x24, 0xd8, 0x02, 0xb5, 0x23, 0x02, 0x6e, 0x77, 0x36, 0xf0,
	0xc6, 0x9d, 0xd3, 0x36, 0xe3, 0x1d, 0xe6, 0xcf, 0x06, 0x09, 0x7c, 0x68, 0xed, 0x82, 0x35, 0x1a,
	0x37, 0xc7, 0x67, 0x23, 0xaf, 0xdb, 0x1c, 0x8d, 0xbd, 0xd6, 0x49, 0xb3, 0x77, 0xdc, 0x66, 0x64,
	0x03, 0x43, 0x12, 0x18, 0x49, 0x50, 0x44, 0xa2, 0x58, 0x64, 0x7d, 0xfa, 0x12, 0x06, 0xa7, 0x58,
	0x64, 0xfd, 0xcb, 0x00, 0xad, 0xb3, 0x21, 0xe5, 0x3d, 0x0e, 0xd9, 0x9b, 0x17, 0x5c, 0x92, 0xa0,
	0x24, 0x7b, 0xaf, 0xfd, 0x8c, 0x80, 0x2b, 0xb4, 0x66, 0xf8, 0x10, 0x23, 0x9f, 0x05, 0xc4, 0x2d,
	0x87, 0x67, 0x3d, 0xef, 0xb4, 0x7f, 0xd8, 0x26, 0x6f, 0x56, 0xac, 0xee, 0xef, 0xbd, 0xf8, 0x14,
	0xef, 0xda, 0xd4, 0xd4, 0x3d, 0xeb, 0x15, 0xfb, 0x87, 0x6d, 0x97, 0xbb, 0x4a, 0x0c, 0xcf, 0x7a,
	0x09, 0xec, 0xca, 0xaa, 0xc1, 0x0a, 0x29, 0x58, 0xf8, 0x5e, 0x23, 0xbe, 0x77, 0x5f, 0xc2, 0x77,
	0xa9, 0xfd, 0x4c, 0x38, 0x26, 0x4e, 0x7c, 0xaf, 0x37, 0x00, 0x1d, 0x9e, 0xe1, 0x7e, 0xe9, 0xb6,
	0x9b, 0x3d, 0xaf, 0xf5, 0xbc, 0xd5, 0xa5, 0xef, 0x6e, 0xac, 0xb8, 0x44, 0x9e, 0x20, 0xf2, 0x04,
	0x91, 0x5b, 0xd7, 0x61, 0x8d, 0xf6, 0x21, 0xd1, 0x3d, 0x6c, 0x8e, 0xdb, 0xe4, 0x4d, 0x8e, 0x45,
	0x77, 0x8d, 0x76, 0x20, 0x51, 0xc5, 0x62, 0xec, 0x15, 0x9f, 0xbe, 0xbe, 0xe7, 0xeb, 0x93, 0xf7,
	0x3a, 0x56, 0x5c, 0x84, 0xcf, 0x63, 0x3f, 0xe1, 0x1b, 0x60, 0xdd, 0x66, 0xb7, 0x39, 0x3c, 0xf5,
	0xda, 0xcf, 0x3a, 0xa3, 0xb1, 0x77, 0xd8, 0x7c, 0x3e, 0x22, 0xaf, 0x68, 0xac, 0xb8, 0x54, 0x9e,
	0x20, 0xf2, 0x04, 0x96, 0x5b, 0x5d, 0x38, 0x77, 0xda, 0xef, 0x75, 0xc6, 0xfd, 0x21, 0x7d, 0x09,
	0x8f, 0x9d, 0xce, 0x11, 0x79, 0xdd, 0x62, 0xc9, 0xf4, 0x22, 0x53, 0xa0, 0x2f, 0x8a, 0xd4, 0x9e,
	0xbc, 0xa0, 0x67, 0x53, 0x6b, 0x97, 0x3b, 0xa5, 0xaf, 0xea, 0xb1, 0x91, 0x30, 0x8a, 0xfd, 0xca,
	0x14, 0x6c, 0x18, 0xd4, 0xad, 0xef, 0x81, 0x4d, 0x53, 0x2d, 0xd8, 0xf5, 0x9c, 0xff, 0x68, 0x95,
	0x30, 0xc8, 0xdc, 0x4d, 0x53, 0xbd, 0x62, 0x5f, 0x89, 0x80, 0x15, 0x54, 0xd6, 0x5f, 0x84, 0x8a,
	0x04, 0x5f, 0x84, 0x32, 0x5f, 0x3a, 0x53, 0xaf, 0x78, 0xe9, 0x4c, 0x87, 0x5d, 0x3a, 0xf1, 0x9f,
	0x88, 0xc0, 0xaa, 0x3a, 0x8c, 0xf1, 0x94, 0xaa, 0x4a, 0xa4, 0x7b, 0xc7, 0x16, 0x9c, 0xd3, 0xb0,
	0x6a, 0xbe, 0x94, 0x2b, 0x38, 0x28, 0x62, 0x80, 0x6c, 0xdb, 0x6e, 0x78, 0x49, 0x34, 0x15, 0x06,
	0xed, 0xa1, 0xe9, 0x30, 0x68, 0x1f, 0xcd, 0xc4, 0x7f, 0x20, 0x02, 0x4b, 0xd2, 0x55, 0x80, 0xef,
	0x0e, 0xd2, 0xa1, 0x4a, 0x4a, 0xc9, 0x80, 0xa8, 0x91, 0x26, 0x17, 0xd5, 0x31, 0xc9, 0x71, 0x5d,
	0x4c, 0xf2, 0x7d, 0x34, 0x13, 0xfb, 0xb5, 0x43, 0x58, 0xd3, 0x5e, 0x90, 0xb5, 0x1e, 0xc1, 0x9a,
	0xf6, 0x76, 0x6d, 0xf8, 0xdb, 0x7f, 0x9a, 0xad, 0x76, 0xec, 0xae, 0x69, 0xef, 0xda, 0xc6, 0xbe,
	0xda, 0x82, 0x55, 0x55, 0xe7, 0x23, 0xdc, 0x37, 0x8e, 0x60, 0x55, 0x78, 0xf4, 0xc4, 0x1d, 0x64,
	0x75, 0xff, 0x5b, 0x5f, 0xb5, 0x7e, 0xfe, 0x2b, 0xbd, 0x84, 0x1f, 0xf7, 0xbd, 0xd2, 0xfb, 0xcc,
	0x18, 0x36, 0xda, 0xdf, 0x75, 0xd6, 0x19, 0xb4, 0x0f, 0xd9, 0x7b, 0x06, 0x32, 0x07, 0x9f, 0x7e,
	0xe5, 0xc2, 0x1c, 0xea, 0x8b, 0xb2, 0xdc, 0xa4, 0x40, 0xee, 0x9e, 0xbd, 0x86, 0x40, 0x4b, 0xfd,
	0x1e, 0x38, 0x3f, 0x3a, 0x1b, 0x0c, 0xfa, 0xc3, 0xb1, 0x5a, 0x2e, 0x7f, 0x33, 0xd9, 0x79, 0xe5,
	0x82, 0xab, 0xdc, 0x9d, 0x5f, 0xf4, 0xc8, 0xf5, 0x0b, 0x91, 0x4b, 0x1f, 0xc5, 0xbe, 0x78, 0x03,
	0x36, 0x4d, 0x06, 0xd6, 0x17, 0x23, 0x70, 0xce, 0x58, 0x31, 0x36, 0x3a, 0x1e, 0x7e, 0x53, 0xea,
	0x65, 0x12, 0xba, 0xe7, 0x8c, 0x75, 0x8d, 0xfd, 0xe1, 0x75, 0xd8, 0x30, 0xa8, 0x5b, 0xf8, 0xea,
	0x52, 0xeb, 0x87, 0x4f, 0xd8, 0xe1, 0x9f, 0x58, 0xfd, 0x76, 0xa5, 0xaa, 0x2e, 0x49, 0x15, 0x24,
	0xcc, 0xb3, 0x54, 0xaf, 0xf3, 0x60, 0xf9, 0x47, 0xea, 0x45, 0x2e, 0xc9, 0x15, 0xe6, 0x59, 0x92,
	0x6b, 0xcc, 0xb3, 0x84, 0x28, 0xcc, 0xb3, 0x24, 0x57, 0x98, 0x67, 0x49, 0xae, 0x30, 0xcf, 0x92,
	0x5c, 0x61, 0x9e, 0x25, 0xb9, 0xc2, 0x3c, 0xcb, 0x35, 0x95, 0x99, 0x67, 0x49, 0xae, 0x30, 0xcf,
	0x92, 0x5c, 0x63, 0x9e, 0x65, 0x44, 0x66, 0x9e, 0x25, 0xb9, 0xc2, 0x3c, 0xcb, 0x2d, 0x93, 0x99,
	0x67, 0xb9, 0x46, 0x1a, 0xf3, 0x2c, 0x43, 0x32, 0xf3, 0x2c, 0x57, 0xd6, 0xc8, 0x3c, 0x9b, 0x14,
	0x24, 0xe6, 0xd9, 0x04, 0xab, 0xcc, 0xb3, 0x49, 0xc3, 0xc4, 0x3c, 0x4f, 0xf2, 0xe4, 0x33, 0xcf,
	0xc1, 0xe1, 0xc1, 0x98, 0xe7, 0x20, 0xc0, 0x98, 0x67, 0x19, 0xd0, 0x98, 0x67, 0x19, 0x32, 0x31,
	0xcf, 0x0a, 0x1e, 0x60, 0x9e, 0x0d, 0xa8, 0xc4, 0x3c, 0xcb, 0xa8, 0xc2, 0x3c, 0x07, 0x01, 0xc6,
	0x3c, 0xab, 0x80, 0xc4, 0x3c, 0xcb, 0x80, 0xcc, 0x3c, 0x2b, 0x72, 0x89, 0x79, 0x36, 0x38, 0x62,
	0xcc, 0xb3, 0x8a, 0x48, 0xcc, 0xb3, 0x56, 0x29, 0x9f, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0x0e, 0x02,
	0x8c, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0x0e, 0x02,
	0x8c, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0x0e, 0x02,
	0x8c, 0x79, 0x0e, 0x02, 0x8c, 0x79, 0xd6, 0x00, 0x9f, 0x79, 0xd6, 0x7a, 0x57, 0x65, 0x9e, 0xcd,
	0x20, 0x63, 0x9e, 0x83, 0xa0, 0xc4, 0x3c, 0x9b, 0x41, 0xc6, 0x3c, 0x9b, 0x41, 0xc6, 0x3c, 0x1b,
	0xca, 0xf4, 0x99, 0x67, 0x09, 0x54, 0x98, 0xe7, 0x80, 0x9c, 0x31, 0xcf, 0x01, 0x39, 0x63, 0x9e,
	0x55, 0x39, 0x67, 0x9e, 0x55, 0xa9, 0x60, 0x9e, 0xf5, 0xbe, 0x13, 0xcc, 0xb3, 0x0e, 0x08, 0xe6,
	0x39, 0x68, 0xc1, 0x98, 0xe7, 0x20, 0xc0, 0x98, 0xe7, 0x20, 0xc0, 0x98, 0xe7, 0x20, 0xc0, 0x98,
	0xe7, 0x00, 0xc0, 0x99, 0x67, 0x0d, 0x50, 0x98, 0x67, 0xed, 0x2a, 0xf3, 0x99, 0x67, 0x0d, 0xf0,
	0x99, 0x67, 0x0d, 0x50, 0x98, 0x67, 0x0d, 0xf3, 0x99, 0x67, 0xed, 0x1c, 0xaa, 0xcc, 0x73, 0xb0,
	0x0e, 0x12, 0xf3, 0x6c, 0xb6, 0x64, 0xcc, 0x73, 0x10, 0xf4, 0x99, 0xe7, 0x60, 0x03, 0x7c, 0xe6,
	0x39, 0xd8, 0x55, 0x8c, 0x79, 0x96, 0x00, 0x8d, 0x79, 0x36, 0x20, 0x8c, 0x79, 0x36, 0x20, 0x8c,
	0x79, 0x56, 0x8b, 0xd1, 0x98, 0xe7, 0x20, 0x28, 0x31, 0xcf, 0xca, 0x3a, 0x41, 0x62, 0x9e, 0xe5,
	0xdb, 0x8b, 0xcf, 0x3c, 0xcb, 0xf7, 0x76, 0x9f, 0x79, 0xd6, 0xa4, 0x8c, 0x79, 0xd6, 0x9a, 0xee,
	0x33, 0xcf, 0x1a, 0xe0, 0x33, 0xcf, 0xba, 0x85, 0x60, 0x9e, 0x35, 0xc0, 0x67, 0x9e, 0x75, 0x40,
	0x30, 0xcf, 0x01, 0x0b, 0xce, 0x3c, 0xeb, 0x65, 0x08, 0xe6, 0x59, 0xaf, 0x95, 0x60, 0x9e, 0x75,
	0x57, 0x82, 0x79, 0xd6, 0x5d, 0x09, 0xe6, 0x59, 0xb7, 0x10, 0xcc, 0xb3, 0x6e, 0x21, 0x98, 0xe7,
	0x40, 0x3b, 0x38, 0xf3, 0x1c, 0x28, 0x9c, 0x33, 0xcf, 0xba, 0x2b, 0xc1, 0x3c, 0x07, 0x5a, 0xce,
	0x99, 0x67, 0x15, 0x90, 0x98, 0x67, 0xcd, 0xc2, 0x67, 0x9e, 0xf5, 0x32, 0x04, 0xf3, 0xac, 0x5d,
	0x0d, 0x3e, 0xf3, 0xac, 0xcf, 0xa0, 0x82, 0x79, 0xd6, 0x00, 0x9f, 0x79, 0xd6, 0x00, 0x9f, 0x79,
	0xd6, 0x5d, 0x09, 0xe6, 0x59, 0x77, 0x25, 0x98, 0x67, 0xbd, 0x56, 0x82, 0x79, 0xd6, 0x2d, 0x04,
	0xf3, 0xac, 0x03, 0x82, 0x79, 0xd6, 0x5b, 0xee, 0x33, 0xcf, 0x2a, 0x22, 0x31, 0xcf, 0x86, 0x42,
	0x18, 0xf3, 0x1c, 0x1c, 0xa4, 0x8c, 0x79, 0x0e, 0x5e, 0x21, 0x8c, 0x79, 0x0e, 0x5e, 0x21, 0x8c,
	0x79, 0x96, 0xd7, 0xe2, 0x9c, 0x79, 0x96, 0x64, 0x3e, 0xf3, 0x1c, 0xa8, 0x0d, 0x67, 0x9e, 0xf5,
	0x6e, 0xf5, 0x99, 0x67, 0x6d, 0x1a, 0xf3, 0x99, 0xe7, 0xe0, 0x3c, 0xec, 0x33, 0xcf, 0x5a, 0x4d,
	0x25, 0xe6, 0x39, 0xe8, 0x4e, 0x30, 0xcf, 0x41, 0x48, 0x62, 0x9e, 0x8d, 0x20, 0x67, 0x9e, 0x83,
	0xc5, 0x71, 0xe6, 0x59, 0x9e, 0x83, 0x04, 0xf3, 0xac, 0x3c, 0x42, 0x70, 0xe6, 0x59, 0x12, 0x0a,
	0xe6, 0x59, 0x92, 0x29, 0xcc, 0xb3, 0xac, 0xcb, 0x99, 0x67, 0x5d, 0x97, 0x33, 0xcf, 0x8a, 0x5c,
	0x62, 0x9e, 0x03, 0xfa, 0x3e, 0xf3, 0x1c, 0x30, 0x91, 0x99, 0x67, 0x09, 0xf4, 0x99, 0x67, 0xf9,
	0x51, 0x46, 0x30, 0xcf, 0xfa, 0x93, 0x12, 0x63, 0x9e, 0x95, 0x07, 0x2e, 0x9f, 0x79, 0x56, 0x9f,
	0xb7, 0x18, 0xf3, 0xac, 0x3e, 0x22, 0x31, 0xe6, 0x39, 0xf0, 0x7c, 0xc4, 0x98, 0x67, 0xf5, 0xe1,
	0x88, 0x31, 0xcf, 0xda, 0x5d, 0x46, 0x63, 0x9e, 0x03, 0xa8, 0xc2, 0x3c, 0x07, 0x51, 0x99, 0x79,
	0x0e, 0x7a, 0x96, 0x99, 0xe7, 0x00, 0xaa, 0x30, 0xcf, 0x1a, 0xaa, 0x31, 0xcf, 0x01, 0x5b, 0x85,
	0x79, 0x0e, 0x96, 0x2b, 0x33, 0xcf, 0x1a, 0xaa, 0x31, 0xcf, 0x81, 0x7b, 0xae, 0xc2, 0x3c, 0xeb,
	0x9e, 0x55, 0xe6, 0xd9, 0x7c, 0x33, 0xe7, 0xcc, 0xb3, 0xe1, 0x6e, 0x2e, 0x31, 0xcf, 0x06, 0xcf,
	0x12, 0xf3, 0xac, 0xd7, 0x59, 0x65, 0x9e, 0x0d, 0x9e, 0x25, 0xe6, 0x39, 0xd8, 0x57, 0x32, 0xf3,
	0x1c, 0xec, 0x2b, 0x99, 0x79, 0x0e, 0xda, 0xca, 0xcc, 0xb3, 0xa1, 0x9f, 0x25, 0xe6, 0x39, 0x88,
	0xca, 0xcc, 0x73, 0x70, 0xe4, 0xc8, 0xcc, 0x73, 0x10, 0x95, 0x99, 0x67, 0x15, 0xd5, 0x99, 0xe7,
	0x60, 0xb9, 0x32, 0xf3, 0x1c, 0x6c, 0x91, 0xcc, 0x3c, 0xeb, 0xa8, 0xca, 0x3c, 0xcb, 0x13, 0xb6,
	0xc4, 0x3c, 0x2b, 0x62, 0x89, 0x79, 0xd6, 0xe4, 0x82, 0x79, 0xd6, 0xe4, 0x9c, 0x79, 0x56, 0xc5,
	0x82, 0x79, 0x56, 0xc5, 0x3e, 0xf3, 0xac, 0xc8, 0x7d, 0xe6, 0x59, 0x15, 0x0b, 0xe6, 0x59, 0x11,
	0xfb, 0xcc, 0xb3, 0x22, 0xf6, 0x99, 0x67, 0x45, 0xec, 0x33, 0xcf, 0x6a, 0x55, 0x04, 0xf3, 0x2c,
	0x4f, 0x86, 0x82, 0x79, 0x96, 0x75, 0x15, 0xe6, 0x59, 0x79, 0x98, 0x97, 0x99, 0xe7, 0x00, 0xc0,
	0x99, 0x67, 0x35, 0xbe, 0xc5, 0x99, 0x67, 0x55, 0xca, 0x99, 0x67, 0xb9, 0x58, 0x85, 0x79, 0x56,
	0xea, 0x23, 0x33, 0xcf, 0x72, 0xec, 0x89, 0x33, 0xcf, 0x7f, 0x34, 0x0d, 0x2b, 0x4a, 0xa0, 0x98,
	0x44, 0xf6, 0x65, 0x81, 0x14, 0xcb, 0xbb, 0x08, 0x17, 0x54, 0xc8, 0x0f, 0xdb, 0x45, 0x82, 0x76,
	0x3c, 0x72, 0x37, 0x15, 0x84, 0x78, 0xf0, 0x6e, 0x3a, 0x08, 0xf1, 0xf8, 0xdd, 0x4c, 0x10, 0xe2,
	0x21, 0xbc, 0xd9, 0x20, 0xc4, 0xa3, 0x78, 0x73, 0x41, 0x88, 0x07, 0xf2, 0xe6, 0x0d, 0x50, 0x91,
	0xc7, 0x04, 0x03, 0x10, 0x0f, 0xf3, 0x2d, 0x06, 0x1b, 0xed, 0x47, 0xfa, 0xc0, 0xd0, 0x32, 0x16,
	0xbc, 0x5b, 0x0a, 0x42, 0x3c, 0x0e, 0xb8, 0x1c, 0x84, 0x78, 0x28, 0x70, 0xc5, 0xda, 0x86, 0xa8,
	0x56, 0x47, 0x3f, 0xea, 0xb7, 0x6a, 0x5d, 0x82, 0x2d, 0x15, 0xbd, 0x9f, 0x77, 0x6b, 0xf5, 0x54,
	0x81, 0xc5, 0x0b, 0x77, 0x60, 0xdb, 0x0c, 0xd7, 0xd3, 0x34, 0x6c, 0x18, 0xff, 0xe9, 0x7d, 0x58,
	0x0f, 0x84, 0xea, 0x49, 0x4c, 0x50, 0x17, 0x4a, 0xa7, 0xdd, 0x08, 0xfb, 0x91, 0xdc, 0x2b, 0x70,
	0x31, 0x08, 0xcb, 0x01, 0x5d, 0xa3, 0xbd, 0x1f, 0xd7, 0x35, 0xc2, 0x7e, 0x78, 0xd7, 0x08, 0xfb,
	0x51, 0x5e, 0x23, 0xec, 0x07, 0x7b, 0x8d, 0xb0, 0x1f, 0xf3, 0x35, 0x37, 0x4d, 0x84, 0x7e, 0x8d,
	0xb0, 0x1f, 0x01, 0x36, 0xb6, 0x5c, 0x0e, 0x04, 0x1b, 0xed, 0xfd, 0x78, 0xb0, 0x11, 0xf6, 0xc3,
	0xc2, 0xe6, 0x8e, 0x11, 0xd1, 0xe1, 0x1d, 0xd8, 0x36, 0xd4, 0x5d, 0x0e, 0x12, 0x9b, 0x5b, 0x27,
	0x62, 0xc5, 0x57, 0x21, 0x6e, 0x68, 0x5d, 0x30, 0x64, 0xfc, 0x26, 0xec, 0x4c, 0xd0, 0xe3, 0x91,
	0xe3, 0x6b, 0xf0, 0xc6, 0x04, 0x2d, 0x29, 0x80, 0x9c, 0x80, 0xb7, 0x27, 0x28, 0x06, 0xe2, 0xc8,
	0xef, 0xc0, 0xb5, 0x97, 0xf0, 0xcb, 0xc2, 0xc9, 0x97, 0x21, 0x16, 0x3a, 0x54, 0xf7, 0x50, 0x74,
	0x22, 0xbe, 0x8f, 0xb6, 0x42, 0xfa, 0x54, 0x8e, 0x31, 0xbf, 0x05, 0xaf, 0x1b, 0x34, 0x02, 0xa1,
	0xe6, 0x37, 0xe0, 0x8a, 0x49, 0x4d, 0x8d, 0x38, 0x4f, 0x54, 0xe2, 0x81, 0x67, 0x73, 0x95, 0xfd,
	0xf8, 0xf3, 0x24, 0x3c, 0x8d, 0xae, 0x84, 0xe2, 0x3c, 0x1a, 0x6d, 0x1e, 0x24, 0x22, 0x28, 0x1d,
	0x02, 0xf3, 0xd8, 0xb4, 0xf1, 0x12, 0x90, 0x43, 0xd4, 0x61, 0xc5, 0xf3, 0x48, 0x75, 0x68, 0xf5,
	0x59, 0xc0, 0x7a, 0x12, 0x9e, 0x46, 0x57, 0x27, 0xe2, 0x36, 0xba, 0x36, 0x11, 0x77, 0xd0, 0xf5,
	0x89, 0xb8, 0x8b, 0xde, 0x9e, 0x88, 0x67, 0xd1, 0x8d, 0x89, 0x78, 0x0e, 0xbd, 0x33, 0x11, 0xbf,
	0x8b, 0xde, 0x9d, 0x88, 0xe7, 0x51, 0x62, 0x22, 0x7e, 0x0f, 0xed, 0x4e, 0xc4, 0x8b, 0xe8, 0xbd,
	0x89, 0x78, 0x09, 0x25, 0xc3, 0x71, 0x16, 0x04, 0x8f, 0xc3, 0x65, 0xf3, 0xf9, 0x93, 0x62, 0xe1,
	0x2f, 0xd2, 0x49, 0xa3, 0x9b, 0x13, 0x75, 0x78, 0x64, 0xfc, 0x45, 0x3a, 0x69, 0x74, 0xf0, 0x42,
	0x1d, 0x1b, 0xdd, 0x9e, 0x5c, 0x1f, 0x16, 0x2e, 0x37, 0x8e, 0x6b, 0x3f, 0x6a, 0x3e, 0x01, 0xce,
	0xa0, 0x8f, 0x4d, 0x82, 0xb3, 0xe8, 0xe3, 0x24, 0xa2, 0x69, 0x82, 0x49, 0x28, 0x7d, 0x1b, 0xa2,
	0x46, 0x90, 0x46, 0xd4, 0xc3, 0xcf, 0x07, 0x0d, 0xac, 0x87, 0xe3, 0x34, 0xbe, 0x3e, 0xc9, 0x3e,
	0x83, 0x3e, 0x35, 0x11, 0xcf, 0xa2, 0x4f, 0x4f, 0xc4, 0x73, 0x28, 0x35, 0x11, 0xb7, 0x51, 0x7a,
	0x12, 0x4e, 0x42, 0xf0, 0xaf, 0xc3, 0x25, 0x33, 0xee, 0x47, 0xe2, 0x43, 0x67, 0x2c, 0x16, 0x90,
	0x0f, 0xc5, 0x59, 0x5c, 0x3e, 0xac, 0x08, 0x29, 0x3c, 0x1f, 0xea, 0x82, 0x45, 0xe9, 0x43, 0x47,
	0x90, 0x14, 0xac, 0x0f, 0xd3, 0x91, 0x63, 0xf6, 0x2f, 0xf2, 0x63, 0xa3, 0x7b, 0xa1, 0xd5, 0x95,
	0x22, 0xf8, 0xa1, 0x2d, 0xf2, 0x03, 0xf9, 0x93, 0xfa, 0x3d, 0x8d, 0x4a, 0xe6, 0x89, 0x5a, 0x0e,
	0xeb, 0x4f, 0x54, 0x48, 0xa3, 0xca, 0x64, 0x05, 0x1b, 0x7d, 0x10, 0xda, 0x58, 0x39, 0xd6, 0x3f,
	0x49, 0x87, 0x87, 0xfc, 0x8d, 0x17, 0x97, 0x1f, 0xf9, 0x37, 0x5e, 0x5c, 0x9c, 0x00, 0x30, 0x82,
	0x9c, 0x07, 0x08, 0x05, 0xf7, 0xd1, 0x83, 0xf0, 0x0e, 0x64, 0xac, 0x40, 0x28, 0xce, 0xc8, 0x81,
	0x70, 0x7b, 0xca, 0x11, 0x84, 0xe2, 0x8c, 0x2a, 0x08, 0xc7, 0x29, 0x63, 0x30, 0xc1, 0x9e, 0x10,
	0x07, 0xe1, 0xe5, 0x53, 0xfe, 0x20, 0xbc, 0xfe, 0x94, 0x46, 0x08, 0xf7, 0x4f, 0xd9, 0x84, 0x70,
	0xff, 0x94, 0x54, 0x08, 0xb7, 0xa7, 0xdc, 0x42, 0xb8, 0x3d, 0xa5, 0x18, 0x26, 0xb4, 0x9f, 0x30,
	0x0d, 0x13, 0xea, 0x47, 0x08, 0x87, 0x70, 0xff, 0x94, 0x77, 0x98, 0xd0, 0x7f, 0x84, 0x7e, 0x08,
	0xc3, 0x39, 0x0b, 0x11, 0x6a, 0xcf, 0xc8, 0x88, 0xf0, 0xf2, 0x29, 0x27, 0x11, 0xba, 0x10, 0x62,
	0xd4, 0x44, 0x28, 0xce, 0x18, 0x8a, 0x50, 0x9c, 0x11, 0x15, 0xa1, 0x38, 0xe3, 0x2b, 0xc2, 0xfd,
	0x53, 0xda, 0x22, 0xdc, 0x3f, 0x65, 0x2f, 0xc2, 0xeb, 0x4f, 0x49, 0x8c, 0x70, 0x7b, 0xca, 0x65,
	0x84, 0xe3, 0x94, 0xd2, 0x08, 0x5b, 0x49, 0x0a, 0x66, 0x23, 0xcc, 0x01, 0x27, 0x38, 0xc2, 0x1c,
	0x08, 0x9e, 0x63, 0xd2, 0x15, 0xf6, 0x08, 0x3d, 0x9d, 0x38, 0x03, 0x3c, 0x42, 0xcf, 0x26, 0xce,
	0x00, 0x8f, 0xd0, 0x73, 0xf2, 0x66, 0x4a, 0xf0, 0x49, 0x95, 0x70, 0x20, 0x31, 0x38, 0x1f, 0x84,
	0x18, 0x15, 0x32, 0xa1, 0xe3, 0x08, 0x23, 0x12, 0xda, 0x2e, 0x4e, 0x8c, 0x84, 0xde, 0xcc, 0x18,
	0x3f, 0x32, 0xe9, 0x7e, 0xc8, 0x68, 0x92, 0x2b, 0x61, 0x4d, 0xe3, 0x6c, 0xc9, 0x4e, 0xd8, 0x3a,
	0x5f, 0x90, 0x26, 0xf1, 0xb0, 0x52, 0x24, 0xee, 0xe4, 0x05, 0x3a, 0x84, 0x42, 0x99, 0x54, 0x15,
	0xc2, 0xa4, 0xc4, 0x4c, 0xdd, 0xcc, 0x08, 0x15, 0x23, 0xc6, 0x78, 0x95, 0x2d, 0xd8, 0x0c, 0x62,
	0x94, 0x5e, 0xb9, 0x64, 0x5a, 0x92, 0xf9, 0x2c, 0x8b, 0xd9, 0x92, 0x90, 0x2d, 0xe1, 0x96, 0x84,
	0x73, 0x09, 0x81, 0x39, 0xf5, 0x62, 0xec, 0x55, 0x85, 0x81, 0x31, 0xf6, 0x98, 0x46, 0xc4, 0x18,
	0x1b, 0xcd, 0xf8, 0x18, 0x23, 0xc6, 0x68, 0x99, 0x6d, 0xd3, 0xed, 0x50, 0xb0, 0x33, 0x46, 0x54,
	0x90, 0x34, 0x46, 0xbf, 0x8c, 0xab, 0x31, 0x97, 0x49, 0x29, 0x1b, 0x63, 0x87, 0xf8, 0xcc, 0x8d,
	0xd1, 0x94, 0x11, 0x38, 0x6f, 0x84, 0x2d, 0x1d, 0x64, 0x1e, 0x67, 0x82, 0x92, 0x4f, 0xe7, 0x4c,
	0x52, 0x12, 0xac, 0xce, 0xa4, 0xe2, 0x04, 0xb9, 0x33, 0x41, 0xc9, 0xe7, 0x78, 0x42, 0x95, 0x64,
	0xaa, 0x67, 0x82, 0x27, 0x9f, 0xf1, 0x99, 0x54, 0x27, 0x41, 0xfc, 0x84, 0x2a, 0xc9, 0xfc, 0xcf,
	0x1b, 0xe1, 0xeb, 0x30, 0x9f, 0x06, 0x0a, 0x2f, 0x4e, 0x62, 0x83, 0xde, 0x78, 0xc1, 0xaa, 0x8f,
	0x90, 0x42, 0x93, 0x94, 0x04, 0x37, 0x34, 0xb1, 0x38, 0x4e, 0x11, 0x85, 0xb7, 0x4e, 0x62, 0x8a,
	0x26, 0x16, 0xc7, 0x09, 0xa3, 0x49, 0x3d, 0x2e, 0x78, 0xa3, 0x49, 0x3d, 0x2e, 0xe8, 0xa3, 0x49,
	0x9e, 0x04, 0x8b, 0x34, 0xf1, 0xdc, 0x71, 0x32, 0x69, 0x92, 0x92, 0xe0, 0x94, 0x26, 0x0d, 0x5f,
	0x41, 0x2d, 0x4d, 0x52, 0x12, 0x0c, 0x53, 0x98, 0x92, 0x42, 0x34, 0x4d, 0xaa, 0x93, 0xe0, 0x9b,
	0x26, 0x75, 0x81, 0xa0, 0x9d, 0xc2, 0x95, 0x24, 0xf6, 0xc9, 0x38, 0xef, 0x08, 0x12, 0xca, 0x38,
	0x7f, 0xf8, 0x5c, 0x54, 0x28, 0x4c, 0x29, 0xa9, 0x10, 0xdf, 0x8c, 0x99, 0x0a, 0x43, 0x29, 0x41,
	0x15, 0xe6, 0x9a, 0xf1, 0x54, 0x21, 0xc6, 0x8c, 0xae, 0x0a, 0x43, 0x29, 0x6b, 0x15, 0x82, 0x32,
	0xf2, 0x2a, 0x04, 0x65, 0x1c, 0x56, 0x08, 0xca, 0xa8, 0xac, 0xb0, 0x26, 0x51, 0x46, 0xcb, 0x38,
	0xdb, 0x32, 0x62, 0xeb, 0xb2, 0xe9, 0x21, 0x4c, 0xe2, 0xb7, 0x2e, 0x9b, 0xe3, 0x82, 0x82, 0xe6,
	0x9a, 0x80, 0x13, 0xb6, 0xeb, 0xa2, 0x69, 0x45, 0xc4, 0x49, 0xaf, 0x30, 0x90, 0x70, 0x5f, 0xe6,
	0x9a, 0xf9, 0x14, 0x58, 0x48, 0xcd, 0x05, 0x13, 0x66, 0xec, 0x13, 0x4e, 0x88, 0xc5, 0x7e, 0x71,
	0x06, 0x40, 0xfa, 0x5e, 0x24, 0x03, 0x8b, 0xfa, 0x97, 0x22, 0x57, 0x27, 0x65, 0x4f, 0xf7, 0x7f,
	0xba, 0xbe, 0x61, 0xec, 0x3f, 0x4c, 0xc3, 0xe2, 0x37, 0xf2, 0x51, 0x88, 0xe9, 0x63, 0xc2, 0x64,
	0xf8, 0x07, 0x1c, 0x8b, 0xe6, 0x8f, 0x2f, 0x46, 0x2f, 0xf8, 0xf8, 0xe2, 0x13, 0x2f, 0xd7, 0xb0,
	0x57, 0xfb, 0xe4, 0xe2, 0x3f, 0x45, 0x42, 0x3e, 0xb9, 0xf8, 0xfe, 0x17, 0x7c, 0x72, 0x51, 0xfe,
	0x06, 0x6a, 0xf3, 0x2a, 0x1f, 0x5a, 0xbc, 0x6f, 0xfe, 0xce, 0x62, 0x27, 0xf8, 0x99, 0xc5, 0xa2,
	0xf2, 0x01, 0x44, 0xec, 0x67, 0x67, 0x61, 0x51, 0x24, 0xbe, 0xb7, 0xd2, 0xb0, 0x28, 0x32, 0xe5,
	0xb3, 0x16, 0xbc, 0x39, 0x21, 0x51, 0xbe, 0xf8, 0xe5, 0x2e, 0x8a, 0x8c, 0xf9, 0xb1, 0xdf, 0x9b,
	0x81, 0x05, 0x2e, 0xff, 0x08, 0xa3, 0xe4, 0x32, 0x00, 0xfd, 0x2a, 0x4d, 0x1a, 0x2b, 0x54, 0x42,
	0xcf, 0xbf, 0xf4, 0xa1, 0xe7, 0x8c, 0xfa, 0xa1, 0xe7, 0x65, 0x80, 0xd1, 0xe1, 0xb0, 0x79, 0xea,
	0x8d, 0x3a, 0x9f, 0x6b, 0xb3, 0xcf, 0x4e, 0xa9, 0x24, 0x81, 0x25, 0x18, 0xef, 0x3d, 0x11, 0x38,
	0xfd, 0xf2, 0x94, 0x4a, 0x04, 0x7e, 0xd4, 0x6d, 0x8e, 0x4e, 0x28, 0x4e, 0xbf, 0x3e, 0xa5, 0x12,
	0x8a, 0x3b, 0x24, 0x5b, 0xf2, 0xb0, 0xdf, 0xe5, 0x29, 0x33, 0xdf, 0x79, 0x99, 0xae, 0xd9, 0x2d,
	0x8c, 0xdc, 0x7e, 0xb7, 0x4d, 0x52, 0x2b, 0x63, 0x5b, 0xf1, 0x51, 0xe4, 0xb0, 0x3d, 0x6a, 0x8f,
	0xfd, 0x2f, 0x56, 0xf9, 0x47, 0x91, 0x44, 0x4c, 0x1b, 0xf4, 0x2e, 0xac, 0x4b, 0x9a, 0xc3, 0x76,
	0x73, 0xc4, 0xb2, 0x64, 0x2e, 0xba, 0xeb, 0x92, 0x2e, 0x05, 0xac, 0x37, 0x61, 0x65, 0xd8, 0x3e,
	0xee, 0x8c, 0xc6, 0xed, 0x21, 0xf5, 0x4a, 0xf3, 0x64, 0x0a, 0x21, 0xf5, 0xb9, 0x03, 0x4b, 0x9d,
	0x91, 0xc7, 0x65, 0xe4, 0x73, 0xd5, 0x05, 0x77, 0xa9, 0x33, 0x4a, 0x70, 0x51, 0xfc, 0xc7, 0x22,
	0x30, 0x47, 0xeb, 0x6c, 0x59, 0xb0, 0x4a, 0x7f, 0x49, 0x3c, 0xea, 0x2a, 0x00, 0x93, 0x15, 0x8b,
	0x69, 0x14, 0xb1, 0xd6, 0x60, 0x89, 0x1d, 0x57, 0x0a, 0xc5, 0x34, 0x9a, 0x92, 0x04, 0x29, 0xbb,
	0x98, 0x46, 0xd3, 0xd6, 0x0a, 0x2c, 0x72, 0x8b, 0x34, 0x9a, 0x91, 0x0e, 0x0b, 0x36, 0x9a, 0xb5,
	0xd6, 0x61, 0x85, 0x1d, 0x56, 0x1f, 0x56, 0xb1, 0xcb, 0x39, 0x0b, 0xc1, 0xb2, 0x24, 0x4a, 0xa3,
	0xf9, 0xd8, 0x57, 0x16, 0x60, 0xb1, 0x20, 0x8f, 0xd2, 0xee, 0x8b, 0x47, 0xa9, 0xd0, 0x17, 0xbf,
	0xdc, 0x45, 0xb1, 0x35, 0x43, 0xec, 0xb7, 0xe7, 0x61, 0xa1, 0xf0, 0x27, 0x37, 0x4a, 0xd5, 0xb1,
	0x38, 0x63, 0x1a, 0x8b, 0xd2, 0x58, 0x9b, 0x0d, 0x8c, 0x35, 0x69, 0x94, 0xcf, 0xa9, 0xa3, 0xfc,
	0x4d, 0x58, 0xe9, 0x0d, 0xbc, 0xa1, 0xef, 0x9c, 0x0e, 0xd4, 0x95, 0xde, 0x20, 0x31, 0xf4, 0xfd,
	0xc7, 0x61, 0xb9, 0x37, 0xf0, 0x46, 0x42, 0x89, 0x7e, 0x2f, 0xbd, 0xdc, 0x1b, 0x24, 0x46, 0x42,
	0xa7, 0xa6, 0x7d, 0xc8, 0xbd, 0x18, 0x9a, 0x49, 0x37, 0xd0, 0x93, 0xbb, 0x55, 0x6a, 0x48, 0xa6,
	0x24, 0xf5, 0xd3, 0xef, 0xc7, 0xb0, 0x4e, 0xbe, 0x3a, 0x56, 0x5c, 0x43, 0x68, 0x8a, 0xd9, 0xa0,
	0xeb, 0x52, 0xfb, 0xd9, 0x58, 0x76, 0x4f, 0xdc, 0x25, 0x94, 0x32, 0xa2, 0x30, 0x3f, 0xe8, 0xb4,
	0xc8, 0x87, 0xe0, 0xf4, 0xbb, 0x6c, 0x7c, 0x48, 0x3e, 0x03, 0x8f, 0xc3, 0xf2, 0xe8, 0xec, 0xb1,
	0x27, 0x3e, 0x3e, 0xa7, 0x9f, 0x63, 0x63, 0x59, 0x42, 0x7c, 0x80, 0xfe, 0x26, 0xac, 0xb4, 0xba,
	0xfd, 0xd6, 0x87, 0xde, 0x9d, 0x0f, 0xc9, 0x2e, 0x16, 0x2c, 0xf3, 0x3d, 0x15, 0x26, 0xee, 0x7c,
	0x48, 0x76, 0xaa, 0xb0, 0xae, 0xc2, 0x2a, 0xff, 0x38, 0xbb, 0x7b, 0xd3, 0x6b, 0x75, 0x3f, 0x24,
	0x9f, 0x66, 0xaf, 0xb8, 0x5c, 0x9a, 0xe8, 0xde, 0x4c, 0xb4, 0xba, 0x1f, 0x06, 0x2f, 0xbb, 0xb5,
	0x97, 0xb8, 0xec, 0x50, 0xf0, 0xb2, 0xfb, 0xe1, 0x08, 0x2c, 0x49, 0xcd, 0xb6, 0x36, 0x60, 0x4d,
	0x3a, 0xc4, 0xeb, 0x06, 0xf4, 0x9a, 0x2e, 0x74, 0x4b, 0x2e, 0x4d, 0x9e, 0x20, 0x0b, 0x6b, 0xd5,
	0x3a, 0x9a, 0xc2, 0x97, 0xae, 0x2c, 0x2c, 0x55, 0xd1, 0xb4, 0xae, 0x98, 0x73, 0x59, 0xfa, 0x5b,
	0x59, 0x78, 0xbf, 0x5a, 0x47, 0xb3, 0xf1, 0x5f, 0x88, 0xc0, 0x9a, 0x76, 0x1e, 0xf8, 0x17, 0xb0,
	0xc1, 0x4a, 0x19, 0x00, 0x5a, 0x31, 0x03, 0x40, 0x2b, 0xc7, 0xbe, 0x75, 0x0d, 0x54, 0xd0, 0x60,
	0x40, 0x2b, 0x69, 0x00, 0x48, 0x45, 0x63, 0xff, 0x7e, 0x0a, 0x16, 0xc5, 0xee, 0x29, 0x78, 0x62,
	0x10, 0xdb, 0xad, 0x84, 0x4f, 0x0c, 0x42, 0x5f, 0xfc, 0x72, 0x17, 0xc5, 0xb6, 0x2b, 0xb1, 0xff,
	0x15, 0x81, 0x05, 0x2e, 0xff, 0x3f, 0x6d, 0x62, 0x50, 0x07, 0xe2, 0xfc, 0x4b, 0x0c, 0xc4, 0x85,
	0xc0, 0x40, 0x8c, 0xfd, 0xdc, 0x1c, 0xcc, 0x92, 0x4d, 0x62, 0xac, 0x24, 0xcc, 0xb4, 0xfc, 0x9e,
	0xdc, 0x0e, 0xd9, 0x7f, 0x86, 0xfc, 0x75, 0x89, 0x66, 0xec, 0xbf, 0xcc, 0xc2, 0x8c, 0xfd, 0xd1,
	0x3a, 0xce, 0xb4, 0x3a, 0xdc, 0x86, 0xc5, 0x13, 0xd1, 0x97, 0x74, 0x4d, 0x48, 0x04, 0x22, 0xc9,
	0x04, 0xbe, 0x52, 0xe5, 0x24, 0x13, 0xf8, 0x98, 0x5c, 0xe3, 0x79, 0x58, 0xea, 0xf4, 0x3a, 0x63,
	0x8f, 0x7e, 0xa4, 0x4e, 0xba, 0x6a, 0x75, 0xff, 0xda, 0xa4, 0x16, 0xec, 0xe6, 0x7b, 0x9d, 0x71,
	0x95, 0xa8, 0xbb, 0xc4, 0x36, 0x41, 0x6d, 0xad, 0x3a, 0xac, 0x89, 0x7e, 0x65, 0xee, 0xe6, 0xc3,
	0x6e, 0xff, 0x92, 0x3b, 0x97, 0xd9, 0x30, 0x97, 0xc2, 0x07, 0x77, 0xbb, 0x0f, 0xd3, 0x83, 0x4e,
	0x8b, 0xed, 0x09, 0xb4, 0x33, 0xd1, 0x55, 0xa5, 0xd3, 0x72, 0xb1, 0x72, 0xec, 0xdf, 0x46, 0x60,
	0xba, 0xd2, 0x69, 0x59, 0x15, 0x9e, 0x5c, 0x9d, 0xd5, 0x87, 0x7e, 0x3e, 0xfb, 0xee, 0x8b, 0x9c,
	0xd0, 0xaf, 0x67, 0x59, 0x85, 0x58, 0x7a, 0x75, 0x56, 0x1b, 0x69, 0x58, 0xd1, 0x2c, 0xe8, 0x7c,
	0x58, 0xc5, 0xeb, 0x2c, 0xef, 0x3a, 0x35, 0xb3, 0x36, 0x01, 0x49, 0x87, 0x5e, 0x36, 0x95, 0x2f,
	0xd0, 0x29, 0x40, 0x96, 0x56, 0xeb, 0xb6, 0xed, 0x54, 0xab, 0x74, 0x0a, 0x90, 0x01, 0xbe, 0x8c,
	0x98, 0x8a, 0x7f, 0x00, 0xe0, 0x77, 0x38, 0x9e, 0x84, 0xfc, 0x23, 0xee, 0xf4, 0x3c, 0x58, 0x92,
	0xd0, 0xf7, 0xa9, 0xca, 0x7d, 0x97, 0x5d, 0x58, 0x55, 0x3b, 0xdd, 0xba, 0x02, 0x17, 0x55, 0x89,
	0x9a, 0xa4, 0x85, 0xbc, 0x14, 0xa6, 0x29, 0x48, 0x70, 0x84, 0xec, 0x06, 0xa0, 0xdb, 0xb3, 0xd2,
	0x62, 0xbf, 0x3c, 0x05, 0xf3, 0x6c, 0x37, 0x25, 0xeb, 0xe3, 0x30, 0xcf, 0xb6, 0x5e, 0x62, 0xd7,
	0xca, 0x4e, 0xe8, 0xce, 0x4b, 0xec, 0xbf, 0x3b, 0xcf, 0x36, 0x60, 0x8a, 0xfd, 0x61, 0x04, 0xe6,
	0xa8, 0x6c, 0xe2, 0x45, 0x13, 0xc8, 0x45, 0x3f, 0x35, 0x71, 0x5f, 0x9c, 0x69, 0xf9, 0xd2, 0xda,
	0x86, 0xc5, 0x96, 0x7e, 0x19, 0xb5, 0xc4, 0x65, 0xb4, 0x03, 0x4b, 0xa7, 0xed, 0xd3, 0xfe, 0xf0,
	0xb9, 0x3c, 0xe5, 0x30, 0x11, 0x9d, 0x73, 0x7c, 0x8d, 0xb3, 0x51, 0xfb, 0x90, 0xef, 0x98, 0xc3,
	0x34, 0xb0, 0x48, 0xd2, 0x38, 0x1a, 0xb6, 0xf9, 0x92, 0x84, 0x6b, 0x60, 0x51, 0xec, 0xeb, 0x0f,
	0x60, 0x96, 0x6c, 0x07, 0x85, 0x67, 0x15, 0x72, 0xd7, 0x0d, 0x9d, 0x55, 0x88, 0x1a, 0xf9, 0xeb,
	0x12, 0xcd, 0xd8, 0x8f, 0x3c, 0x80, 0x19, 0x7c, 0xf8, 0x11, 0x66, 0x95, 0xbc, 0xba, 0x55, 0xcc,
	0x74, 0xd8, 0x3c, 0xe0, 0x97, 0x19, 0xba, 0x2d, 0xcc, 0x01, 0x9b, 0xa0, 0x68, 0x72, 0x81, 0xd7,
	0x27, 0xfa, 0x20, 0x0b, 0x17, 0x3a, 0x87, 0xd9, 0xf2, 0x1c, 0x36, 0x4b, 0x6c, 0xdf, 0x9a, 0x68,
	0x7b, 0xb7, 0x39, 0x3c, 0x24, 0xf6, 0xd2, 0x54, 0x57, 0x86, 0x95, 0x6e, 0xbf, 0x3f, 0x78, 0xdc,
	0x6c, 0x7d, 0x48, 0x53, 0xb9, 0xd0, 0x09, 0xed, 0xed, 0x89, 0x8e, 0x0a, 0xcc, 0x82, 0x66, 0x71,
	0xe1, 0xf6, 0x34, 0x8b, 0xcb, 0x27, 0x61, 0xab, 0xdd, 0x6b, 0x3e, 0xee, 0xb6, 0xbd, 0xf1, 0xb0,
	0xd9, 0x1b, 0x9d, 0x76, 0x46, 0xa3, 0x4e, 0xbf, 0xe7, 0x1d, 0xb6, 0xbb, 0xcd, 0xe7, 0xec, 0xf4,
	0x31, 0x85, 0x84, 0xac, 0x90, 0x20, 0x0a, 0x78, 0x95, 0x45, 0x1e, 0x4c, 0xf8, 0x94, 0x41, 0xb7,
	0x41, 0x22, 0xb2, 0x04, 0xbf, 0x1d, 0x5d, 0x85, 0x55, 0xa2, 0x73, 0xd8, 0x7f, 0xda, 0x93, 0x9f,
	0x72, 0x88, 0x34, 0x81, 0xa5, 0x54, 0x2f, 0x8f, 0x87, 0xce, 0x61, 0xe7, 0xec, 0x54, 0x5e, 0x29,
	0x4e, 0x3e, 0x43, 0x45, 0xa2, 0x4f, 0x3f, 0xe6, 0xa7, 0xb6, 0xb4, 0x97, 0x6e, 0x00, 0xea, 0x0f,
	0xc6, 0x74, 0x4f, 0xac, 0xef, 0x3a, 0xeb, 0x0c, 0x06, 0xed, 0x43, 0xb2, 0x3e, 0x5c, 0x70, 0xb9,
	0x3c, 0xc1, 0xe5, 0xd6, 0x2e, 0x58, 0x62, 0x03, 0xad, 0xc7, 0xcd, 0xde, 0xe1, 0xd3, 0xce, 0xe1,
	0xf8, 0x84, 0x2c, 0x17, 0x67, 0x5c, 0x81, 0x24, 0x04, 0x62, 0xa5, 0x60, 0xa1, 0x3d, 0x3e, 0x69,
	0x0f, 0x7b, 0xed, 0x31, 0xdb, 0xb1, 0x6c, 0xf2, 0x59, 0x74, 0x98, 0xb2, 0x2b, 0xcc, 0xac, 0x3b,
	0x30, 0xdb, 0x6d, 0x8e, 0xda, 0x43, 0xb6, 0x45, 0x59, 0x7c, 0xf2, 0xc9, 0xc3, 0x9a, 0x2e, 0x35,
	0xb0, 0x5c, 0x58, 0xe5, 0x0d, 0xa3, 0xfb, 0x23, 0xb1, 0x2d, 0xc9, 0x6e, 0x4c, 0x74, 0x51, 0xa6,
	0x26, 0x45, 0x62, 0xe1, 0x72, 0x0f, 0x09, 0xea, 0xc1, 0xfa, 0x76, 0xb0, 0x94, 0x53, 0x4f, 0x52,
	0xe7, 0xb0, 0x4d, 0xca, 0x76, 0x27, 0x0f, 0x6e, 0xc9, 0x2c, 0x85, 0xad, 0x5c, 0xc5, 0x53, 0x82,
	0x78, 0x8a, 0x7d, 0xfd, 0x0a, 0x2c, 0xf0, 0x4e, 0xb0, 0x52, 0x30, 0x3b, 0x1a, 0xb4, 0xdb, 0x87,
	0xec, 0x4e, 0xf5, 0xce, 0x4b, 0x75, 0xdd, 0x6e, 0x15, 0x9b, 0xb8, 0xd4, 0xd2, 0xca, 0xc0, 0xdc,
	0xe1, 0xd9, 0xa0, 0xcb, 0x2e, 0x70, 0xe3, 0xdd, 0xce, 0xe4, 0x23, 0x43, 0x6c, 0x5c, 0x66, 0x6b,
	0x55, 0x61, 0xa9, 0xd7, 0x3e, 0xee, 0x8f, 0x3b, 0x4d, 0x32, 0x89, 0x4c, 0x87, 0x65, 0x5b, 0x32,
	0xb9, 0x2a, 0xf9, 0x86, 0xae, 0xec, 0xc5, 0x6a, 0x02, 0x92, 0x0e, 0xe9, 0x05, 0x1a, 0xba, 0x0d,
	0xc8, 0x0b, 0x3c, 0xd3, 0x5c, 0x4e, 0x92, 0x3b, 0x7a, 0xbd, 0x5e, 0x85, 0x55, 0x72, 0x21, 0x9d,
	0xf4, 0xbb, 0x87, 0xf4, 0x6a, 0xa2, 0xf3, 0x34, 0x91, 0x26, 0xb0, 0x94, 0x5e, 0x4d, 0x71, 0x58,
	0x3e, 0x1b, 0x48, 0x5a, 0x74, 0xae, 0x5e, 0x3e, 0x1b, 0x48, 0x3a, 0x65, 0x00, 0x72, 0xbe, 0x68,
	0x45, 0xe9, 0x5a, 0xe6, 0xbd, 0x97, 0xab, 0x28, 0x39, 0xf5, 0xa4, 0x8a, 0xd4, 0x05, 0xad, 0x5c,
	0x0b, 0xd6, 0xc9, 0x39, 0xf2, 0x46, 0x4f, 0x3b, 0xe3, 0xd6, 0x09, 0xf5, 0xbb, 0xf0, 0x2a, 0x1d,
	0x40, 0xce, 0x74, 0x95, 0x58, 0x13, 0xef, 0xd4, 0x5f, 0x82, 0xfa, 0xa3, 0x85, 0x14, 0x60, 0xf1,
	0x71, 0x67, 0xec, 0xb5, 0x87, 0xc3, 0xfe, 0x90, 0x3d, 0xaa, 0xee, 0xbe, 0x9c, 0xf3, 0x74, 0x67,
	0xec, 0x60, 0x2b, 0x17, 0x3b, 0x48, 0x10, 0x07, 0xb8, 0x9f, 0xc6, 0xc3, 0xce, 0xf1, 0x31, 0x5f,
	0x2b, 0xd3, 0x74, 0x60, 0x5c, 0x46, 0xfb, 0xa9, 0x05, 0xeb, 0xb2, 0x0e, 0x9d, 0x9f, 0x96, 0x5e,
	0xa5, 0x59, 0x35, 0x6a, 0x5e, 0xeb, 0x9c, 0xb2, 0x47, 0x59, 0xd9, 0xbf, 0x78, 0x5c, 0x1e, 0x3f,
	0xf3, 0x68, 0x62, 0xb3, 0xd6, 0xd1, 0x31, 0x2d, 0x64, 0x39, 0xec, 0x71, 0xd9, 0x58, 0xc8, 0xb3,
	0x0a, 0xb6, 0xb6, 0x8f, 0x8e, 0x59, 0x19, 0xcf, 0x12, 0x34, 0x2d, 0x5a, 0xeb, 0xe8, 0x98, 0x96,
	0x71, 0x0b, 0xce, 0x89, 0x32, 0xc6, 0xcd, 0xe1, 0x71, 0x7b, 0xec, 0x3d, 0x69, 0x76, 0xcf, 0xda,
	0x64, 0x22, 0x9b, 0x75, 0xcf, 0x09, 0x0b, 0x0a, 0x26, 0x08, 0x68, 0xe5, 0x61, 0xe1, 0xa8, 0xdd,
	0x92, 0xb3, 0x92, 0x25, 0x5e, 0xae, 0x42, 0xd9, 0x76, 0x8b, 0x9c, 0x44, 0x6c, 0xce, 0x33, 0x91,
	0x2d, 0xb7, 0xc7, 0x27, 0x9e, 0x70, 0xb7, 0x16, 0x16, 0x69, 0x30, 0xb9, 0x73, 0xc6, 0x27, 0xdc,
	0x23, 0xf6, 0x92, 0x10, 0x5e, 0x6f, 0x00, 0xc2, 0x1e, 0x07, 0xc3, 0xb6, 0xd7, 0xec, 0x9e, 0x7a,
	0xe3, 0x93, 0x61, 0x8b, 0x67, 0x22, 0xc3, 0x3a, 0x83, 0x61, 0x3b, 0xd1, 0xec, 0x9e, 0x26, 0xb0,
	0xdc, 0xa0, 0x3b, 0x20, 0xa9, 0xc8, 0x82, 0xba, 0x03, 0xeb, 0x5d, 0x58, 0xe7, 0xba, 0xc3, 0xd1,
	0x19, 0x73, 0x4c, 0x93, 0x91, 0xad, 0x73, 0x65, 0x0c, 0x50, 0xcf, 0x06, 0xed, 0x01, 0x4b, 0x47,
	0x16, 0xd0, 0x1e, 0xe0, 0x85, 0xd2, 0x77, 0x9e, 0x9d, 0x3e, 0xee, 0x7b, 0x47, 0xc3, 0xe6, 0x29,
	0xdd, 0xf4, 0x6d, 0xc5, 0xa5, 0xa2, 0x04, 0x11, 0x59, 0x39, 0x98, 0x3f, 0xea, 0xf6, 0x9f, 0xb6,
	0xc6, 0x5d, 0xb2, 0x61, 0xdb, 0xcb, 0xf7, 0x3a, 0x35, 0x72, 0xb9, 0xb5, 0xf5, 0x00, 0x56, 0x8e,
	0x8f, 0x3c, 0x7c, 0x7f, 0x6c, 0xd2, 0x51, 0x75, 0xfe, 0x55, 0x26, 0xbb, 0xdc, 0x11, 0xbe, 0xcb,
	0x36, 0xc9, 0x90, 0x5a, 0x39, 0x3e, 0x4a, 0x10, 0x3f, 0x74, 0x38, 0x65, 0x61, 0x9e, 0x4c, 0x30,
	0x67, 0x83, 0xe8, 0x85, 0x57, 0x99, 0x8a, 0xef, 0xf6, 0xbb, 0x87, 0xf5, 0x81, 0x4b, 0x8c, 0x13,
	0x67, 0x03, 0x7c, 0x53, 0x18, 0x3f, 0xeb, 0x0c, 0x8e, 0xa3, 0xd1, 0x57, 0xb9, 0x29, 0xd4, 0xb0,
	0x89, 0x4b, 0x2d, 0xad, 0x3a, 0x2c, 0xb3, 0x39, 0x87, 0xde, 0x5e, 0xb6, 0x5e, 0xa5, 0x89, 0x74,
	0xbe, 0xa1, 0x37, 0x19, 0xe6, 0x26, 0x41, 0xef, 0x35, 0x4d, 0x40, 0x83, 0x61, 0xff, 0xb4, 0x33,
	0x6a, 0x9d, 0xf5, 0xcf, 0xd8, 0x3c, 0x19, 0x7b, 0x95, 0x0b, 0xbf, 0xe2, 0x5b, 0xd3, 0x09, 0x5d,
	0x72, 0x47, 0x07, 0x6f, 0x03, 0x56, 0x8e, 0xba, 0xed, 0x67, 0x83, 0x93, 0xe7, 0xac, 0xea, 0x17,
	0x89, 0xff, 0xfd, 0x97, 0x3d, 0xd9, 0xc4, 0x94, 0xd6, 0x9d, 0x3b, 0xa2, 0x95, 0x8f, 0xff, 0xde,
	0x0c, 0xcc, 0x12, 0xc0, 0x5a, 0x83, 0x25, 0xf2, 0x83, 0xbc, 0x8c, 0x51, 0x44, 0xaf, 0x59, 0x08,
	0x96, 0x7d, 0x41, 0xb2, 0x88, 0x22, 0xd6, 0x3a, 0xac, 0x48, 0x92, 0x64, 0x11, 0x4d, 0xc9, 0xa2,
	0xfd, 0x03, 0x2c, 0x9a, 0x55, 0x1d, 0xe5, 0xd0, 0x9c, 0x2c, 0xb8, 0x95, 0xcc, 0xa1, 0x79, 0xcd,
	0x73, 0x0e, 0x2d, 0x58, 0xab, 0x00, 0x54, 0x92, 0xaa, 0xd7, 0xca, 0x74, 0x3f, 0x24, 0xa1, 0x91,
	0x43, 0x20, 0x1f, 0xef, 0xe7, 0xd0, 0x92, 0x7c, 0x7c, 0x33, 0x87, 0x96, 0xe5, 0xe3, 0x5b, 0x39,
	0xb4, 0x42, 0x02, 0x5a, 0xdc, 0x1e, 0xd7, 0x2c, 0x87, 0x56, 0x95, 0xaa, 0x36, 0xbc, 0x83, 0x1c,
	0x5a, 0x93, 0xd5, 0x6e, 0x36, 0xbc, 0xf7, 0x0f, 0x72, 0x08, 0xc9, 0xae, 0x0e, 0x72, 0x68, 0x5d,
	0x69, 0xce, 0x41, 0x0e, 0x59, 0xb2, 0x60, 0x3f, 0x99, 0x43, 0x1b, 0x8a, 0xe0, 0x20, 0x87, 0x36,
	0x65, 0xc1, 0xcd, 0x64, 0x0e, 0x9d, 0x53, 0x04, 0x07, 0x39, 0x74, 0x5e, 0xe9, 0x92, 0x83, 0x1c,
	0x8a, 0xca, 0x82, 0x83, 0x64, 0x0e, 0x6d, 0x29, 0x82, 0x83, 0x1c, 0x8a, 0xc9, 0x82, 0xdb, 0xc9,
	0x1c, 0xba, 0xa8, 0x08, 0x0e, 0x72, 0x68, 0x5b, 0x16, 0xbc, 0x9f, 0xcc, 0xa1, 0x4b, 0x8a, 0xe0,
	0x20, 0x87, 0x2e, 0xcb, 0x82, 0x3b, 0xc9, 0x1c, 0xba, 0xa2, 0x08, 0x0e, 0x72, 0x68, 0x47, 0x16,
	0x7c, 0x2c, 0x99, 0x43, 0xaf, 0x2b, 0x82, 0x83, 0x1c, 0x8a, 0xcb, 0xfd, 0x93, 0xcc, 0xa1, 0x37,
	0xe4, 0x93, 0x79, 0x0b, 0x9f, 0xcc, 0x37, 0xe3, 0x9f, 0x80, 0x39, 0xba, 0x90, 0xc2, 0xc6, 0xf4,
	0x17, 0x3d, 0xaf, 0xaf, 0x49, 0x82, 0xbb, 0xa9, 0x42, 0x96, 0x12, 0x02, 0x4c, 0x90, 0xad, 0x17,
	0x0a, 0x68, 0x2a, 0xfe, 0x08, 0x96, 0xa4, 0x05, 0x8e, 0x15, 0x85, 0x4d, 0xe9, 0xd0, 0xcb, 0xe4,
	0xab, 0xa9, 0x74, 0x81, 0x3c, 0x8d, 0x93, 0x28, 0x9f, 0x8f, 0x38, 0x25, 0x0a, 0x90, 0x0f, 0xd2,
	0x15, 0x13, 0x87, 0xa6, 0x88, 0xfd, 0xe3, 0x48, 0xfc, 0x73, 0xb0, 0xa6, 0x2d, 0x9e, 0xac, 0x2d,
	0x38, 0xa7, 0x89, 0xd8, 0x0e, 0x78, 0x2c, 0x57, 0x9f, 0x0a, 0x95, 0x52, 0xc4, 0xff, 0xa6, 0x2e,
	0x27, 0xad, 0x9b, 0xb2, 0x62, 0x70, 0x5e, 0x47, 0xf8, 0x8e, 0x78, 0xf1, 0xfb, 0xb0, 0x28, 0xd6,
	0x43, 0xb8, 0xee, 0xe2, 0xc0, 0x2b, 0xa4, 0x4a, 0x0d, 0xaf, 0x58, 0xce, 0x38, 0xb4, 0x51, 0x3e,
	0xf0, 0x40, 0x00, 0x11, 0x15, 0x28, 0xd7, 0x38, 0x30, 0x15, 0xcf, 0xc1, 0x9a, 0xb6, 0x1e, 0xc2,
	0xd5, 0xd0, 0x44, 0x5e, 0x31, 0x55, 0xaa, 0xa7, 0x0a, 0xe8, 0x35, 0x5c, 0x79, 0x1d, 0x23, 0x95,
	0x8f, 0xc4, 0xf7, 0x60, 0x81, 0xaf, 0x7d, 0xf0, 0x39, 0xe5, 0xbf, 0x3d, 0xdb, 0xb5, 0x69, 0x2c,
	0x59, 0x48, 0x2a, 0xae, 0x93, 0x75, 0x6c, 0x14, 0x89, 0x7f, 0x06, 0xd6, 0xb4, 0x45, 0x0b, 0x2e,
	0x5b, 0x13, 0x79, 0x55, 0xc7, 0x2e, 0x97, 0x32, 0xf4, 0x5b, 0x4a, 0x1d, 0xc3, 0x97, 0x50, 0xb2,
	0x58, 0x45, 0x91, 0xf8, 0x7d, 0x58, 0x55, 0xd7, 0x26, 0xd6, 0x9b, 0xb0, 0xa3, 0x4a, 0xbc, 0x5a,
	0xa3, 0x41, 0x5f, 0xd6, 0x6a, 0x78, 0xb5, 0x94, 0x9b, 0x73, 0x6a, 0xe8, 0x35, 0xeb, 0x32, 0xc4,
	0x34, 0xad, 0x54, 0xad, 0xe6, 0x94, 0xea, 0xa9, 0x5a, 0xbe, 0x5c, 0x42, 0x91, 0xf8, 0x57, 0x22,
	0x30, 0xcf, 0x56, 0x04, 0xb8, 0x59, 0xec, 0xa7, 0x57, 0x2a, 0x97, 0x1c, 0x9a, 0x60, 0x98, 0x4b,
	0xaa, 0xb5, 0x54, 0x29, 0x93, 0x72, 0xf1, 0x08, 0x92, 0xa4, 0x4e, 0xe9, 0x6e, 0xaa, 0x64, 0x93,
	0x2d, 0x0f, 0x63, 0x70, 0x5e, 0x97, 0x36, 0xbc, 0x7c, 0xc3, 0x7b, 0x9f, 0xa6, 0x19, 0x36, 0x62,
	0xb7, 0xd0, 0x8c, 0x75, 0x0e, 0xd6, 0x39, 0x56, 0xb8, 0x9b, 0xaa, 0x17, 0x1a, 0x5e, 0x35, 0x83,
	0x66, 0xe3, 0x2e, 0x80, 0xbf, 0x58, 0x21, 0x39, 0x5f, 0xc4, 0x11, 0x1f, 0xe6, 0x74, 0x40, 0x48,
	0x72, 0xa9, 0x8e, 0x1b, 0xb0, 0x26, 0x01, 0xa4, 0x39, 0x53, 0xf1, 0x2f, 0xe3, 0xc6, 0xb2, 0x3b,
	0xfa, 0x16, 0x9c, 0x63, 0x3f, 0xbd, 0x54, 0xa1, 0xd0, 0x90, 0x2f, 0x9d, 0x6d, 0x88, 0x72, 0xc8,
	0x75, 0x6c, 0x27, 0x7f, 0xdf, 0x69, 0x48, 0xd7, 0x8f, 0x64, 0x58, 0x75, 0x4a, 0x19, 0x1f, 0x22,
	0x7b, 0x6d, 0x2a, 0x3e, 0x39, 0x32, 0x8d, 0xcf, 0x2d, 0x47, 0xd8, 0x05, 0xd7, 0xf0, 0xec, 0x72,
	0x29, 0x9b, 0xcf, 0xa1, 0xc5, 0xf8, 0x00, 0x96, 0xa4, 0x15, 0x02, 0xee, 0x5e, 0xe9, 0x90, 0x4f,
	0x0d, 0x5b, 0x70, 0x4e, 0x96, 0x66, 0xf3, 0x69, 0xc7, 0xc5, 0x77, 0x19, 0x7a, 0xc5, 0x99, 0x20,
	0xca, 0x0d, 0xc8, 0x88, 0x5d, 0xae, 0x54, 0xc8, 0xd5, 0xb6, 0x07, 0x73, 0x74, 0x01, 0x81, 0xfb,
	0x89, 0xfe, 0x92, 0x3b, 0xc0, 0x82, 0x55, 0x26, 0x14, 0xcd, 0x8e, 0x27, 0x61, 0x96, 0xac, 0x16,
	0xf0, 0x28, 0x21, 0x3f, 0xbc, 0xea, 0x5d, 0x37, 0x5f, 0xba, 0x47, 0xb7, 0x3c, 0xa5, 0x92, 0x52,
	0xb9, 0xd4, 0xe0, 0xe2, 0x48, 0xfc, 0x18, 0x96, 0xa4, 0x55, 0x01, 0x6e, 0x96, 0x74, 0xe8, 0xd5,
	0x4b, 0x99, 0x32, 0x1d, 0x61, 0xb2, 0x94, 0xdc, 0xcf, 0x22, 0xd8, 0xa3, 0x26, 0x4d, 0xe2, 0xdb,
	0x5c, 0x40, 0x8c, 0xef, 0x27, 0x5b, 0xf1, 0x34, 0xac, 0x69, 0x6b, 0x04, 0x3c, 0x2e, 0x34, 0x91,
	0x57, 0xce, 0x66, 0xe9, 0xac, 0x15, 0x00, 0xf0, 0x75, 0x70, 0x04, 0xcb, 0xf2, 0x3a, 0xc0, 0x7a,
	0x03, 0xae, 0xe4, 0x4b, 0xf7, 0x53, 0x85, 0x7c, 0xc6, 0x73, 0x4a, 0xf5, 0xa2, 0x77, 0x3f, 0x55,
	0xa8, 0x3b, 0x9e, 0xac, 0x42, 0x47, 0x9f, 0x2c, 0xa1, 0x37, 0x27, 0x07, 0xed, 0xd3, 0x81, 0xa0,
	0x00, 0xf8, 0x46, 0xee, 0xa0, 0xc3, 0xd8, 0x7f, 0x9f, 0x82, 0x59, 0x12, 0x8e, 0xb0, 0x3e, 0x0b,
	0xa8, 0x79, 0x36, 0xee, 0x7b, 0xa3, 0x93, 0xb3, 0xb1, 0x47, 0xc3, 0x43, 0xec, 0x89, 0x7e, 0xef,
	0xc5, 0xc1, 0x8c, 0xdd, 0xd4, 0xd9, 0xb8, 0x5f, 0x3d, 0x39, 0x1b, 0x3b, 0xc4, 0xd0, 0x25, 0xae,
	0x12, 0xd8, 0x55, 0x82, 0xba, 0xb2, 0xb6, 0x61, 0xb1, 0x3f, 0x68, 0xf7, 0xfc, 0x30, 0xf4, 0x8a,
	0x4b, 0x04, 0x82, 0xde, 0x6f, 0x75, 0xfb, 0xa3, 0x36, 0x85, 0xa7, 0x59, 0x9e, 0x65, 0x2c, 0xa1,
	0x78, 0x0a, 0xe6, 0x58, 0x38, 0x7c, 0xe6, 0x65, 0x82, 0x63, 0xa4, 0x4a, 0x2c, 0x16, 0xce, 0x0c,
	0xe3, 0x39, 0x58, 0x55, 0x2b, 0x89, 0x67, 0x01, 0x55, 0x22, 0x5d, 0xc8, 0x5b, 0x70, 0x4e, 0xc3,
	0xe8, 0xd0, 0x43, 0x11, 0x7c, 0xbf, 0x64, 0x21, 0xe8, 0x15, 0x58, 0x64, 0xa1, 0xe3, 0x32, 0x63,
	0xcf, 0xf9, 0x61, 0x16, 0xdf, 0x2c, 0xf1, 0x72, 0x45, 0x1c, 0x93, 0x04, 0xe7, 0x53, 0xb1, 0xff,
	0x16, 0x85, 0x15, 0x25, 0x76, 0x23, 0x6d, 0x1b, 0x4e, 0x36, 0x04, 0x8d, 0x28, 0xdb, 0x86, 0x93,
	0x7d, 0x41, 0xb7, 0x61, 0x91, 0x69, 0x0c, 0xf8, 0x3e, 0xa6, 0x4c, 0x90, 0x18, 0xf4, 0xac, 0x18,
	0x2c, 0xd0, 0x27, 0xfe, 0xc7, 0x4f, 0x19, 0xbf, 0x42, 0x8f, 0x13, 0x8f, 0x9f, 0x5a, 0x35, 0x25,
	0x1a, 0x30, 0xf3, 0x12, 0x4f, 0x9e, 0x4a, 0xdd, 0x42, 0x42, 0x02, 0x31, 0x58, 0x38, 0xe9, 0x8f,
	0xbd, 0x41, 0xf7, 0xec, 0x98, 0x44, 0x2a, 0x16, 0x5c, 0x7c, 0x9c, 0xc0, 0xc7, 0x96, 0xcd, 0x02,
	0xa9, 0x73, 0x2f, 0x11, 0x79, 0xd0, 0xca, 0xf2, 0xc3, 0xaa, 0x35, 0x80, 0xa3, 0xce, 0x63, 0x9e,
	0x5d, 0x76, 0xfe, 0x95, 0xab, 0x9d, 0xc5, 0xc6, 0xc4, 0x1f, 0xf5, 0x23, 0xd8, 0xb9, 0xa7, 0xcd,
	0x27, 0xed, 0x6e, 0xbb, 0x77, 0x3c, 0x3e, 0x61, 0x61, 0x4d, 0x49, 0x42, 0x9e, 0xa4, 0x95, 0x78,
	0x69, 0x67, 0x34, 0x6e, 0xf6, 0x5a, 0x3c, 0xb6, 0x79, 0x4e, 0x8d, 0x95, 0x32, 0x90, 0x74, 0x3f,
	0x7b, 0xfe, 0x66, 0xaf, 0x6f, 0x2c, 0xf0, 0x47, 0x6e, 0x8c, 0x0d, 0x39, 0x46, 0x5f, 0xd8, 0x58,
	0x18, 0x72, 0x6c, 0x17, 0xac, 0xe1, 0x33, 0xef, 0xa4, 0x73, 0x7c, 0xe2, 0x3d, 0x6d, 0x0e, 0x7b,
	0x4c, 0x6b, 0x99, 0x6e, 0xf6, 0x3a, 0x7c, 0x96, 0xc0, 0x48, 0x02, 0x23, 0x4c, 0xff, 0x5d, 0x58,
	0x1f, 0x3e, 0xf3, 0xba, 0xfd, 0xa7, 0xb2, 0x3a, 0x25, 0xb7, 0xd7, 0x87, 0xcf, 0x12, 0xdd, 0xfe,
	0x53, 0x59, 0x7b, 0x17, 0xac, 0x71, 0xd0, 0x3b, 0xdd, 0xd9, 0xdd, 0x1a, 0x1b, 0xbd, 0x8f, 0x03,
	0xde, 0x29, 0xd9, 0xbd, 0x3e, 0x0e, 0x78, 0x4f, 0xc2, 0x06, 0xaf, 0x3b, 0x4d, 0xd6, 0x4d, 0xf5,
	0xe9, 0x2e, 0xef, 0x1b, 0xbc, 0xf2, 0x34, 0x5f, 0xb7, 0xdc, 0x5a, 0xec, 0x5f, 0x36, 0x58, 0x17,
	0xad, 0xc5, 0x05, 0xc8, 0xfa, 0x49, 0xd8, 0x18, 0x1b, 0x4a, 0xb0, 0x68, 0x09, 0x63, 0x73, 0x09,
	0xe3, 0x60, 0x09, 0x1b, 0xa2, 0xc5, 0x7a, 0x09, 0x05, 0x98, 0x1f, 0x9f, 0xd1, 0x59, 0x6e, 0xf3,
	0x25, 0x9e, 0xce, 0xb4, 0xb1, 0x4a, 0x2d, 0x5d, 0xee, 0xc2, 0xda, 0x87, 0xcd, 0xd6, 0xc9, 0xb0,
	0x7f, 0xda, 0x1c, 0x77, 0x5a, 0x78, 0xe0, 0x0c, 0xd8, 0xfe, 0xf8, 0x74, 0x5b, 0x76, 0x1f, 0x4b,
	0xf8, 0x98, 0x95, 0x86, 0xed, 0x41, 0xbf, 0xdb, 0x1c, 0x76, 0x3e, 0xe7, 0x87, 0x16, 0x65, 0x5b,
	0xba, 0x6b, 0xbb, 0xa2, 0x43, 0xae, 0x3f, 0xd9, 0xc7, 0x77, 0xc0, 0xea, 0x61, 0x67, 0xd8, 0x6e,
	0x11, 0x07, 0xe4, 0x6a, 0xa1, 0x4f, 0xed, 0x77, 0x5e, 0xa1, 0x31, 0x19, 0xee, 0x80, 0x66, 0x61,
	0x16, 0xfe, 0xe8, 0x55, 0x73, 0x15, 0x56, 0xc7, 0xfd, 0x71, 0xb3, 0xeb, 0x89, 0x91, 0x1c, 0xa5,
	0xa1, 0x7e, 0x22, 0x4d, 0xc8, 0xe3, 0x59, 0xe8, 0x89, 0x71, 0x47, 0x9e, 0xd9, 0x71, 0xff, 0x73,
	0x5d, 0x31, 0xee, 0xc8, 0x88, 0xe3, 0xfa, 0x7c, 0xdc, 0x91, 0xe7, 0x70, 0x3c, 0xe2, 0xb8, 0x3a,
	0x1f, 0x77, 0x64, 0x3c, 0x28, 0xde, 0x69, 0x44, 0xfb, 0x22, 0x1b, 0x0f, 0x8a, 0x7b, 0x02, 0x29,
	0xf5, 0x11, 0xa3, 0x22, 0xba, 0xad, 0xd5, 0x47, 0x8c, 0x0a, 0xcb, 0x82, 0x99, 0xc7, 0x9d, 0xe6,
	0x28, 0x7a, 0x89, 0x84, 0xcd, 0xc8, 0x6f, 0x2b, 0x0a, 0xf3, 0x4f, 0xfa, 0xdd, 0x71, 0xf3, 0xb8,
	0x1d, 0xbd, 0x4c, 0xc4, 0xfc, 0x10, 0x4f, 0xda, 0xe3, 0xf6, 0xe9, 0xa0, 0x3d, 0x6c, 0x8e, 0xcf,
	0x86, 0xed, 0xe8, 0x15, 0x82, 0xca, 0x22, 0x3c, 0xdb, 0xb0, 0x49, 0xbb, 0x7f, 0xd6, 0x89, 0xee,
	0xd0, 0xd9, 0x86, 0xcd, 0xda, 0xfd, 0xb3, 0x8e, 0x84, 0x0f, 0xdb, 0x4f, 0xa2, 0xaf, 0x2b, 0xf8,
	0xb0, 0xfd, 0x04, 0x97, 0x7d, 0x3c, 0xe8, 0xf7, 0xbc, 0x51, 0x2f, 0x1a, 0xa7, 0xa4, 0x2d, 0x3e,
	0x4c, 0x8c, 0x7a, 0x56, 0x19, 0x16, 0x5a, 0x27, 0xcd, 0x5e, 0xaf, 0xdd, 0x1d, 0x45, 0xdf, 0x20,
	0x21, 0xfd, 0x9b, 0xaf, 0x70, 0xb6, 0x6d, 0x66, 0xea, 0x0a, 0x27, 0xb1, 0xdf, 0x88, 0x90, 0x1d,
	0x29, 0xc8, 0x81, 0x55, 0x27, 0x3b, 0x52, 0xe0, 0xdf, 0x8c, 0xc4, 0xfb, 0xc4, 0x47, 0x70, 0xce,
	0x7f, 0xb8, 0xdc, 0x57, 0xec, 0x21, 0xd9, 0xa9, 0x02, 0xff, 0xb4, 0xce, 0xc3, 0x1c, 0xa3, 0x39,
	0x69, 0x56, 0x7a, 0x76, 0xa4, 0xcc, 0xa4, 0x53, 0x13, 0x66, 0xd2, 0x69, 0x75, 0x26, 0x8d, 0x9f,
	0xc9, 0x8f, 0x6a, 0x78, 0xed, 0x27, 0x1e, 0xbc, 0xfc, 0x17, 0xdb, 0xc8, 0x73, 0x0e, 0x17, 0xd3,
	0x34, 0xee, 0xe2, 0x59, 0x6d, 0x0b, 0xce, 0xf9, 0x58, 0xb1, 0x5e, 0xa8, 0xe5, 0xf9, 0xd3, 0x9a,
	0x6a, 0x46, 0x57, 0xab, 0x0c, 0x9b, 0x8e, 0x7f, 0x71, 0x1a, 0x66, 0xc8, 0xfa, 0x18, 0x2f, 0x40,
	0xd5, 0x74, 0x24, 0x4b, 0x30, 0x4f, 0x1f, 0xa5, 0x6c, 0x14, 0xc1, 0x8b, 0x04, 0xfa, 0xb2, 0x4b,
	0x3a, 0x6f, 0xa3, 0x29, 0x6b, 0x19, 0x16, 0x58, 0x7e, 0x90, 0x0a, 0x7d, 0x7d, 0x8e, 0x7e, 0x1c,
	0x84, 0x0f, 0x67, 0xf0, 0xe3, 0xb5, 0xbc, 0x30, 0x9e, 0x15, 0xda, 0x8d, 0x6c, 0x85, 0x46, 0x66,
	0xe8, 0x91, 0x53, 0xaa, 0xa4, 0xee, 0xd1, 0xdd, 0xa9, 0xe9, 0x93, 0x96, 0x9b, 0x2a, 0x55, 0x2b,
	0xe5, 0x52, 0xc6, 0x71, 0xd1, 0x82, 0x30, 0xb2, 0xb3, 0x15, 0xb4, 0xe8, 0x17, 0x58, 0x4c, 0x23,
	0xc0, 0x6b, 0x12, 0x5e, 0x7c, 0xc3, 0xab, 0x14, 0xea, 0x55, 0xb4, 0xe4, 0xeb, 0x37, 0x2a, 0x68,
	0x59, 0x54, 0xe9, 0x03, 0x5c, 0xa5, 0x15, 0xbc, 0x20, 0x17, 0x87, 0xcc, 0x62, 0x55, 0xe8, 0xd8,
	0xd9, 0xca, 0x3e, 0x5a, 0x13, 0x0e, 0x72, 0x95, 0x2a, 0x42, 0x3e, 0x88, 0x1d, 0xac, 0x8b, 0x4a,
	0x63, 0x07, 0xfb, 0x77, 0xd0, 0x39, 0xd1, 0x5f, 0xb9, 0x4a, 0xb9, 0x84, 0x55, 0x2e, 0x08, 0x49,
	0xe6, 0x41, 0xa6, 0x88, 0x25, 0x51, 0x6b, 0x1d, 0x56, 0xfc, 0xaf, 0x79, 0xb0, 0x68, 0x0b, 0xaf,
	0xae, 0x78, 0xcd, 0xf7, 0xef, 0xa0, 0x98, 0x30, 0xc2, 0x75, 0xc8, 0xd8, 0x65, 0x74, 0x31, 0xfe,
	0xa5, 0x69, 0x58, 0x14, 0xb7, 0x7e, 0xf2, 0x1c, 0xc7, 0x0f, 0xa4, 0x73, 0x83, 0x1f, 0x2a, 0x85,
	0x98, 0x9c, 0xa0, 0xb7, 0xe1, 0x2d, 0x49, 0x52, 0x7b, 0x88, 0x87, 0xc6, 0x5e, 0x43, 0x9c, 0x6e,
	0xbb, 0x5c, 0x2a, 0x39, 0x76, 0xad, 0xec, 0xa2, 0x29, 0xa3, 0xea, 0xbe, 0x49, 0x95, 0xa4, 0xfc,
	0xf7, 0x55, 0xd3, 0x25, 0xbb, 0xe1, 0xd5, 0x4a, 0x36, 0x9a, 0xc1, 0x0f, 0xc0, 0xbe, 0xdc, 0x2e,
	0xa7, 0x1a, 0xf9, 0x54, 0xa1, 0xe1, 0xdd, 0x75, 0x52, 0x19, 0xc7, 0xad, 0xd2, 0xc4, 0x41, 0x3e,
	0x4e, 0x1e, 0x9d, 0x1a, 0xde, 0x67, 0x52, 0xf6, 0x3d, 0xfa, 0xea, 0xa4, 0x0f, 0x15, 0x6c, 0x7a,
	0xfe, 0x7d, 0x49, 0xb1, 0xd6, 0xf0, 0xdc, 0xcf, 0xa0, 0x05, 0x55, 0xaf, 0x58, 0x47, 0x8b, 0x5a,
	0xa3, 0xf1, 0xa3, 0x8b, 0x52, 0x0d, 0xb6, 0x99, 0x4e, 0xc3, 0xab, 0xe4, 0x73, 0xb5, 0x54, 0xbe,
	0x80, 0x96, 0xd4, 0xde, 0xbb, 0x5b, 0xad, 0x66, 0xec, 0x7c, 0x9e, 0xa6, 0x8b, 0x91, 0x6b, 0x4f,
	0x9b, 0xcd, 0xad, 0x56, 0xf0, 0x69, 0x93, 0x4a, 0xae, 0x94, 0xd1, 0x6a, 0xfc, 0x47, 0x22, 0x30,
	0xcf, 0x6e, 0x97, 0xb8, 0x50, 0xc3, 0x43, 0x0c, 0x43, 0xd9, 0x55, 0x4a, 0x0f, 0xbc, 0x52, 0xb9,
	0xd6, 0xf0, 0xfc, 0xdd, 0x7f, 0xc8, 0x43, 0xa5, 0x82, 0xd5, 0xea, 0x74, 0x3d, 0x3e, 0x45, 0x46,
	0x28, 0x43, 0xb8, 0x70, 0x9a, 0xcc, 0x03, 0x4c, 0x28, 0xed, 0x21, 0x14, 0xff, 0xa3, 0x08, 0xac,
	0x28, 0xf7, 0x3b, 0xeb, 0x4d, 0xd8, 0x31, 0xd4, 0x49, 0xd1, 0x41, 0xaf, 0x59, 0x3b, 0xb0, 0xad,
	0x88, 0x82, 0xf5, 0xbb, 0x01, 0x57, 0x55, 0x8d, 0x4c, 0x1d, 0xf7, 0x28, 0x3b, 0x83, 0xe9, 0x7c,
	0x26, 0xef, 0x3a, 0x36, 0x09, 0x72, 0x4c, 0x59, 0xbb, 0x70, 0x43, 0xd5, 0xe5, 0x33, 0x52, 0x50,
	0x3b, 0x55, 0x40, 0xd3, 0xd6, 0xfb, 0x70, 0x73, 0x82, 0xef, 0xda, 0x83, 0x72, 0x83, 0x6d, 0x36,
	0xa4, 0x1a, 0xce, 0xc4, 0xbe, 0xba, 0xcc, 0xa6, 0x43, 0x99, 0xd1, 0xb5, 0x86, 0xb0, 0x41, 0x9f,
	0x0a, 0xe8, 0x4a, 0xa9, 0x73, 0x74, 0xd8, 0x7f, 0xda, 0xa3, 0x2f, 0x1a, 0x2d, 0xed, 0x7f, 0xfa,
	0xd5, 0xe8, 0x61, 0x2a, 0x21, 0x3f, 0xf3, 0xd4, 0x8f, 0x4b, 0x9d, 0xb3, 0xc5, 0x16, 0x73, 0x1e,
	0xfb, 0xf5, 0x25, 0x56, 0x13, 0x59, 0xd5, 0xfa, 0xde, 0x08, 0x23, 0xaa, 0x95, 0xaa, 0xb0, 0x1b,
	0xcf, 0x07, 0xdf, 0x68, 0x4d, 0x02, 0x12, 0xc6, 0x65, 0x2b, 0x55, 0x8b, 0xfd, 0x14, 0x00, 0xd2,
	0x15, 0xad, 0xef, 0x06, 0xa0, 0x35, 0x92, 0x76, 0x30, 0xf8, 0xb6, 0x6f, 0x7a, 0x7d, 0x76, 0xc9,
	0x6f, 0xfa, 0xa0, 0x42, 0xeb, 0x34, 0xa6, 0x1b, 0x15, 0xcc, 0xb1, 0x8e, 0x98, 0x22, 0x4f, 0x57,
	0xec, 0xc8, 0x8a, 0xc3, 0x32, 0xad, 0x14, 0x7b, 0x14, 0x9e, 0x26, 0x28, 0x95, 0xf1, 0x77, 0xbd,
	0xae, 0xc3, 0x5a, 0x67, 0xe4, 0x75, 0x7a, 0xde, 0x51, 0xa7, 0x3b, 0x6e, 0x0f, 0x3b, 0xbd, 0x63,
	0xf2, 0xd8, 0xb7, 0xe0, 0xae, 0x75, 0x46, 0x89, 0x4e, 0x2f, 0x21, 0xc4, 0x78, 0x01, 0x46, 0x35,
	0x47, 0x67, 0x83, 0xc1, 0xb0, 0x3d, 0x1a, 0x61, 0x5d, 0xfa, 0x38, 0xb7, 0x4e, 0x75, 0x25, 0x80,
	0xbd, 0x5a, 0xd8, 0xe9, 0x79, 0xcd, 0x63, 0xac, 0x37, 0x27, 0x5e, 0x2d, 0xec, 0xf4, 0x12, 0x44,
	0x84, 0x17, 0x8a, 0x47, 0xdd, 0xe6, 0x60, 0xd0, 0xe9, 0x1d, 0x7b, 0xad, 0xfe, 0x59, 0x6f, 0xcc,
	0x5e, 0x35, 0x11, 0xd2, 0x04, 0x91, 0xe2, 0x72, 0x25, 0xc7, 0x4c, 0x95, 0xbe, 0xc2, 0x2c, 0x03,
	0x4c, 0xfb, 0x3a, 0xac, 0x1d, 0x75, 0x8e, 0xcf, 0x86, 0x6d, 0xaf, 0x7f, 0xe4, 0x9d, 0xb6, 0x87,
	0x9d, 0x31, 0x7f, 0xa1, 0x9e, 0x8a, 0x13, 0xfd, 0xa3, 0x04, 0x11, 0xc7, 0xff, 0x60, 0x0e, 0x16,
	0x45, 0x7f, 0xe2, 0x49, 0x41, 0x1c, 0x78, 0xa9, 0x7a, 0x2a, 0x5f, 0xa5, 0x51, 0x51, 0x5f, 0x98,
	0xbe, 0x59, 0xb3, 0x53, 0xf4, 0x29, 0xdd, 0x17, 0x16, 0xb0, 0x22, 0xa1, 0x49, 0x24, 0x59, 0x39,
	0x8b, 0xa6, 0x75, 0x51, 0x11, 0xcd, 0xe8, 0xa2, 0x0a, 0x7d, 0xe1, 0x5d, 0x16, 0x55, 0xd1, 0x9c,
	0xe6, 0xdf, 0xcd, 0xe4, 0xd1, 0xbc, 0x2e, 0x73, 0xf2, 0x68, 0x41, 0x35, 0x2d, 0x97, 0xb3, 0x68,
	0x51, 0x55, 0xab, 0xe0, 0xaa, 0x81, 0x26, 0xc3, 0xee, 0x96, 0x74, 0x99, 0x83, 0x67, 0x6a, 0x55,
	0x56, 0x29, 0x14, 0xe9, 0xbd, 0xdc, 0x97, 0xb9, 0x99, 0x72, 0xb9, 0x80, 0x56, 0x35, 0xa1, 0x8b,
	0x85, 0x6b, 0xf8, 0xc6, 0xe2, 0x0b, 0xab, 0x99, 0xb4, 0xe3, 0x3a, 0x08, 0x69, 0xd2, 0x2c, 0x91,
	0xae, 0xab, 0x0e, 0x6a, 0xc4, 0x81, 0xa5, 0x0a, 0x2b, 0xf5, 0x92, 0xf3, 0x01, 0xda, 0xd0, 0x7a,
	0xc7, 0xce, 0xa0, 0x4d, 0xb5, 0x9a, 0x0f, 0x0a, 0xa5, 0x7b, 0xe8, 0x1c, 0xbe, 0x75, 0x4a, 0x3d,
	0x91, 0xa9, 0x37, 0x3c, 0xdc, 0xf4, 0xf3, 0x06, 0x79, 0xc1, 0xbe, 0x87, 0x2e, 0x18, 0xe4, 0x65,
	0x3b, 0x8f, 0xa2, 0x9a, 0xbc, 0xc6, 0xfc, 0x6c, 0x99, 0xfc, 0x94, 0x8b, 0x28, 0x46, 0xe2, 0x41,
	0xaa, 0x7e, 0x35, 0xd3, 0xf0, 0xd2, 0x8e, 0x8b, 0x2e, 0x9a, 0xb0, 0x2c, 0xc5, 0xb6, 0xf1, 0xbd,
	0x46, 0x6a, 0x6b, 0xb1, 0xe1, 0xa5, 0x33, 0x79, 0x74, 0x29, 0x28, 0xae, 0xe5, 0x8b, 0xe8, 0xb2,
	0xda, 0x89, 0x6e, 0x83, 0x0c, 0xaf, 0x2b, 0x06, 0x69, 0x15, 0xed, 0x04, 0xa4, 0x78, 0x58, 0xbc,
	0xae, 0x3a, 0xae, 0xb2, 0xf2, 0xe2, 0x41, 0x71, 0x3e, 0xe5, 0xa0, 0x37, 0x82, 0x62, 0x5c, 0x8d,
	0x37, 0xb5, 0x6b, 0x61, 0x0f, 0x5f, 0x0b, 0xd7, 0x35, 0xe1, 0x3e, 0x16, 0xbe, 0x1d, 0x7f, 0x08,
	0xe0, 0xbf, 0x36, 0x67, 0x5d, 0x80, 0x0d, 0xff, 0xc8, 0xcb, 0x97, 0x52, 0x76, 0x2d, 0x4f, 0xf8,
	0x17, 0x5c, 0x8e, 0x0f, 0x30, 0x71, 0xc4, 0xba, 0x08, 0x17, 0x24, 0xb1, 0xb2, 0xa5, 0xdf, 0x54,
	0xfc, 0xf7, 0x23, 0xa1, 0x6b, 0x68, 0xbe, 0xa6, 0x74, 0x6a, 0x77, 0x51, 0x44, 0x1c, 0x55, 0xca,
	0xf8, 0xf2, 0x14, 0x2b, 0x4c, 0x7c, 0x38, 0x2d, 0x96, 0xdb, 0xce, 0x1e, 0x9a, 0x11, 0x07, 0x39,
	0x87, 0x72, 0x9b, 0xf2, 0x87, 0xf2, 0x73, 0x3e, 0x9a, 0x45, 0xf3, 0x2a, 0x9a, 0x45, 0x0b, 0x92,
	0x80, 0x7c, 0xfe, 0xbe, 0x28, 0x56, 0xcb, 0xfe, 0x07, 0xef, 0x20, 0xd6, 0xdc, 0xf2, 0x27, 0xee,
	0xfe, 0x1a, 0xba, 0x5c, 0x2b, 0xa1, 0xe5, 0xf8, 0xff, 0x9c, 0x86, 0x05, 0xfe, 0xaa, 0x1f, 0x36,
	0xe0, 0xbf, 0xa5, 0xf6, 0x5d, 0x80, 0x0d, 0x21, 0x75, 0x6a, 0x77, 0x0b, 0xa9, 0x12, 0xee, 0x15,
	0x4a, 0x1d, 0xc9, 0xc0, 0x03, 0x06, 0x90, 0xe0, 0xb9, 0x0c, 0xe4, 0x1c, 0x22, 0x27, 0xfb, 0xd4,
	0xc8, 0x72, 0xdc, 0x52, 0x82, 0xcc, 0x04, 0x2c, 0xb2, 0x44, 0x3e, 0x6b, 0xb0, 0xa0, 0xc8, 0x9c,
	0x8e, 0xdc, 0xe2, 0xc8, 0x3c, 0x3e, 0x8f, 0xba, 0x8d, 0x5d, 0x2e, 0x12, 0x90, 0xe4, 0x30, 0xd4,
	0xcd, 0x48, 0xc7, 0x10, 0x78, 0x51, 0xaf, 0x47, 0x96, 0xd6, 0x0f, 0xf4, 0xa6, 0x16, 0x59, 0xc5,
	0x97, 0x94, 0x2e, 0xab, 0x94, 0xab, 0x44, 0xba, 0xac, 0x48, 0xcb, 0x35, 0xda, 0x2d, 0x2b, 0x78,
	0xdc, 0x09, 0xa9, 0xcd, 0x95, 0xc9, 0xb4, 0xe6, 0xfb, 0xde, 0x23, 0xc2, 0x35, 0xbd, 0x11, 0x2c,
	0x93, 0x1f, 0x01, 0x91, 0xe2, 0xde, 0xa9, 0xdd, 0x25, 0xd2, 0x75, 0xc2, 0x3d, 0x08, 0x29, 0x91,
	0x59, 0x8a, 0xac, 0x4c, 0x64, 0x1b, 0xf1, 0x2e, 0x2c, 0xcb, 0xef, 0x64, 0xe2, 0xa2, 0xe4, 0x63,
	0xaf, 0x54, 0x2e, 0x94, 0xcb, 0x95, 0x34, 0x5e, 0xc9, 0x13, 0x16, 0x4c, 0x01, 0x0b, 0x65, 0x3b,
	0x55, 0x10, 0x78, 0xc4, 0xba, 0x02, 0x17, 0x15, 0xdc, 0x75, 0x8a, 0xe5, 0x9a, 0x23, 0x14, 0xa6,
	0xe2, 0xf7, 0x01, 0xfc, 0x17, 0x25, 0x71, 0x59, 0xfe, 0x91, 0x7a, 0x8d, 0x91, 0xeb, 0x52, 0x02,
	0xd9, 0x93, 0x25, 0x21, 0xcd, 0x24, 0x31, 0x59, 0x4a, 0xa2, 0xa9, 0xd8, 0x1f, 0x2c, 0x01, 0x90,
	0x77, 0xba, 0xe9, 0xeb, 0xbc, 0x59, 0x00, 0xfa, 0x2e, 0xba, 0xf4, 0x52, 0xef, 0xd5, 0x90, 0x8d,
	0x9c, 0xe8, 0x5a, 0x48, 0xfc, 0x74, 0xa9, 0x25, 0xf9, 0xde, 0x26, 0xf6, 0xc7, 0x00, 0x8b, 0x02,
	0xf9, 0x26, 0xbc, 0x0a, 0x5d, 0x84, 0x45, 0xf2, 0x75, 0x80, 0xb4, 0xfb, 0xd8, 0x7b, 0x2f, 0x57,
	0x2d, 0xb2, 0x58, 0xa3, 0x6f, 0xe0, 0x92, 0xef, 0x09, 0xc6, 0xf4, 0x0a, 0x65, 0xaf, 0x17, 0xcf,
	0xc8, 0xaf, 0x17, 0x57, 0xd5, 0xd7, 0x8b, 0x67, 0xc3, 0xb8, 0x10, 0x63, 0x31, 0x61, 0x2f, 0x1a,
	0x17, 0xe5, 0x37, 0x86, 0xe7, 0x5e, 0xa9, 0xe6, 0xa6, 0x77, 0x87, 0xbf, 0xb1, 0x57, 0x7d, 0xd3,
	0x30, 0xdb, 0x6d, 0x3f, 0x69, 0x77, 0xd9, 0xfb, 0x7c, 0xef, 0xbe, 0x64, 0x45, 0x0a, 0xd8, 0xc6,
	0xa5, 0xa6, 0xf1, 0xcf, 0x4f, 0xc1, 0x02, 0xef, 0x53, 0x3c, 0xa8, 0xf8, 0x6f, 0xf5, 0x91, 0x5b,
	0x48, 0xe9, 0x74, 0x2e, 0x4b, 0xe8, 0x94, 0xbe, 0x0e, 0x2b, 0x42, 0xc2, 0xa6, 0xf5, 0x35, 0x58,
	0xf2, 0xcd, 0xf6, 0x68, 0x74, 0x44, 0x08, 0xc8, 0xf4, 0xbe, 0x01, 0x6b, 0x42, 0x20, 0xa6, 0x78,
	0x45, 0x0b, 0x4f, 0xf3, 0x01, 0x2d, 0x3c, 0xd5, 0xab, 0x42, 0x36, 0xdd, 0x9f, 0x07, 0x4b, 0xd3,
	0xa4, 0x53, 0x7e, 0x14, 0x36, 0x35, 0x65, 0x3e, 0xed, 0xcb, 0x0d, 0xa1, 0x53, 0xff, 0x9f, 0xe0,
	0xdd, 0xf2, 0x4f, 0xef, 0x2a, 0xff, 0xcf, 0xdd, 0x55, 0x72, 0x30, 0x4b, 0xae, 0x36, 0xf2, 0xd9,
	0x2c, 0xfe, 0xe1, 0x35, 0xbc, 0x64, 0x83, 0x30, 0xc7, 0xcb, 0xb0, 0x40, 0x25, 0x39, 0x87, 0x2e,
	0x90, 0xe8, 0x51, 0xd6, 0x41, 0x53, 0xb2, 0x36, 0xb9, 0x2a, 0xa6, 0x63, 0xbf, 0x35, 0xc7, 0xf7,
	0x61, 0xb0, 0xbb, 0xcd, 0xd1, 0xa8, 0x3d, 0xb2, 0xca, 0xb0, 0xcc, 0x3e, 0x1f, 0x6f, 0x61, 0x09,
	0x9b, 0xdd, 0x0d, 0x2f, 0xea, 0x29, 0x66, 0xf2, 0x91, 0xcb, 0x1c, 0x24, 0x88, 0x83, 0xd8, 0x7f,
	0x9e, 0x85, 0x25, 0x09, 0xb5, 0xea, 0x00, 0x04, 0xf0, 0x79, 0x4d, 0xe3, 0x2b, 0x76, 0xa1, 0xee,
	0x77, 0xc9, 0xdf, 0x52, 0xf3, 0xb4, 0xed, 0x52, 0x47, 0x94, 0x0d, 0x8d, 0xc3, 0x32, 0xf9, 0xc8,
	0x6d, 0xd4, 0x1e, 0x13, 0xf6, 0x86, 0x3e, 0x23, 0x2f, 0x93, 0xaf, 0xdc, 0x98, 0x8c, 0x3d, 0xdb,
	0xd2, 0xd7, 0xfe, 0xfa, 0x4f, 0xda, 0x43, 0xa2, 0x38, 0x2d, 0x9e, 0x6d, 0x55, 0x20, 0xfe, 0xb3,
	0x33, 0xb0, 0x28, 0xca, 0xc2, 0xa7, 0x58, 0x1c, 0xb0, 0xa4, 0x0b, 0xe4, 0x72, 0xf5, 0x85, 0x3c,
	0xd5, 0x2e, 0xb9, 0xaa, 0x7c, 0x71, 0xb1, 0x52, 0x2f, 0x96, 0x33, 0xf5, 0x02, 0xfb, 0xa6, 0xd1,
	0x07, 0x0a, 0x02, 0x98, 0x55, 0x81, 0x6a, 0x96, 0x03, 0x34, 0x2b, 0xb8, 0x5f, 0x42, 0xa1, 0x6c,
	0xdf, 0x63, 0x10, 0xd9, 0xa3, 0x5a, 0x82, 0x52, 0x6e, 0x86, 0x21, 0x64, 0x7d, 0xea, 0x23, 0x6c,
	0xf8, 0xaf, 0xc3, 0x8a, 0x2f, 0xcb, 0xa6, 0x4a, 0x08, 0xa9, 0xbe, 0x69, 0xf6, 0xe7, 0x7a, 0xa5,
	0x52, 0x78, 0x88, 0xd6, 0xd5, 0xfa, 0xd8, 0xe5, 0x52, 0x2d, 0x95, 0x2f, 0x39, 0x2e, 0xb2, 0xac,
	0x0b, 0x60, 0x49, 0x36, 0x15, 0x56, 0xe4, 0x8f, 0xee, 0x58, 0x51, 0xa5, 0x05, 0x0f, 0xb2, 0x0c,
	0xf9, 0xbc, 0x86, 0x38, 0x36, 0x6f, 0xdb, 0x17, 0x34, 0x24, 0x2f, 0x90, 0x2f, 0xee, 0x58, 0x96,
	0x5c, 0xdb, 0x42, 0xd6, 0x41, 0x5f, 0xdd, 0x51, 0x8b, 0xb6, 0x79, 0x01, 0xbf, 0xa3, 0x2b, 0xdb,
	0x19, 0xf4, 0xfb, 0x9a, 0xac, 0xe2, 0x14, 0xd1, 0x17, 0xae, 0xa9, 0xc5, 0xd9, 0x45, 0x5e, 0xdc,
	0x97, 0xae, 0x69, 0xda, 0x79, 0x1b, 0xfd, 0xb8, 0x26, 0xab, 0x55, 0xeb, 0xe8, 0xcb, 0xd7, 0xac,
	0x75, 0x58, 0x96, 0xf4, 0x8a, 0xe8, 0x97, 0xae, 0xc5, 0xfe, 0xe3, 0xb7, 0xc3, 0x46, 0xbe, 0xd7,
	0xea, 0xf7, 0x46, 0x9d, 0xd1, 0xb8, 0xdd, 0x1b, 0xd3, 0x91, 0x3a, 0xb2, 0xbe, 0x13, 0x36, 0x3a,
	0x92, 0x98, 0xe5, 0x89, 0x60, 0x97, 0x93, 0x81, 0x87, 0x33, 0xf8, 0x30, 0xc8, 0x5c, 0xc5, 0x29,
	0x4b, 0x07, 0x11, 0xfb, 0x77, 0x9f, 0x05, 0x2b, 0xa8, 0x6b, 0xd5, 0x60, 0x96, 0x5f, 0xc3, 0x21,
	0x1b, 0xb1, 0xbe, 0x5c, 0xa1, 0xf4, 0x8a, 0x73, 0xa9, 0x33, 0x65, 0x99, 0x36, 0xf5, 0xa2, 0x65,
	0xda, 0xb4, 0x69, 0x99, 0x76, 0xc2, 0x3e, 0x65, 0x6c, 0x76, 0xe5, 0xad, 0x5b, 0x33, 0x1f, 0xb9,
	0x7a, 0x05, 0xea, 0x8c, 0x7e, 0x98, 0xce, 0x3c, 0xd3, 0x75, 0xd0, 0x87, 0xb0, 0x22, 0xbe, 0xf8,
	0x91, 0x3e, 0xc6, 0x72, 0x3e, 0x72, 0x51, 0x15, 0xe6, 0x8d, 0xbe, 0x23, 0x2d, 0xbe, 0x19, 0x62,
	0xaf, 0xf5, 0x43, 0x7f, 0xc0, 0x3e, 0x18, 0xe5, 0x8b, 0xb8, 0xf4, 0x47, 0x2e, 0x49, 0x6c, 0x18,
	0xef, 0x12, 0xaf, 0x74, 0x9d, 0x18, 0xff, 0xda, 0x34, 0xcc, 0xd2, 0x69, 0x74, 0x0d, 0x96, 0xc8,
	0x0f, 0x31, 0x17, 0xf1, 0x0b, 0x5c, 0x9a, 0x87, 0xf8, 0x9c, 0xa5, 0xcc, 0x41, 0x42, 0x28, 0xcf,
	0x3f, 0x42, 0x28, 0xcf, 0x3d, 0x7c, 0x76, 0xd3, 0xe6, 0x9d, 0x4d, 0x40, 0x4c, 0x2c, 0xcf, 0x39,
	0xab, 0x00, 0x54, 0xca, 0xe6, 0x9b, 0x15, 0x36, 0x79, 0xb2, 0xb9, 0x46, 0xf8, 0x52, 0xe7, 0x19,
	0x51, 0xae, 0x3c, 0xc7, 0x6c, 0xb0, 0xe9, 0x4b, 0x99, 0x5f, 0x36, 0x45, 0x0d, 0xe5, 0xb9, 0x45,
	0x48, 0x95, 0x79, 0x45, 0x48, 0x95, 0x39, 0x65, 0x95, 0xd7, 0x88, 0xcd, 0x27, 0xa2, 0x18, 0x79,
	0x2e, 0xf1, 0x95, 0xe8, 0x3c, 0x22, 0x8e, 0xd9, 0x1c, 0x22, 0x5c, 0x2b, 0xf3, 0x87, 0xaf, 0x45,
	0xe7, 0x0e, 0x71, 0xcc, 0xe6, 0x8d, 0x15, 0x58, 0x60, 0x38, 0x9e, 0x33, 0xe2, 0x3f, 0xf8, 0x36,
	0xfb, 0xc0, 0x96, 0x0e, 0x24, 0xf1, 0xc5, 0x2c, 0x3d, 0x54, 0xd7, 0x6d, 0x32, 0xe0, 0x6f, 0x5d,
	0xb0, 0x05, 0xe7, 0x64, 0x40, 0xde, 0xb4, 0x40, 0xb3, 0xf1, 0xb7, 0x2b, 0xd0, 0x00, 0x7f, 0xa3,
	0x02, 0x0d, 0xf0, 0xb7, 0x28, 0xd0, 0x00, 0x7f, 0x73, 0x02, 0x0d, 0xf0, 0xb7, 0x25, 0xd0, 0x2b,
	0x2c, 0x36, 0x24, 0xd0, 0x00, 0x7f, 0x2b, 0x02, 0xad, 0x25, 0xf2, 0x26, 0x04, 0x9a, 0x8d, 0xbf,
	0xfd, 0x80, 0x06, 0xf8, 0x1b, 0x0f, 0xe8, 0x4d, 0x14, 0x5b, 0x0e, 0xc4, 0xe0, 0xbc, 0x52, 0x2f,
	0x79, 0xb3, 0x01, 0xbd, 0xce, 0x62, 0x9b, 0x81, 0x1d, 0xd8, 0x56, 0xea, 0x1c, 0xdc, 0x60, 0x80,
	0x3c, 0xb0, 0x1b, 0x34, 0xf8, 0xd6, 0x02, 0xaf, 0xc3, 0x25, 0x23, 0x2e, 0x6d, 0x2a, 0x70, 0x0d,
	0xde, 0x30, 0xaa, 0x04, 0xb6, 0x13, 0x78, 0x0b, 0x5e, 0x9f, 0xe8, 0x8b, 0x6d, 0x24, 0x10, 0x85,
	0x4d, 0xc3, 0x90, 0xd9, 0x43, 0xd1, 0x10, 0x64, 0x1f, 0x6d, 0x05, 0x7a, 0x47, 0xde, 0x36, 0x80,
	0xc4, 0x1c, 0x24, 0x2c, 0xb0, 0x61, 0xc0, 0x25, 0xd8, 0x52, 0x15, 0xd4, 0xad, 0x02, 0x42, 0x60,
	0xbe, 0x49, 0x80, 0x5e, 0x29, 0x7f, 0x7b, 0x00, 0x33, 0x92, 0x46, 0x57, 0x0c, 0x08, 0xdf, 0x12,
	0x40, 0x3f, 0x95, 0x62, 0x33, 0x80, 0x00, 0xc0, 0xb7, 0x01, 0xd0, 0x86, 0x9f, 0xbc, 0x01, 0x40,
	0xb0, 0x18, 0x9e, 0xfa, 0xdf, 0x50, 0x35, 0x96, 0xf4, 0xdf, 0x8c, 0xa4, 0xd1, 0xd5, 0x10, 0xc4,
	0x46, 0xd7, 0x42, 0x10, 0x07, 0x5d, 0x0f, 0x41, 0x5c, 0xf4, 0x76, 0x08, 0x92, 0x45, 0x37, 0x42,
	0x90, 0x1c, 0x7a, 0x27, 0x04, 0xb9, 0x8b, 0xde, 0x0d, 0x41, 0xf2, 0x28, 0x11, 0x82, 0xdc, 0x43,
	0xbb, 0x21, 0x48, 0x11, 0xbd, 0x17, 0x82, 0x94, 0x50, 0xd2, 0x84, 0xb0, 0x64, 0xfd, 0xdb, 0x10,
	0xd5, 0xfb, 0x5a, 0x4a, 0xd3, 0x1f, 0x8e, 0xa6, 0xd1, 0xcd, 0x10, 0x94, 0xa7, 0xe6, 0x0f, 0x47,
	0xd3, 0xe8, 0x60, 0x02, 0x6a, 0xa3, 0xdb, 0x61, 0xe5, 0xb2, 0x44, 0xfc, 0xda, 0x98, 0xf2, 0x53,
	0xf0, 0x1b, 0x81, 0x0c, 0xfa, 0x98, 0x19, 0xc8, 0xa2, 0x8f, 0xe3, 0xbb, 0xa3, 0x06, 0x90, 0x84,
	0xfb, 0xe7, 0xc1, 0xd2, 0xc4, 0x34, 0xd5, 0xbe, 0xa9, 0x1f, 0x69, 0x92, 0x7d, 0x13, 0x42, 0xd3,
	0xeb, 0x9b, 0x6d, 0x32, 0xe8, 0x53, 0x21, 0x48, 0x16, 0x7d, 0x3a, 0x04, 0xc9, 0xa1, 0x54, 0x08,
	0x62, 0xa3, 0xb4, 0x19, 0x21, 0x09, 0xf4, 0x49, 0xe8, 0x53, 0x45, 0xfc, 0xd4, 0xf9, 0x86, 0x6b,
	0x9a, 0x25, 0xcd, 0x37, 0x20, 0x2c, 0x5d, 0x7e, 0xd0, 0xa1, 0x94, 0x28, 0xdf, 0x60, 0xc6, 0x52,
	0xe4, 0x1b, 0xce, 0xaa, 0x94, 0x1c, 0x3f, 0x88, 0xca, 0x69, 0xf1, 0xc3, 0x6d, 0x6d, 0x74, 0xcf,
	0x50, 0x21, 0x29, 0x15, 0xbe, 0xa1, 0xb6, 0x7e, 0x12, 0x7c, 0x73, 0xaf, 0xa5, 0x51, 0x49, 0x9f,
	0xa0, 0xe4, 0xc4, 0xf7, 0x21, 0x50, 0x1a, 0x55, 0xc2, 0x20, 0x1b, 0x7d, 0x60, 0x68, 0x82, 0x9c,
	0xe6, 0xde, 0x8c, 0xf2, 0x04, 0xf7, 0xda, 0x00, 0xf6, 0x53, 0xdb, 0x6b, 0x03, 0x98, 0x27, 0xb5,
	0xd7, 0xc4, 0x3c, 0x9d, 0xbd, 0x41, 0xbc, 0x8f, 0x1e, 0x98, 0x3a, 0x81, 0xa5, 0xb0, 0x37, 0x20,
	0x2c, 0x79, 0xbd, 0xc9, 0x86, 0xa6, 0xad, 0x37, 0x20, 0x2c, 0x61, 0xbd, 0x09, 0xa1, 0xa9, 0xea,
	0x8d, 0x36, 0x24, 0x49, 0xbd, 0xa9, 0x1c, 0x9a, 0x9e, 0xde, 0x54, 0x37, 0x9a, 0x98, 0xde, 0xe4,
	0x8d, 0xa6, 0xa4, 0x37, 0x79, 0xa3, 0xc9, 0xe8, 0x4d, 0x36, 0x34, 0x0d, 0xbd, 0xc9, 0x86, 0x26,
	0xa0, 0x37, 0xb6, 0x87, 0xa4, 0x9e, 0x37, 0xd6, 0x80, 0x24, 0x9d, 0x37, 0x79, 0xa3, 0xe9, 0xe6,
	0x8d, 0x7d, 0x40, 0x12, 0xcd, 0x07, 0x11, 0x9e, 0x62, 0xde, 0x60, 0xc3, 0x92, 0xcb, 0x9b, 0xca,
	0xa1, 0x69, 0xe5, 0x0d, 0xb7, 0x57, 0x96, 0x50, 0xde, 0x80, 0xb0, 0x54, 0xf2, 0x06, 0x84, 0x25,
	0x91, 0x37, 0x20, 0x2c, 0x7d, 0xbc, 0xc9, 0x1b, 0x4d, 0x1c, 0x6f, 0xf2, 0x46, 0x53, 0xc6, 0x9b,
	0xea, 0x46, 0x93, 0xc5, 0x9b, 0x6c, 0x68, 0x9a, 0x78, 0x13, 0x42, 0x13, 0xc4, 0x07, 0xd7, 0x18,
	0x22, 0x35, 0x7c, 0xd0, 0x88, 0x27, 0x85, 0x0f, 0x1a, 0x89, 0x74, 0xf0, 0xe6, 0xf1, 0xfb, 0x08,
	0x3d, 0x0d, 0xb9, 0x82, 0x1e, 0xa1, 0x67, 0x21, 0x57, 0xd0, 0x23, 0xf4, 0x1c, 0x3f, 0x82, 0x29,
	0xab, 0x7f, 0x92, 0xf6, 0x9d, 0xa7, 0xfc, 0x61, 0x42, 0x96, 0xf0, 0xdd, 0xd8, 0x78, 0x92, 0xea,
	0xdd, 0x50, 0x5b, 0x9e, 0xe4, 0xdd, 0x30, 0x11, 0xb3, 0xf4, 0xee, 0xe6, 0xf9, 0x9b, 0x25, 0x76,
	0xdf, 0x0a, 0x56, 0x98, 0xa7, 0x74, 0x8f, 0x05, 0xd7, 0x6c, 0x22, 0x99, 0xfb, 0x76, 0xd0, 0xa7,
	0x94, 0xc6, 0x3d, 0x14, 0x25, 0x09, 0xdc, 0xcd, 0x45, 0x92, 0xd4, 0xed, 0x9b, 0x6a, 0x27, 0xb1,
	0xa4, 0xed, 0x9a, 0x94, 0xa5, 0x6b, 0xdf, 0x80, 0x55, 0x59, 0x4a, 0x13, 0xb5, 0x5f, 0x50, 0x6f,
	0xe5, 0x7e, 0x8a, 0x76, 0x5d, 0x9b, 0x24, 0x67, 0x37, 0x69, 0x93, 0xb4, 0xec, 0x01, 0x80, 0x27,
	0x64, 0xd7, 0xfa, 0x44, 0x49, 0xc5, 0xae, 0xb5, 0x5a, 0x4b, 0xc2, 0xae, 0x35, 0x82, 0xa5, 0x5f,
	0xd7, 0xa4, 0x2c, 0xf1, 0xfa, 0x79, 0x75, 0xe2, 0x16, 0x29, 0xd7, 0x35, 0xb9, 0x48, 0xb6, 0xae,
	0x79, 0x61, 0x69, 0xd6, 0x75, 0xdf, 0x34, 0xc1, 0xba, 0xd6, 0x34, 0x3f, 0xb5, 0xba, 0xa6, 0xce,
	0x92, 0xaa, 0x5f, 0x0a, 0xde, 0xa8, 0xe4, 0x74, 0xea, 0x46, 0xd8, 0x4f, 0xa4, 0x6e, 0x86, 0x45,
	0x0a, 0x75, 0xb3, 0x73, 0x91, 0x3c, 0xdd, 0x08, 0xfb, 0x69, 0xd3, 0x0d, 0xb0, 0x9c, 0x30, 0xdd,
	0x68, 0xed, 0xa7, 0x4a, 0x37, 0x97, 0x2d, 0x92, 0xa4, 0x1b, 0x60, 0x39, 0x3d, 0xfa, 0x25, 0xd3,
	0xfd, 0xdb, 0x4f, 0x8c, 0x6e, 0x72, 0x2e, 0xa5, 0x44, 0xbf, 0x14, 0xba, 0x36, 0x20, 0xc9, 0xd0,
	0xcd, 0xb0, 0x48, 0x83, 0x1e, 0xe2, 0x9c, 0x27, 0x40, 0x37, 0xd5, 0x5c, 0x4a, 0x7d, 0x1e, 0xe2,
	0x9c, 0x27, 0x3d, 0x37, 0xf7, 0x9a, 0x48, 0x77, 0x6e, 0xee, 0x35, 0x91, 0xe8, 0xdc, 0x6c, 0x2d,
	0x52, 0x9c, 0x87, 0xf4, 0x39, 0x4f, 0x6e, 0x6e, 0x86, 0x45, 0x5a, 0x73, 0xf3, 0x60, 0x12, 0x09,
	0xcd, 0xcd, 0xb0, 0x48, 0x65, 0x1e, 0x84, 0x95, 0x24, 0xe6, 0xe6, 0xb2, 0x45, 0xfa, 0x72, 0x73,
	0xc3, 0x44, 0xe2, 0x72, 0x13, 0x2c, 0xa5, 0x2c, 0xd7, 0xae, 0x5b, 0x91, 0xac, 0x5c, 0xbb, 0x16,
	0xfd, 0x34, 0xe5, 0x06, 0x80, 0x26, 0x28, 0x0f, 0x78, 0x62, 0xa9, 0xc9, 0x83, 0x72, 0x9a, 0x94,
	0x3c, 0xe8, 0x88, 0xa5, 0x23, 0x0f, 0x18, 0xb0, 0x44, 0xe4, 0x41, 0x39, 0x4d, 0x41, 0x1e, 0x90,
	0xb3, 0xe4, 0xe3, 0x01, 0x39, 0x4b, 0x3b, 0x1e, 0x90, 0xb3, 0x84, 0xe3, 0xc1, 0x8a, 0xd2, 0x54,
	0xe3, 0xda, 0xec, 0xc3, 0x92, 0x8c, 0x47, 0xd5, 0x85, 0xb0, 0x94, 0x5e, 0x3c, 0xaa, 0x47, 0x1a,
	0x44, 0x62, 0x71, 0x23, 0x42, 0x52, 0x8a, 0x9f, 0x53, 0xef, 0xb6, 0x3c, 0x99, 0x78, 0x50, 0x4c,
	0xd2, 0x88, 0xeb, 0x65, 0xfb, 0x09, 0xc4, 0x03, 0xb5, 0x12, 0xa9, 0xc3, 0xb5, 0xd6, 0x89, 0x5d,
	0x74, 0x7f, 0xf7, 0x06, 0x2c, 0xcb, 0x31, 0x6d, 0xc2, 0x69, 0x4b, 0xc7, 0x52, 0x2c, 0x52, 0x47,
	0xfc, 0x60, 0x64, 0x0c, 0xce, 0x2b, 0x88, 0x1c, 0x8d, 0xd4, 0xad, 0xfc, 0x70, 0xa4, 0x8e, 0xf8,
	0xf1, 0x48, 0x1d, 0xf1, 0x03, 0x92, 0x3a, 0xe2, 0x47, 0x24, 0x75, 0xc4, 0x0f, 0x49, 0x06, 0xea,
	0x2d, 0x62, 0x92, 0x3a, 0xe2, 0x07, 0x25, 0xf5, 0x16, 0xc9, 0x51, 0x49, 0xdd, 0xca, 0x0f, 0x4b,
	0xea, 0x88, 0x1f, 0x97, 0x0c, 0xb4, 0x55, 0x04, 0x26, 0x2f, 0xc2, 0x05, 0xb5, 0x76, 0x72, 0x64,
	0x32, 0x50, 0x75, 0x11, 0x9a, 0x7c, 0x1d, 0x2e, 0xa9, 0x55, 0x0f, 0xc6, 0x26, 0xaf, 0xc0, 0x45,
	0xb3, 0x0a, 0x0f, 0x4e, 0xc6, 0xe1, 0xb2, 0x59, 0x41, 0x8a, 0x4e, 0x5e, 0x87, 0x37, 0xcd, 0x3a,
	0x81, 0xf0, 0xe4, 0x55, 0x88, 0x4f, 0xf6, 0xc6, 0xe2, 0x93, 0x5b, 0x70, 0xce, 0x34, 0x8c, 0xf6,
	0x50, 0x34, 0x0c, 0xda, 0x47, 0x5b, 0xc1, 0x6e, 0x92, 0x43, 0x94, 0x3b, 0xb0, 0xad, 0x82, 0x81,
	0x18, 0xe5, 0x65, 0x88, 0x69, 0x1a, 0x6a, 0x90, 0x32, 0x0c, 0xe7, 0x51, 0xca, 0x40, 0xcd, 0xfc,
	0x30, 0x65, 0x08, 0x94, 0x46, 0x57, 0x4c, 0x10, 0x0f, 0x54, 0x06, 0xce, 0xac, 0x88, 0x54, 0x06,
	0x11, 0x1e, 0xaa, 0xd4, 0x07, 0xa5, 0x1c, 0xab, 0x34, 0x14, 0xc5, 0x83, 0x95, 0xa6, 0x0a, 0xb2,
	0x68, 0x65, 0x08, 0x94, 0x46, 0x57, 0xc3, 0x20, 0x1b, 0x5d, 0x0b, 0x83, 0x1c, 0x74, 0x3d, 0x0c,
	0x72, 0xd1, 0xdb, 0x61, 0x50, 0x16, 0xdd, 0x08, 0x83, 0x72, 0xe8, 0x9d, 0x30, 0xe8, 0x2e, 0x7a,
	0x37, 0x0c, 0xca, 0xa3, 0x44, 0x18, 0x74, 0x0f, 0xed, 0x86, 0x41, 0x45, 0xf4, 0x5e, 0x18, 0x54,
	0x42, 0x49, 0x23, 0xc4, 0x22, 0x97, 0x97, 0x60, 0x2b, 0xd0, 0xf3, 0x52, 0xe8, 0x72, 0x02, 0x9c,
	0x46, 0x37, 0xc3, 0x60, 0x1e, 0xbc, 0x9c, 0x00, 0xa7, 0xd1, 0xc1, 0x24, 0xd8, 0x46, 0xb7, 0x43,
	0xcb, 0x66, 0xf1, 0x4b, 0x7d, 0xa4, 0xf9, 0x01, 0x4c, 0x33, 0x92, 0x41, 0x1f, 0x0b, 0x41, 0xb2,
	0xe8, 0xe3, 0xe4, 0x25, 0x29, 0x0d, 0x21, 0x31, 0xcc, 0x0b, 0xb0, 0xa1, 0xcb, 0x69, 0x10, 0xd3,
	0xd8, 0xa7, 0x34, 0x8a, 0x69, 0x84, 0x68, 0x18, 0x33, 0xc4, 0x2a, 0x83, 0x3e, 0x15, 0x06, 0x65,
	0xd1, 0xa7, 0xc3, 0xa0, 0x1c, 0x4a, 0x85, 0x41, 0x36, 0x4a, 0x87, 0x40, 0x24, 0x96, 0xb9, 0x0d,
	0xd1, 0x00, 0xe4, 0x07, 0x33, 0x4d, 0x17, 0x3e, 0x8b, 0x66, 0x9a, 0x20, 0x16, 0xce, 0x34, 0xf8,
	0x94, 0xe2, 0x99, 0x26, 0x43, 0x16, 0xd0, 0x34, 0x9d, 0x67, 0x29, 0xa2, 0x69, 0x80, 0xe5, 0x90,
	0xe6, 0x04, 0x6b, 0x1b, 0xdd, 0x33, 0xd5, 0x4a, 0x0a, 0x6a, 0x9a, 0xea, 0xec, 0x47, 0x35, 0x43,
	0x3a, 0x30, 0x8d, 0x4a, 0x81, 0xc9, 0x4c, 0x8e, 0x6b, 0x86, 0x61, 0x69, 0x54, 0x09, 0xc5, 0x6c,
	0xf4, 0x81, 0xa9, 0x25, 0x72, 0x68, 0x33, 0x04, 0xe6, 0xb1, 0x4d, 0x7d, 0x68, 0xfb, 0xc1, 0x4d,
	0x7d, 0x68, 0xf3, 0xe8, 0xa6, 0x2e, 0xe7, 0xe1, 0x4d, 0x93, 0x7c, 0x1f, 0x3d, 0x30, 0x76, 0x07,
	0x0b, 0x70, 0x9a, 0x20, 0x16, 0xe1, 0x34, 0x5a, 0xd1, 0x10, 0xa7, 0x09, 0x62, 0x31, 0x4e, 0x23,
	0x44, 0x83, 0x9c, 0x66, 0x2b, 0x12, 0xe5, 0x34, 0x96, 0x45, 0xc3, 0x9c, 0xc6, 0x1a, 0xd2, 0x38,
	0xa7, 0xd1, 0x21, 0x0d, 0x74, 0x1a, 0x1d, 0xd2, 0x48, 0xa7, 0xd1, 0x8a, 0x86, 0x3a, 0x8d, 0x56,
	0x34, 0xd6, 0x69, 0x6e, 0x17, 0x09, 0x76, 0x9a, 0xab, 0x41, 0xa2, 0x9d, 0x46, 0x87, 0x34, 0xdc,
	0x69, 0xee, 0x0d, 0x12, 0xef, 0x34, 0x40, 0x3c, 0xe0, 0x69, 0xb2, 0x62, 0x11, 0x4f, 0x63, 0x59,
	0x34, 0xe4, 0x69, 0xba, 0x4b, 0xb3, 0x98, 0xa7, 0x09, 0x62, 0x41, 0x4f, 0x13, 0xc4, 0xa2, 0x9e,
	0x26, 0x88, 0x85, 0x3d, 0x8d, 0x0e, 0x69, 0xdc, 0xd3, 0xe8, 0x90, 0x06, 0x3e, 0x8d, 0x35, 0xa4,
	0x91, 0x4f, 0xa3, 0x15, 0x0d, 0x7d, 0x1a, 0x21, 0x1a, 0xfb, 0x34, 0x2c, 0x5a, 0x44, 0xf0, 0xd3,
	0x60, 0xc6, 0xa3, 0x9f, 0x06, 0x33, 0x11, 0xfe, 0x0c, 0x19, 0xda, 0x8f, 0xd0, 0xd3, 0xb0, 0x2b,
	0xec, 0x11, 0x7a, 0x16, 0x76, 0x85, 0x3d, 0x42, 0xcf, 0xc9, 0xeb, 0xc9, 0xca, 0xf3, 0x06, 0x09,
	0x81, 0x9e, 0x83, 0x75, 0x45, 0xca, 0x62, 0xa0, 0xe6, 0x6e, 0x20, 0x41, 0x50, 0x53, 0xa5, 0x79,
	0x14, 0xd4, 0x34, 0x7d, 0xb3, 0x30, 0x68, 0xc8, 0xbc, 0xcf, 0xe2, 0xa0, 0x31, 0x43, 0xbd, 0x79,
	0x20, 0xf4, 0xa2, 0x61, 0x45, 0x28, 0x22, 0xa1, 0x97, 0x0c, 0x6e, 0xa5, 0x50, 0x68, 0x38, 0x4c,
	0x62, 0xa1, 0x21, 0xc5, 0x92, 0x60, 0xe8, 0x39, 0xad, 0xbf, 0x58, 0x34, 0x54, 0x17, 0xb3, 0x70,
	0xe8, 0x26, 0xac, 0x29, 0x62, 0x1a, 0x0f, 0x8d, 0x6a, 0xcb, 0x02, 0x3f, 0x20, 0x1a, 0xd0, 0x27,
	0x11, 0x51, 0xa3, 0x3e, 0x09, 0x89, 0x06, 0x11, 0x1e, 0x13, 0xd5, 0xbb, 0x47, 0x09, 0x8a, 0xea,
	0xed, 0xd7, 0xa2, 0xa2, 0x7a, 0x63, 0x58, 0x58, 0x54, 0x17, 0xb3, 0xb8, 0xe8, 0x05, 0x6d, 0xc6,
	0x17, 0x81, 0x51, 0x1d, 0x10, 0x91, 0x51, 0xdd, 0x11, 0x0b, 0x8d, 0x06, 0xfc, 0xd3, 0xd8, 0xa8,
	0xde, 0x46, 0x3f, 0x38, 0xaa, 0x1b, 0xb0, 0xe8, 0xe8, 0x65, 0xc3, 0xbd, 0x4e, 0x0e, 0x8f, 0x9a,
	0x71, 0x3f, 0x3e, 0x1a, 0x82, 0x8b, 0x00, 0x69, 0x88, 0x7f, 0x11, 0x21, 0x35, 0xe3, 0x7e, 0x88,
	0xd4, 0x84, 0xcb, 0x31, 0x52, 0xb3, 0xbd, 0x1f, 0x24, 0x0d, 0x29, 0x5f, 0x44, 0x49, 0x4d, 0xb8,
	0x1c, 0x26, 0xbd, 0x6c, 0x5c, 0x0b, 0xf8, 0x71, 0x52, 0xa3, 0x7f, 0x29, 0x50, 0x7a, 0x39, 0x7c,
	0xa9, 0x41, 0x22, 0xa5, 0x21, 0xb8, 0x08, 0x95, 0x86, 0xf9, 0xe7, 0xb1, 0x52, 0x63, 0xfd, 0xa5,
	0x60, 0x69, 0x98, 0x7f, 0x1e, 0x2d, 0x0d, 0xe9, 0x3f, 0x11, 0x2e, 0x0d, 0xe9, 0x3f, 0x11, 0x2f,
	0x0d, 0xb1, 0x17, 0x01, 0xd3, 0xb0, 0xfe, 0xe7, 0x11, 0xd3, 0x10, 0x5c, 0x84, 0x4c, 0x43, 0xc6,
	0x97, 0x88, 0x99, 0x86, 0xe0, 0x22, 0x68, 0x6a, 0xc0, 0x95, 0xa8, 0x69, 0x48, 0xf9, 0x22, 0x6c,
	0x1a, 0xd2, 0x3e, 0x11, 0x37, 0x35, 0xe2, 0x52, 0xe0, 0x54, 0xbf, 0xae, 0x45, 0xe4, 0x54, 0xbf,
	0x52, 0xfd, 0xd0, 0xa9, 0x09, 0xa1, 0xb1, 0xd3, 0xa0, 0x33, 0x16, 0x3c, 0x35, 0x00, 0x34, 0x7a,
	0x6a, 0xf0, 0xc5, 0xc2, 0xa7, 0x41, 0x13, 0x16, 0x3f, 0x35, 0x00, 0x34, 0x80, 0x1a, 0x04, 0x58,
	0x04, 0x35, 0x08, 0xb0, 0x10, 0x6a, 0x10, 0x60, 0x31, 0x54, 0x43, 0x7d, 0x69, 0x10, 0x55, 0x9f,
	0xa5, 0x58, 0x14, 0x75, 0x4b, 0x5b, 0x72, 0x4b, 0x61, 0xd4, 0xad, 0x40, 0x18, 0x44, 0xc4, 0x51,
	0xcd, 0x10, 0x09, 0xa4, 0x9e, 0xd7, 0xee, 0xd9, 0x3c, 0x92, 0x6a, 0x90, 0x93, 0x50, 0x6a, 0xa0,
	0x02, 0x7e, 0x2c, 0x35, 0x58, 0x37, 0x11, 0x4c, 0xd5, 0x9b, 0x29, 0xa2, 0xa9, 0x5f, 0x9f, 0x82,
	0x45, 0xf1, 0xde, 0x2e, 0x5e, 0x40, 0x88, 0x03, 0x29, 0x8e, 0xba, 0x09, 0xc8, 0x17, 0x97, 0xca,
	0x6e, 0x31, 0x55, 0xa0, 0xaf, 0xea, 0xfa, 0x52, 0x9a, 0xea, 0x74, 0x4a, 0xf5, 0xc0, 0x93, 0xc5,
	0x91, 0x78, 0xab, 0xec, 0x41, 0xfa, 0x18, 0x68, 0xc6, 0xda, 0x81, 0x6d, 0xc9, 0x84, 0x26, 0xf0,
	0x28, 0x95, 0x6b, 0xce, 0x07, 0xf5, 0x7c, 0xa5, 0xe2, 0x64, 0x68, 0xdc, 0x55, 0xb1, 0xce, 0x97,
	0xaa, 0xb5, 0x54, 0xa1, 0x40, 0xdf, 0x03, 0xf5, 0x91, 0x07, 0x6e, 0xb9, 0x94, 0xab, 0x3d, 0xac,
	0xb0, 0x2f, 0x0d, 0x7c, 0x40, 0xda, 0x2d, 0x65, 0x41, 0xad, 0x8a, 0xb2, 0xd1, 0x0a, 0xf9, 0x10,
	0xc7, 0xc7, 0xc8, 0x1d, 0xb1, 0x9c, 0xcd, 0x22, 0xb0, 0xe2, 0x70, 0x59, 0x96, 0xbb, 0xb5, 0x86,
	0x57, 0xb9, 0xfb, 0xb0, 0x4a, 0x53, 0x8d, 0x64, 0x70, 0x27, 0x2d, 0xc5, 0xbe, 0x3c, 0x05, 0x4b,
	0xe5, 0xa3, 0xa3, 0x6e, 0xa7, 0xd7, 0xb6, 0x8f, 0x8e, 0x47, 0xd6, 0xa7, 0x60, 0xbe, 0x4f, 0x0f,
	0xd9, 0x1b, 0xf4, 0x86, 0x9d, 0x18, 0x24, 0x7d, 0xfe, 0xdb, 0xe5, 0x56, 0xb1, 0xaf, 0x45, 0x60,
	0x9e, 0x09, 0xad, 0x94, 0xfa, 0x5e, 0xfc, 0x3b, 0x2f, 0xe5, 0xea, 0xa5, 0x5f, 0x82, 0x8f, 0x3f,
	0xe4, 0xaf, 0x68, 0x6f, 0x43, 0xd4, 0x90, 0x43, 0x84, 0x60, 0xe6, 0xf7, 0xb5, 0xc5, 0x3b, 0xdd,
	0x24, 0x82, 0x8e, 0xa6, 0xfd, 0x97, 0xaa, 0xc9, 0xed, 0x7e, 0x21, 0x56, 0x80, 0xd5, 0x6a, 0xeb,
	0xa4, 0x4d, 0x36, 0x77, 0x68, 0x3f, 0xee, 0xf7, 0xc9, 0x47, 0x93, 0x87, 0xcd, 0x71, 0x9b, 0xe4,
	0x47, 0x64, 0x1f, 0x4d, 0xf2, 0x63, 0xeb, 0x32, 0x00, 0xf9, 0xa0, 0x4f, 0xde, 0xe3, 0x87, 0x4a,
	0x48, 0xf6, 0xc4, 0xc7, 0x73, 0x83, 0x61, 0x7f, 0xdc, 0xbf, 0xf9, 0xbf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xaf, 0x0a, 0x2d, 0x9d, 0xca, 0xd2, 0x00, 0x00,
}
