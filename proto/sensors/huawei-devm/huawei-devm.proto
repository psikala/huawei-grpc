syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2019-07-04 06:20:51
// ProtoYang-version 1
// module huawei-devm
// revision 2019-04-05
// namespace urn:huawei:yang:huawei-devm

package huawei_devm;

message Devm {
   message PhysicalEntitys {
      message PhysicalEntity {
         enum Class {
            Class_OTHER = 0;
            Class_CHASSIS = 1;
            Class_MPUMODULE = 4;
            Class_LPUMODULE = 5;
            Class_SFUMODULE = 6;
            Class_CLOCKMODULE = 7;
            Class_CARDMODULE = 9;
            Class_PORT = 10;
            Class_FAN = 16;
            Class_POWERSUPPLY = 17;
            Class_CONTAINER = 18;
            Class_PPMODULE = 4108;
            Class_SWFMODULE = 4109;
            Class_ECUMODULE = 4110;
            Class_ICUMODULE = 4111;
            Class_LFE = 4162;
            Class_CFMODULE = 4170;
            Class_LCD = 4181;
            Class_PEM = 5006;
            Class_CMUMODULE = 5010;
            Class_PIC = 5011;
            Class_TSU = 5012;
            Class_PM = 5032;
         };
         Class class = 1 [json_name = "class"];
         string position = 2 [json_name = "position"];
         string serial_number = 3 [json_name = "serial-number"];
         uint32 index = 4 [json_name = "index"];
         uint32 chassis_index = 5 [json_name = "chassis-index"];
         uint32 board_index = 6 [json_name = "board-index"];
         string name = 7 [json_name = "name"];
         string entity_description = 8 [json_name = "entity-description"];
         string alias = 9 [json_name = "alias"];
         string vendor_type = 10 [json_name = "vendor-type"];
         uint32 contained_index = 11 [json_name = "contained-index"];
         uint32 parent_relative_position = 12 [json_name = "parent-relative-position"];
         string hardware_version = 13 [json_name = "hardware-version"];
         string firmware_version = 14 [json_name = "firmware-version"];
         string software_version = 15 [json_name = "software-version"];
         string module_name = 16 [json_name = "module-name"];
         bool is_fru = 17 [json_name = "is-fru"];
         enum AdminState {
            AdminState_INACTIVE = 0;
            AdminState_ACTIVE = 1;
            AdminState_NOTSUPPORTED = 2;
         };
         AdminState admin_state = 18 [json_name = "admin-state"];
         enum RunningState {
            RunningState_UNKNOWN = 0;
            RunningState_NORMAL = 1;
            RunningState_FAULT = 2;
            RunningState_OFFLINE = 3;
            RunningState_NOTSUPPORTED = 4;
            RunningState_OPTICALNOTEQUIPPED = 5;
            RunningState_NOTINSTALL = 6;
            RunningState_WRONGTYPE = 7;
            RunningState_REGISTERED = 8;
            RunningState_UNREGISTERED = 9;
            RunningState_POWEROFF = 10;
            RunningState_PORTX_PHYSICALX_DOWN = 11;
         };
         RunningState running_state = 19 [json_name = "running-state"];
         enum StandbyState {
            StandbyState_MASTER = 0;
            StandbyState_SLAVE = 1;
            StandbyState_NOTSUPPORTED = 2;
            StandbyState_SYSTEMMASTER = 3;
            StandbyState_SYSTEMSLAVE = 4;
         };
         StandbyState standby_state = 20 [json_name = "standby-state"];
         string system_oid = 21 [json_name = "system-oid"];
         string ls_name = 22 [json_name = "ls-name"];
      }
      repeated PhysicalEntity physical_entity = 1 [json_name = "physical-entity"];
   }
   PhysicalEntitys physical_entitys = 1 [json_name = "physical-entitys"];
   message LogicEntitys {
      message LogicEntity {
         enum Class {
            Class_OTHER = 0;
            Class_CHASSIS = 1;
            Class_MPUMODULE = 4;
            Class_LPUMODULE = 5;
            Class_SFUMODULE = 6;
            Class_CLOCKMODULE = 7;
            Class_CARDMODULE = 9;
            Class_PORT = 10;
            Class_FAN = 16;
            Class_POWERSUPPLY = 17;
            Class_CONTAINER = 18;
            Class_PPMODULE = 4108;
            Class_SWFMODULE = 4109;
            Class_ECUMODULE = 4110;
            Class_ICUMODULE = 4111;
            Class_LFE = 4162;
            Class_CFMODULE = 4170;
            Class_LCD = 4181;
            Class_PEM = 5006;
            Class_CMUMODULE = 5010;
            Class_PIC = 5011;
            Class_TSU = 5012;
            Class_PM = 5032;
         };
         Class class = 1 [json_name = "class"];
         string position = 2 [json_name = "position"];
         string serial_number = 3 [json_name = "serial-number"];
         enum VendorType {
            VendorType_UNKNOWN = 0;
            VendorType_CHASSIS = 3;
            VendorType_BOARDSLOT = 4;
            VendorType_MPUSLOT = 5;
            VendorType_LPUSLOT = 6;
            VendorType_SFUSLOT = 7;
            VendorType_ICUSLOT = 8;
            VendorType_ECUSLOT = 9;
            VendorType_CLKSLOT = 10;
            VendorType_FANSLOT = 11;
            VendorType_POWERSLOT = 12;
            VendorType_PICSLOT = 13;
            VendorType_OFCSLOT = 14;
            VendorType_LCDSLOT = 15;
            VendorType_CFCARDSLOT = 16;
            VendorType_CMUSLOT = 17;
            VendorType_FNAME8090UNKNOWN = 18;
            VendorType_FNAME8090WHOLE = 19;
            VendorType_FNAME8090NE5000EX = 20;
            VendorType_FNAME8090CLUSTERCENTRAL = 21;
            VendorType_FNAME8090NE5000EXX_VB = 22;
            VendorType_CHASSIS1 = 24;
            VendorType_CHASSIS2 = 25;
            VendorType_CCCCHASSIS = 26;
            VendorType_CE585048T4S2QEI = 27;
            VendorType_CE685048S4QEI = 28;
            VendorType_CE685048T4QEI = 29;
            VendorType_CR52MPUA = 30;
            VendorType_CR52MPUB = 31;
            VendorType_CR55MPUA = 32;
            VendorType_C55MPUA = 33;
            VendorType_C56MPUC = 34;
            VendorType_CR55MPUAB = 35;
            VendorType_CR56RPUA = 36;
            VendorType_CR52LPUA = 37;
            VendorType_CR52LPUB = 38;
            VendorType_CR52LPUC = 39;
            VendorType_CR52LPUE = 40;
            VendorType_CR52LPUR = 41;
            VendorType_CR52LPUF = 42;
            VendorType_CR52LPUG = 43;
            VendorType_CR52LPUH = 44;
            VendorType_CR52LPUI = 45;
            VendorType_CR52LPUK = 46;
            VendorType_CR52LPUM = 47;
            VendorType_CR52LPUN = 48;
            VendorType_CR52SPUC = 49;
            VendorType_CR56LPUF100A = 50;
            VendorType_CR56LPUF100B = 51;
            VendorType_CR56LPUI100A = 52;
            VendorType_CR56LPUI100B = 53;
            VendorType_CR56LPUI100C = 54;
            VendorType_CR56LPUF200A = 55;
            VendorType_RNRLPUB = 56;
            VendorType_RNRLPUD = 57;
            VendorType_RNRLPUF = 58;
            VendorType_RNRNS = 59;
            VendorType_RNRGRE = 60;
            VendorType_CR52SFUA = 61;
            VendorType_CR52SRUA = 62;
            VendorType_CR52SFUD = 63;
            VendorType_CR52SFUF = 64;
            VendorType_CR52SFUG = 65;
            VendorType_CR52SFUC = 66;
            VendorType_CR52SFEA = 67;
            VendorType_CR52KX_SFEA = 68;
            VendorType_CR55SFUA = 69;
            VendorType_CR55ECUA = 70;
            VendorType_CR55CX_ECUA = 71;
            VendorType_CR55ICUA = 72;
            VendorType_CR56SFUF100B = 73;
            VendorType_CR55SFUI100A = 74;
            VendorType_CR56SFUF100C = 75;
            VendorType_CR56SFU200A = 76;
            VendorType_CR55ECU100A = 77;
            VendorType_CR52SFEB = 78;
            VendorType_DE51SRU1A = 79;
            VendorType_DE51SRU1B = 80;
            VendorType_DE51SRU1C = 81;
            VendorType_CR5DSFUFA06C = 82;
            VendorType_CR5DSFUIK060 = 83;
            VendorType_BOOTROM = 84;
            VendorType_FLASH = 85;
            VendorType_EPLD1 = 86;
            VendorType_EPLD2 = 87;
            VendorType_CR52E1XX = 88;
            VendorType_CR52W1XX = 89;
            VendorType_CR52EAGF = 90;
            VendorType_CR52P4UF = 91;
            VendorType_CR52P1XX = 92;
            VendorType_CR52P4HF = 93;
            VendorType_CR52E2XX = 94;
            VendorType_CR52W2XX = 95;
            VendorType_CR52P2XX = 96;
            VendorType_CR52EMGE = 97;
            VendorType_CR52P8CF = 98;
            VendorType_CR52EFGE = 99;
            VendorType_CR52P1UF = 100;
            VendorType_CR52P2UF = 101;
            VendorType_CR52E5GF = 102;
            VendorType_CR52P4CF = 103;
            VendorType_CR53P1MZ = 104;
            VendorType_CR52D1MV = 105;
            VendorType_CR52E4XX = 106;
            VendorType_CR56P2XX = 107;
            VendorType_CR56L2XX = 108;
            VendorType_CR56E2XX = 109;
            VendorType_CR56D2XX = 110;
            VendorType_CR56L5XX = 111;
            VendorType_CR56E5XX = 112;
            VendorType_CR56P1MZ = 113;
            VendorType_CR56E1NC = 114;
            VendorType_CR56EFGF = 115;
            VendorType_CR52EKGFY = 116;
            VendorType_CR57EFGF = 117;
            VendorType_CR56E1NCC = 118;
            VendorType_CR52P1XZ = 119;
            VendorType_CR52E1XZ = 120;
            VendorType_CR52W1XZ = 121;
            VendorType_SPU = 122;
            VendorType_TSUA = 123;
            VendorType_CR56E1MC = 124;
            VendorType_CR56LAXFA = 125;
            VendorType_CR55OFCA = 126;
            VendorType_CR55CX_OFCA = 127;
            VendorType_CR52OFCB = 128;
            VendorType_CR55OFC40 = 129;
            VendorType_CR55OFC100A = 130;
            VendorType_CR55OFC100B = 131;
            VendorType_CR52OFCV = 132;
            VendorType_ETH = 133;
            VendorType_POS = 134;
            VendorType_GE = 135;
            VendorType_X_10GE = 136;
            VendorType_GF = 137;
            VendorType_X_10GF = 138;
            VendorType_X_40GF = 139;
            VendorType_X_10GFCOM = 140;
            VendorType_X_40GFSPLIT = 141;
            VendorType_VSR = 142;
            VendorType_LFE = 143;
            VendorType_POWER = 144;
            VendorType_CLOCK = 145;
            VendorType_FAN = 146;
            VendorType_LCD = 147;
            VendorType_CFCARD = 148;
            VendorType_CMU = 149;
            VendorType_CR5D00EKGF60 = 150;
            VendorType_CR5D00P4XX60 = 151;
            VendorType_CR5D00P8UF60 = 152;
            VendorType_CR5D00E4XX60 = 153;
            VendorType_CR5D00W4XX60 = 154;
            VendorType_CR5DLPUFA060 = 155;
            VendorType_CR5D00LEXF60 = 156;
            VendorType_CR5D00E2NC60 = 157;
            VendorType_CR5DE1NLAX60 = 158;
            VendorType_CR5DSFEBA06B = 159;
            VendorType_CR5D0MPUB460 = 160;
            VendorType_CR5DSFUFA06B = 161;
            VendorType_CR5DSFUIE060 = 162;
            VendorType_CR5D0MPUA450 = 163;
            VendorType_CR5DECUFA050 = 164;
            VendorType_CR5DSFUIA050 = 165;
            VendorType_CR5D00L5XX60 = 166;
            VendorType_CR5D00E5XX60 = 167;
            VendorType_CR5D00L2XX60 = 168;
            VendorType_CR5D00E2XX60 = 169;
            VendorType_CR5D00EFGF60 = 170;
            VendorType_CR5D00P1MZ60 = 171;
            VendorType_CR5D00P2XX60 = 172;
            VendorType_CR5M00E1MC60 = 173;
            VendorType_CR5D00E1NC60 = 174;
            VendorType_CR5D00LAXX60 = 175;
            VendorType_CR5D0OFCA060 = 176;
            VendorType_T1XCS = 177;
            VendorType_T1EXL2 = 178;
            VendorType_T1EX12 = 179;
            VendorType_T1EX8 = 180;
            VendorType_T1EH1 = 181;
            VendorType_T1EG24 = 182;
            VendorType_T1CH1 = 183;
            VendorType_T1CQ4 = 184;
            VendorType_T1SCA = 185;
            VendorType_T1FAN = 186;
            VendorType_T1PIU = 187;
            VendorType_T1EFI = 188;
            VendorType_XCA = 189;
            VendorType_TNU1SCC = 190;
            VendorType_C52MPUA = 191;
            VendorType_C52MPUB = 192;
            VendorType_LPUE = 193;
            VendorType_LPUF = 194;
            VendorType_TPA1EFI = 195;
            VendorType_TNT1EX8 = 196;
            VendorType_OTHER = 197;
         };
         VendorType vendor_type = 4 [json_name = "vendor-type"];
         string name = 5 [json_name = "name"];
         string entity_description = 6 [json_name = "entity-description"];
         uint32 index = 7 [json_name = "index"];
         enum OperState {
            OperState_UNKNOWN = 0;
            OperState_NORMAL = 1;
            OperState_FAULT = 2;
            OperState_OFFLINE = 3;
            OperState_NOTSUPPORTED = 4;
            OperState_OPTICALNOTEQUIPPED = 5;
            OperState_NOTINSTALL = 6;
            OperState_WRONGTYPE = 7;
            OperState_REGISTERED = 8;
            OperState_UNREGISTERED = 9;
            OperState_POWEROFF = 10;
            OperState_PORTX_PHYSICALX_DOWN = 11;
         };
         OperState oper_state = 8 [json_name = "oper-state"];
         uint32 parent_index = 9 [json_name = "parent-index"];
         uint32 parent_relative_position = 10 [json_name = "parent-relative-position"];
         string memo = 11 [json_name = "memo"];
      }
      repeated LogicEntity logic_entity = 1 [json_name = "logic-entity"];
   }
   LogicEntitys logic_entitys = 2 [json_name = "logic-entitys"];
   message Chassiss {
      message Chassis {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string type = 3 [json_name = "type"];
         string service_type = 4 [json_name = "service-type"];
         uint32 slot_num = 5 [json_name = "slot-num"];
         uint32 board_num = 6 [json_name = "board-num"];
         uint32 fan_num = 7 [json_name = "fan-num"];
         uint32 power_num = 8 [json_name = "power-num"];
         uint32 up_time = 9 [json_name = "up-time"];
         uint32 status_last_change = 10 [json_name = "status-last-change"];
         uint32 entity_last_change = 11 [json_name = "entity-last-change"];
         uint32 current_id = 12 [json_name = "current-id"];
         uint32 next_id = 13 [json_name = "next-id"];
         enum CurrentRunMode {
            CurrentRunMode_UNKNOWN = 0;
            CurrentRunMode_SINGLE = 1;
            CurrentRunMode_CCCX_0 = 2;
            CurrentRunMode_CCCX_1 = 3;
            CurrentRunMode_CCCX_2 = 4;
         };
         CurrentRunMode current_run_mode = 14 [json_name = "current-run-mode"];
         enum NextRunMode {
            NextRunMode_UNKNOWN = 0;
            NextRunMode_SINGLE = 1;
            NextRunMode_CCCX_0 = 2;
            NextRunMode_CCCX_1 = 3;
            NextRunMode_CCCX_2 = 4;
         };
         NextRunMode next_run_mode = 15 [json_name = "next-run-mode"];
         uint32 dust_clean_cycle = 16 [json_name = "dust-clean-cycle"];
         string last_clean_date = 17 [json_name = "last-clean-date"];
         uint32 up_to_last_clean = 18 [json_name = "up-to-last-clean"];
         uint32 alarm_exist_days = 19 [json_name = "alarm-exist-days"];
         message MonitorBoardChanges {
            message MonitorBoardChange {
               uint32 board_index = 1 [json_name = "board-index"];
               uint32 status_last_change = 2 [json_name = "status-last-change"];
               uint32 entity_last_change = 3 [json_name = "entity-last-change"];
            }
            repeated MonitorBoardChange monitor_board_change = 1 [json_name = "monitor-board-change"];
         }
         MonitorBoardChanges monitor_board_changes = 20 [json_name = "monitor-board-changes"];
      }
      repeated Chassis chassis = 1 [json_name = "chassis"];
   }
   Chassiss chassiss = 3 [json_name = "chassiss"];
   message LogicContainers {
      message LogicContainer {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         enum ContainerType {
            ContainerType_UNKNOWN = 0;
            ContainerType_BOARDSLOT = 1;
            ContainerType_MPUSLOT = 2;
            ContainerType_LPUSLOT = 3;
            ContainerType_SFUSLOT = 4;
            ContainerType_ICUSLOT = 5;
            ContainerType_ECUSLOT = 6;
            ContainerType_CLKSLOT = 7;
            ContainerType_CMUSLOT = 8;
            ContainerType_FANSLOT = 9;
            ContainerType_POWERSLOT = 10;
            ContainerType_LCDSLOT = 11;
            ContainerType_PICSLOT = 12;
            ContainerType_OFCSLOT = 13;
            ContainerType_CFCARDSLOT = 14;
            ContainerType_VIRTUALSLOT = 15;
            ContainerType_VIRTUALSUBSLOT = 16;
         };
         ContainerType container_type = 3 [json_name = "container-type"];
         enum EquipedEntityType {
            EquipedEntityType_UNKNOWN = 0;
            EquipedEntityType_CHASSIS = 3;
            EquipedEntityType_BOARDSLOT = 4;
            EquipedEntityType_MPUSLOT = 5;
            EquipedEntityType_LPUSLOT = 6;
            EquipedEntityType_SFUSLOT = 7;
            EquipedEntityType_ICUSLOT = 8;
            EquipedEntityType_ECUSLOT = 9;
            EquipedEntityType_CLKSLOT = 10;
            EquipedEntityType_FANSLOT = 11;
            EquipedEntityType_POWERSLOT = 12;
            EquipedEntityType_PICSLOT = 13;
            EquipedEntityType_OFCSLOT = 14;
            EquipedEntityType_LCDSLOT = 15;
            EquipedEntityType_CFCARDSLOT = 16;
            EquipedEntityType_CMUSLOT = 17;
            EquipedEntityType_FNAME8090UNKNOWN = 18;
            EquipedEntityType_FNAME8090WHOLE = 19;
            EquipedEntityType_FNAME8090NE5000EX = 20;
            EquipedEntityType_FNAME8090CLUSTERCENTRAL = 21;
            EquipedEntityType_FNAME8090NE5000EXX_VB = 22;
            EquipedEntityType_CHASSIS1 = 24;
            EquipedEntityType_CHASSIS2 = 25;
            EquipedEntityType_CCCCHASSIS = 26;
            EquipedEntityType_CE585048T4S2QEI = 27;
            EquipedEntityType_CE685048S4QEI = 28;
            EquipedEntityType_CE685048T4QEI = 29;
            EquipedEntityType_CR52MPUA = 30;
            EquipedEntityType_CR52MPUB = 31;
            EquipedEntityType_CR55MPUA = 32;
            EquipedEntityType_C55MPUA = 33;
            EquipedEntityType_C56MPUC = 34;
            EquipedEntityType_CR55MPUAB = 35;
            EquipedEntityType_CR56RPUA = 36;
            EquipedEntityType_CR52LPUA = 37;
            EquipedEntityType_CR52LPUB = 38;
            EquipedEntityType_CR52LPUC = 39;
            EquipedEntityType_CR52LPUE = 40;
            EquipedEntityType_CR52LPUR = 41;
            EquipedEntityType_CR52LPUF = 42;
            EquipedEntityType_CR52LPUG = 43;
            EquipedEntityType_CR52LPUH = 44;
            EquipedEntityType_CR52LPUI = 45;
            EquipedEntityType_CR52LPUK = 46;
            EquipedEntityType_CR52LPUM = 47;
            EquipedEntityType_CR52LPUN = 48;
            EquipedEntityType_CR52SPUC = 49;
            EquipedEntityType_CR56LPUF100A = 50;
            EquipedEntityType_CR56LPUF100B = 51;
            EquipedEntityType_CR56LPUI100A = 52;
            EquipedEntityType_CR56LPUI100B = 53;
            EquipedEntityType_CR56LPUI100C = 54;
            EquipedEntityType_CR56LPUF200A = 55;
            EquipedEntityType_RNRLPUB = 56;
            EquipedEntityType_RNRLPUD = 57;
            EquipedEntityType_RNRLPUF = 58;
            EquipedEntityType_RNRNS = 59;
            EquipedEntityType_RNRGRE = 60;
            EquipedEntityType_CR52SFUA = 61;
            EquipedEntityType_CR52SRUA = 62;
            EquipedEntityType_CR52SFUD = 63;
            EquipedEntityType_CR52SFUF = 64;
            EquipedEntityType_CR52SFUG = 65;
            EquipedEntityType_CR52SFUC = 66;
            EquipedEntityType_CR52SFEA = 67;
            EquipedEntityType_CR52KX_SFEA = 68;
            EquipedEntityType_CR55SFUA = 69;
            EquipedEntityType_CR55ECUA = 70;
            EquipedEntityType_CR55CX_ECUA = 71;
            EquipedEntityType_CR55ICUA = 72;
            EquipedEntityType_CR56SFUF100B = 73;
            EquipedEntityType_CR55SFUI100A = 74;
            EquipedEntityType_CR56SFUF100C = 75;
            EquipedEntityType_CR56SFU200A = 76;
            EquipedEntityType_CR55ECU100A = 77;
            EquipedEntityType_CR52SFEB = 78;
            EquipedEntityType_DE51SRU1A = 79;
            EquipedEntityType_DE51SRU1B = 80;
            EquipedEntityType_DE51SRU1C = 81;
            EquipedEntityType_CR5DSFUFA06C = 82;
            EquipedEntityType_CR5DSFUIK060 = 83;
            EquipedEntityType_BOOTROM = 84;
            EquipedEntityType_FLASH = 85;
            EquipedEntityType_EPLD1 = 86;
            EquipedEntityType_EPLD2 = 87;
            EquipedEntityType_CR52E1XX = 88;
            EquipedEntityType_CR52W1XX = 89;
            EquipedEntityType_CR52EAGF = 90;
            EquipedEntityType_CR52P4UF = 91;
            EquipedEntityType_CR52P1XX = 92;
            EquipedEntityType_CR52P4HF = 93;
            EquipedEntityType_CR52E2XX = 94;
            EquipedEntityType_CR52W2XX = 95;
            EquipedEntityType_CR52P2XX = 96;
            EquipedEntityType_CR52EMGE = 97;
            EquipedEntityType_CR52P8CF = 98;
            EquipedEntityType_CR52EFGE = 99;
            EquipedEntityType_CR52P1UF = 100;
            EquipedEntityType_CR52P2UF = 101;
            EquipedEntityType_CR52E5GF = 102;
            EquipedEntityType_CR52P4CF = 103;
            EquipedEntityType_CR53P1MZ = 104;
            EquipedEntityType_CR52D1MV = 105;
            EquipedEntityType_CR52E4XX = 106;
            EquipedEntityType_CR56P2XX = 107;
            EquipedEntityType_CR56L2XX = 108;
            EquipedEntityType_CR56E2XX = 109;
            EquipedEntityType_CR56D2XX = 110;
            EquipedEntityType_CR56L5XX = 111;
            EquipedEntityType_CR56E5XX = 112;
            EquipedEntityType_CR56P1MZ = 113;
            EquipedEntityType_CR56E1NC = 114;
            EquipedEntityType_CR56EFGF = 115;
            EquipedEntityType_CR52EKGFY = 116;
            EquipedEntityType_CR57EFGF = 117;
            EquipedEntityType_CR56E1NCC = 118;
            EquipedEntityType_CR52P1XZ = 119;
            EquipedEntityType_CR52E1XZ = 120;
            EquipedEntityType_CR52W1XZ = 121;
            EquipedEntityType_SPU = 122;
            EquipedEntityType_TSUA = 123;
            EquipedEntityType_CR56E1MC = 124;
            EquipedEntityType_CR56LAXFA = 125;
            EquipedEntityType_CR55OFCA = 126;
            EquipedEntityType_CR55CX_OFCA = 127;
            EquipedEntityType_CR52OFCB = 128;
            EquipedEntityType_CR55OFC40 = 129;
            EquipedEntityType_CR55OFC100A = 130;
            EquipedEntityType_CR55OFC100B = 131;
            EquipedEntityType_CR52OFCV = 132;
            EquipedEntityType_ETH = 133;
            EquipedEntityType_POS = 134;
            EquipedEntityType_GE = 135;
            EquipedEntityType_X_10GE = 136;
            EquipedEntityType_GF = 137;
            EquipedEntityType_X_10GF = 138;
            EquipedEntityType_X_40GF = 139;
            EquipedEntityType_X_10GFCOM = 140;
            EquipedEntityType_X_40GFSPLIT = 141;
            EquipedEntityType_VSR = 142;
            EquipedEntityType_LFE = 143;
            EquipedEntityType_POWER = 144;
            EquipedEntityType_CLOCK = 145;
            EquipedEntityType_FAN = 146;
            EquipedEntityType_LCD = 147;
            EquipedEntityType_CFCARD = 148;
            EquipedEntityType_CMU = 149;
            EquipedEntityType_CR5D00EKGF60 = 150;
            EquipedEntityType_CR5D00P4XX60 = 151;
            EquipedEntityType_CR5D00P8UF60 = 152;
            EquipedEntityType_CR5D00E4XX60 = 153;
            EquipedEntityType_CR5D00W4XX60 = 154;
            EquipedEntityType_CR5DLPUFA060 = 155;
            EquipedEntityType_CR5D00LEXF60 = 156;
            EquipedEntityType_CR5D00E2NC60 = 157;
            EquipedEntityType_CR5DE1NLAX60 = 158;
            EquipedEntityType_CR5DSFEBA06B = 159;
            EquipedEntityType_CR5D0MPUB460 = 160;
            EquipedEntityType_CR5DSFUFA06B = 161;
            EquipedEntityType_CR5DSFUIE060 = 162;
            EquipedEntityType_CR5D0MPUA450 = 163;
            EquipedEntityType_CR5DECUFA050 = 164;
            EquipedEntityType_CR5DSFUIA050 = 165;
            EquipedEntityType_CR5D00L5XX60 = 166;
            EquipedEntityType_CR5D00E5XX60 = 167;
            EquipedEntityType_CR5D00L2XX60 = 168;
            EquipedEntityType_CR5D00E2XX60 = 169;
            EquipedEntityType_CR5D00EFGF60 = 170;
            EquipedEntityType_CR5D00P1MZ60 = 171;
            EquipedEntityType_CR5D00P2XX60 = 172;
            EquipedEntityType_CR5M00E1MC60 = 173;
            EquipedEntityType_CR5D00E1NC60 = 174;
            EquipedEntityType_CR5D00LAXX60 = 175;
            EquipedEntityType_CR5D0OFCA060 = 176;
            EquipedEntityType_T1XCS = 177;
            EquipedEntityType_T1EXL2 = 178;
            EquipedEntityType_T1EX12 = 179;
            EquipedEntityType_T1EX8 = 180;
            EquipedEntityType_T1EH1 = 181;
            EquipedEntityType_T1EG24 = 182;
            EquipedEntityType_T1CH1 = 183;
            EquipedEntityType_T1CQ4 = 184;
            EquipedEntityType_T1SCA = 185;
            EquipedEntityType_T1FAN = 186;
            EquipedEntityType_T1PIU = 187;
            EquipedEntityType_T1EFI = 188;
            EquipedEntityType_XCA = 189;
            EquipedEntityType_TNU1SCC = 190;
            EquipedEntityType_C52MPUA = 191;
            EquipedEntityType_C52MPUB = 192;
            EquipedEntityType_LPUE = 193;
            EquipedEntityType_LPUF = 194;
            EquipedEntityType_TPA1EFI = 195;
            EquipedEntityType_TNT1EX8 = 196;
            EquipedEntityType_OTHER = 197;
         };
         EquipedEntityType equiped_entity_type = 4 [json_name = "equiped-entity-type"];
         message SupportedEntityTypes {
            message SupportedEntityType {
               enum EntityType {
                  EntityType_UNKNOWN = 0;
                  EntityType_CHASSIS = 3;
                  EntityType_BOARDSLOT = 4;
                  EntityType_MPUSLOT = 5;
                  EntityType_LPUSLOT = 6;
                  EntityType_SFUSLOT = 7;
                  EntityType_ICUSLOT = 8;
                  EntityType_ECUSLOT = 9;
                  EntityType_CLKSLOT = 10;
                  EntityType_FANSLOT = 11;
                  EntityType_POWERSLOT = 12;
                  EntityType_PICSLOT = 13;
                  EntityType_OFCSLOT = 14;
                  EntityType_LCDSLOT = 15;
                  EntityType_CFCARDSLOT = 16;
                  EntityType_CMUSLOT = 17;
                  EntityType_FNAME8090UNKNOWN = 18;
                  EntityType_FNAME8090WHOLE = 19;
                  EntityType_FNAME8090NE5000EX = 20;
                  EntityType_FNAME8090CLUSTERCENTRAL = 21;
                  EntityType_FNAME8090NE5000EXX_VB = 22;
                  EntityType_CHASSIS1 = 24;
                  EntityType_CHASSIS2 = 25;
                  EntityType_CCCCHASSIS = 26;
                  EntityType_CE585048T4S2QEI = 27;
                  EntityType_CE685048S4QEI = 28;
                  EntityType_CE685048T4QEI = 29;
                  EntityType_CR52MPUA = 30;
                  EntityType_CR52MPUB = 31;
                  EntityType_CR55MPUA = 32;
                  EntityType_C55MPUA = 33;
                  EntityType_C56MPUC = 34;
                  EntityType_CR55MPUAB = 35;
                  EntityType_CR56RPUA = 36;
                  EntityType_CR52LPUA = 37;
                  EntityType_CR52LPUB = 38;
                  EntityType_CR52LPUC = 39;
                  EntityType_CR52LPUE = 40;
                  EntityType_CR52LPUR = 41;
                  EntityType_CR52LPUF = 42;
                  EntityType_CR52LPUG = 43;
                  EntityType_CR52LPUH = 44;
                  EntityType_CR52LPUI = 45;
                  EntityType_CR52LPUK = 46;
                  EntityType_CR52LPUM = 47;
                  EntityType_CR52LPUN = 48;
                  EntityType_CR52SPUC = 49;
                  EntityType_CR56LPUF100A = 50;
                  EntityType_CR56LPUF100B = 51;
                  EntityType_CR56LPUI100A = 52;
                  EntityType_CR56LPUI100B = 53;
                  EntityType_CR56LPUI100C = 54;
                  EntityType_CR56LPUF200A = 55;
                  EntityType_RNRLPUB = 56;
                  EntityType_RNRLPUD = 57;
                  EntityType_RNRLPUF = 58;
                  EntityType_RNRNS = 59;
                  EntityType_RNRGRE = 60;
                  EntityType_CR52SFUA = 61;
                  EntityType_CR52SRUA = 62;
                  EntityType_CR52SFUD = 63;
                  EntityType_CR52SFUF = 64;
                  EntityType_CR52SFUG = 65;
                  EntityType_CR52SFUC = 66;
                  EntityType_CR52SFEA = 67;
                  EntityType_CR52KX_SFEA = 68;
                  EntityType_CR55SFUA = 69;
                  EntityType_CR55ECUA = 70;
                  EntityType_CR55CX_ECUA = 71;
                  EntityType_CR55ICUA = 72;
                  EntityType_CR56SFUF100B = 73;
                  EntityType_CR55SFUI100A = 74;
                  EntityType_CR56SFUF100C = 75;
                  EntityType_CR56SFU200A = 76;
                  EntityType_CR55ECU100A = 77;
                  EntityType_CR52SFEB = 78;
                  EntityType_DE51SRU1A = 79;
                  EntityType_DE51SRU1B = 80;
                  EntityType_DE51SRU1C = 81;
                  EntityType_CR5DSFUFA06C = 82;
                  EntityType_CR5DSFUIK060 = 83;
                  EntityType_BOOTROM = 84;
                  EntityType_FLASH = 85;
                  EntityType_EPLD1 = 86;
                  EntityType_EPLD2 = 87;
                  EntityType_CR52E1XX = 88;
                  EntityType_CR52W1XX = 89;
                  EntityType_CR52EAGF = 90;
                  EntityType_CR52P4UF = 91;
                  EntityType_CR52P1XX = 92;
                  EntityType_CR52P4HF = 93;
                  EntityType_CR52E2XX = 94;
                  EntityType_CR52W2XX = 95;
                  EntityType_CR52P2XX = 96;
                  EntityType_CR52EMGE = 97;
                  EntityType_CR52P8CF = 98;
                  EntityType_CR52EFGE = 99;
                  EntityType_CR52P1UF = 100;
                  EntityType_CR52P2UF = 101;
                  EntityType_CR52E5GF = 102;
                  EntityType_CR52P4CF = 103;
                  EntityType_CR53P1MZ = 104;
                  EntityType_CR52D1MV = 105;
                  EntityType_CR52E4XX = 106;
                  EntityType_CR56P2XX = 107;
                  EntityType_CR56L2XX = 108;
                  EntityType_CR56E2XX = 109;
                  EntityType_CR56D2XX = 110;
                  EntityType_CR56L5XX = 111;
                  EntityType_CR56E5XX = 112;
                  EntityType_CR56P1MZ = 113;
                  EntityType_CR56E1NC = 114;
                  EntityType_CR56EFGF = 115;
                  EntityType_CR52EKGFY = 116;
                  EntityType_CR57EFGF = 117;
                  EntityType_CR56E1NCC = 118;
                  EntityType_CR52P1XZ = 119;
                  EntityType_CR52E1XZ = 120;
                  EntityType_CR52W1XZ = 121;
                  EntityType_SPU = 122;
                  EntityType_TSUA = 123;
                  EntityType_CR56E1MC = 124;
                  EntityType_CR56LAXFA = 125;
                  EntityType_CR55OFCA = 126;
                  EntityType_CR55CX_OFCA = 127;
                  EntityType_CR52OFCB = 128;
                  EntityType_CR55OFC40 = 129;
                  EntityType_CR55OFC100A = 130;
                  EntityType_CR55OFC100B = 131;
                  EntityType_CR52OFCV = 132;
                  EntityType_ETH = 133;
                  EntityType_POS = 134;
                  EntityType_GE = 135;
                  EntityType_X_10GE = 136;
                  EntityType_GF = 137;
                  EntityType_X_10GF = 138;
                  EntityType_X_40GF = 139;
                  EntityType_X_10GFCOM = 140;
                  EntityType_X_40GFSPLIT = 141;
                  EntityType_VSR = 142;
                  EntityType_LFE = 143;
                  EntityType_POWER = 144;
                  EntityType_CLOCK = 145;
                  EntityType_FAN = 146;
                  EntityType_LCD = 147;
                  EntityType_CFCARD = 148;
                  EntityType_CMU = 149;
                  EntityType_CR5D00EKGF60 = 150;
                  EntityType_CR5D00P4XX60 = 151;
                  EntityType_CR5D00P8UF60 = 152;
                  EntityType_CR5D00E4XX60 = 153;
                  EntityType_CR5D00W4XX60 = 154;
                  EntityType_CR5DLPUFA060 = 155;
                  EntityType_CR5D00LEXF60 = 156;
                  EntityType_CR5D00E2NC60 = 157;
                  EntityType_CR5DE1NLAX60 = 158;
                  EntityType_CR5DSFEBA06B = 159;
                  EntityType_CR5D0MPUB460 = 160;
                  EntityType_CR5DSFUFA06B = 161;
                  EntityType_CR5DSFUIE060 = 162;
                  EntityType_CR5D0MPUA450 = 163;
                  EntityType_CR5DECUFA050 = 164;
                  EntityType_CR5DSFUIA050 = 165;
                  EntityType_CR5D00L5XX60 = 166;
                  EntityType_CR5D00E5XX60 = 167;
                  EntityType_CR5D00L2XX60 = 168;
                  EntityType_CR5D00E2XX60 = 169;
                  EntityType_CR5D00EFGF60 = 170;
                  EntityType_CR5D00P1MZ60 = 171;
                  EntityType_CR5D00P2XX60 = 172;
                  EntityType_CR5M00E1MC60 = 173;
                  EntityType_CR5D00E1NC60 = 174;
                  EntityType_CR5D00LAXX60 = 175;
                  EntityType_CR5D0OFCA060 = 176;
                  EntityType_T1XCS = 177;
                  EntityType_T1EXL2 = 178;
                  EntityType_T1EX12 = 179;
                  EntityType_T1EX8 = 180;
                  EntityType_T1EH1 = 181;
                  EntityType_T1EG24 = 182;
                  EntityType_T1CH1 = 183;
                  EntityType_T1CQ4 = 184;
                  EntityType_T1SCA = 185;
                  EntityType_T1FAN = 186;
                  EntityType_T1PIU = 187;
                  EntityType_T1EFI = 188;
                  EntityType_XCA = 189;
                  EntityType_TNU1SCC = 190;
                  EntityType_C52MPUA = 191;
                  EntityType_C52MPUB = 192;
                  EntityType_LPUE = 193;
                  EntityType_LPUF = 194;
                  EntityType_TPA1EFI = 195;
                  EntityType_TNT1EX8 = 196;
                  EntityType_OTHER = 197;
               };
               EntityType entity_type = 1 [json_name = "entity-type"];
            }
            repeated SupportedEntityType supported_entity_type = 1 [json_name = "supported-entity-type"];
         }
         SupportedEntityTypes supported_entity_types = 5 [json_name = "supported-entity-types"];
      }
      repeated LogicContainer logic_container = 1 [json_name = "logic-container"];
   }
   LogicContainers logic_containers = 4 [json_name = "logic-containers"];
   message Containers {
      message Container {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string type = 3 [json_name = "type"];
         string equiped_entity_type = 4 [json_name = "equiped-entity-type"];
         message SupportedEntityTypes {
            message SupportedEntityType {
               string entity_type = 1 [json_name = "entity-type"];
            }
            repeated SupportedEntityType supported_entity_type = 1 [json_name = "supported-entity-type"];
         }
         SupportedEntityTypes supported_entity_types = 5 [json_name = "supported-entity-types"];
      }
      repeated Container container = 1 [json_name = "container"];
   }
   Containers containers = 5 [json_name = "containers"];
   message MpuBoards {
      message MpuBoard {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string board_type = 3 [json_name = "board-type"];
         uint32 up_time = 4 [json_name = "up-time"];
         uint32 sdram_size = 5 [json_name = "sdram-size"];
         uint32 nvram_size = 6 [json_name = "nvram-size"];
         uint32 flash_size = 7 [json_name = "flash-size"];
         enum LsRole {
            LsRole_UNKNOWN = 0;
            LsRole_MMB = 1;
            LsRole_PLMB = 2;
            LsRole_ACMB = 3;
            LsRole_MB = 4;
            LsRole_LC = 5;
            LsRole_SYSMMB = 6;
            LsRole_SYSMB = 7;
         };
         LsRole ls_role = 8 [json_name = "ls-role"];
         string last_reset_time = 9 [json_name = "last-reset-time"];
         string last_reset_reason = 10 [json_name = "last-reset-reason"];
         string register_time = 11 [json_name = "register-time"];
         bool is_register = 12 [json_name = "is-register"];
      }
      repeated MpuBoard mpu_board = 1 [json_name = "mpu-board"];
   }
   MpuBoards mpu_boards = 6 [json_name = "mpu-boards"];
   message LpuBoards {
      message LpuBoard {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string board_type = 3 [json_name = "board-type"];
         uint32 sdram_size = 4 [json_name = "sdram-size"];
         uint32 flash_size = 5 [json_name = "flash-size"];
         uint32 up_time = 6 [json_name = "up-time"];
         uint32 np_rdram_size = 7 [json_name = "np-rdram-size"];
         uint32 np_sram_size = 8 [json_name = "np-sram-size"];
         enum ServiceType {
            ServiceType_LPU = 0;
            ServiceType_RNR = 1;
            ServiceType_TSU = 2;
            ServiceType_NS = 3;
            ServiceType_GRE = 4;
            ServiceType_VSU = 5;
         };
         ServiceType service_type = 9 [json_name = "service-type"];
         enum NextServiceType {
            NextServiceType_LPU = 0;
            NextServiceType_RNR = 1;
            NextServiceType_TSU = 2;
            NextServiceType_NS = 3;
            NextServiceType_GRE = 4;
            NextServiceType_VSU = 5;
         };
         NextServiceType next_service_type = 10 [json_name = "next-service-type"];
         uint32 pic_num = 11 [json_name = "pic-num"];
         uint32 sub_slot_num = 12 [json_name = "sub-slot-num"];
         string clock_8k_port = 13 [json_name = "clock-8k-port"];
         uint32 current_l3_clk = 14 [json_name = "current-l3-clk"];
         string register_time = 15 [json_name = "register-time"];
         bool is_register = 16 [json_name = "is-register"];
      }
      repeated LpuBoard lpu_board = 1 [json_name = "lpu-board"];
   }
   LpuBoards lpu_boards = 7 [json_name = "lpu-boards"];
   message SfuBoards {
      message SfuBoard {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string board_type = 3 [json_name = "board-type"];
         uint32 sdram_size = 4 [json_name = "sdram-size"];
         uint32 flash_size = 5 [json_name = "flash-size"];
         uint32 up_time = 6 [json_name = "up-time"];
         string register_time = 7 [json_name = "register-time"];
         bool is_register = 8 [json_name = "is-register"];
      }
      repeated SfuBoard sfu_board = 1 [json_name = "sfu-board"];
   }
   SfuBoards sfu_boards = 8 [json_name = "sfu-boards"];
   message Cards {
      message Card {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string type = 3 [json_name = "type"];
         string hard_type = 4 [json_name = "hard-type"];
         uint32 port_num = 5 [json_name = "port-num"];
         enum InitStatus {
            InitStatus_FAIL = 0;
            InitStatus_SUCCESS = 1;
            InitStatus_UNKNOWN = 2;
         };
         InitStatus init_status = 6 [json_name = "init-status"];
         enum RegisterStatus {
            RegisterStatus_UNREGISTERED = 0;
            RegisterStatus_REGISTERED = 1;
            RegisterStatus_UNKNOWN = 2;
         };
         RegisterStatus register_status = 7 [json_name = "register-status"];
         message Pic {
            enum LogicStatus {
               LogicStatus_FAIL = 0;
               LogicStatus_SUCCESS = 1;
               LogicStatus_UNKNOWN = 2;
            };
            LogicStatus logic_status = 1 [json_name = "logic-status"];
            string up_time = 2 [json_name = "up-time"];
         }
         Pic pic = 8 [json_name = "pic"];
      }
      repeated Card card = 1 [json_name = "card"];
   }
   Cards cards = 9 [json_name = "cards"];
   message CfCards {
      message CfCard {
         string position = 1 [json_name = "position"];
         string serial_number = 2 [json_name = "serial-number"];
         uint32 index = 3 [json_name = "index"];
         string card_type = 4 [json_name = "card-type"];
         uint32 memory_size = 5 [json_name = "memory-size"];
         uint32 memory_used = 6 [json_name = "memory-used"];
         uint32 memory_free = 7 [json_name = "memory-free"];
      }
      repeated CfCard cf_card = 1 [json_name = "cf-card"];
   }
   CfCards cf_cards = 10 [json_name = "cf-cards"];
   message Ports {
      message Port {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         enum AdminState {
            AdminState_INACTIVE = 0;
            AdminState_ACTIVE = 1;
            AdminState_NOTSUPPORTED = 2;
         };
         AdminState admin_state = 3 [json_name = "admin-state"];
         enum Type {
            Type_UNKNOWN = 0;
            Type_ETH = 1;
            Type_POS = 2;
            Type_CPOS = 3;
            Type_E1 = 4;
            Type_GE = 5;
            Type_X_10GE = 6;
            Type_GF = 7;
            Type_X_10GF = 8;
            Type_X_40GF = 9;
            Type_X_10GFCOM = 10;
            Type_X_40GFSPLIT = 11;
            Type_OTN = 12;
         };
         Type type = 4 [json_name = "type"];
         enum HardType {
            HardType_UNKNOWN = 0;
            HardType_ETHLANPORT = 1;
            HardType_ETHWANPORT = 2;
            HardType_ETHGEPORT = 3;
            HardType_ETH10GEPORT = 4;
            HardType_ETHGFPORT = 5;
            HardType_ETH10GFPORT = 6;
            HardType_ETH40GFPORT = 7;
            HardType_ETH10GFCOMPORT = 8;
            HardType_ETH40GFSPLITPORT = 9;
            HardType_ETHFEPORT = 10;
            HardType_ETHMGEPORT = 11;
            HardType_POSPORT = 12;
            HardType_OTNPORT = 13;
            HardType_CPOSPORT = 14;
            HardType_E1PORT = 15;
            HardType_ETHCLUSTERPORT = 16;
            HardType_ETHPORT = 17;
            HardType_EPORT = 18;
            HardType_OPORT = 19;
         };
         HardType hard_type = 5 [json_name = "hard-type"];
         enum LoopbackMode {
            LoopbackMode_NOLOOPBACK = 0;
            LoopbackMode_LOCALLOOPBACK = 1;
            LoopbackMode_REMOTELOOPBACK = 2;
         };
         LoopbackMode loopback_mode = 6 [json_name = "loopback-mode"];
         uint32 enable_transmission_delay = 7 [json_name = "enable-transmission-delay"];
         string last_up_time = 8 [json_name = "last-up-time"];
         string last_down_time = 9 [json_name = "last-down-time"];
         enum MediumType {
            MediumType_NOTSUPPORTED = 0;
            MediumType_COPPER = 1;
            MediumType_FIBER = 2;
         };
         MediumType medium_type = 10 [json_name = "medium-type"];
         bool optical_equipped = 11 [json_name = "optical-equipped"];
         uint64 physical_bandwidth = 12 [json_name = "physical-bandwidth"];
         message Ethernet {
            enum Speed {
               Speed_X_10M = 0;
               Speed_X_100M = 1;
               Speed_X_1000M = 2;
               Speed_X_2500M = 5;
               Speed_X_10G = 6;
               Speed_X_40G = 7;
               Speed_X_100G = 8;
               Speed_AUTO = 9;
               Speed_X_1G = 10;
               Speed_X_2G = 11;
               Speed_X_3G = 12;
               Speed_X_4G = 13;
               Speed_X_1X_25G = 14;
               Speed_X_2X_5G = 15;
               Speed_X_3X_75G = 16;
               Speed_X_5G = 17;
               Speed_X_15G = 18;
               Speed_X_20G = 19;
               Speed_X_25G = 20;
               Speed_X_30G = 21;
               Speed_X_35G = 22;
               Speed_X_45G = 24;
               Speed_X_50G = 25;
               Speed_X_55G = 26;
               Speed_X_60G = 27;
               Speed_X_65G = 28;
               Speed_X_70G = 29;
               Speed_X_75G = 30;
               Speed_X_80G = 31;
               Speed_X_85G = 32;
               Speed_X_90G = 33;
               Speed_X_95G = 34;
               Speed_X_0G = 35;
               Speed_X_400G = 36;
            };
            Speed speed = 1 [json_name = "speed"];
            enum Duplex {
               Duplex_AUTO = 0;
               Duplex_HALF = 1;
               Duplex_FULL = 2;
            };
            Duplex duplex = 2 [json_name = "duplex"];
            enum Negotiation {
               Negotiation_DISABLED = 0;
               Negotiation_ENABLED = 1;
               Negotiation_DEFAULT = 255;
            };
            Negotiation negotiation = 3 [json_name = "negotiation"];
            enum NegotiationMode {
               NegotiationMode_SLAVE = 0;
               NegotiationMode_NA = 1;
               NegotiationMode_AUTO = 2;
               NegotiationMode_MASTER = 3;
            };
            NegotiationMode negotiation_mode = 4 [json_name = "negotiation-mode"];
            uint32 down_hold_time = 5 [json_name = "down-hold-time"];
            uint32 up_hold_time = 6 [json_name = "up-hold-time"];
            enum TransMode {
               TransMode_LANX_MODE = 0;
               TransMode_WANX_MODE = 1;
               TransMode_OTNX_MODE = 2;
            };
            TransMode trans_mode = 7 [json_name = "trans-mode"];
            enum SpeedSwitchMode {
               SpeedSwitchMode_MANUAL = 0;
               SpeedSwitchMode_AUTO = 1;
            };
            SpeedSwitchMode speed_switch_mode = 8 [json_name = "speed-switch-mode"];
            enum BitError {
               BitError_CRC = 0;
               BitError_PREFEC = 1;
            };
            BitError bit_error = 9 [json_name = "bit-error"];
            uint32 trigger_time = 10 [json_name = "trigger-time"];
            enum TriggerTimeType {
               TriggerTimeType_SECOND = 0;
               TriggerTimeType_X_200MS = 1;
            };
            TriggerTimeType trigger_time_type = 11 [json_name = "trigger-time-type"];
            enum TxPowerCfgType {
               TxPowerCfgType_TXX_POWERX_TARGET = 0;
               TxPowerCfgType_ATTENUATION = 1;
            };
            TxPowerCfgType tx_power_cfg_type = 12 [json_name = "tx-power-cfg-type"];
            int32 tx_power_target_value = 13 [json_name = "tx-power-target-value"];
            enum FecMode {
               FecMode_NONE = 0;
               FecMode_STANDARD = 1;
               FecMode_ENHANCED = 2;
               FecMode_ENHANCEDX_IX_7 = 3;
               FecMode_ENHANCEDX_IX_4 = 4;
               FecMode_LHAULX_SD = 5;
            };
            FecMode fec_mode = 14 [json_name = "fec-mode"];
            enum EthFecMode {
               EthFecMode_DISABLE = 0;
               EthFecMode_STANDARD = 1;
               EthFecMode_NONE = 2;
            };
            EthFecMode eth_fec_mode = 15 [json_name = "eth-fec-mode"];
            uint32 fec_pre_alm_thrc = 16 [json_name = "fec-pre-alm-thrc"];
            uint32 fec_pre_alm_thrp = 17 [json_name = "fec-pre-alm-thrp"];
            uint32 fec_pre_rsum_thrc = 18 [json_name = "fec-pre-rsum-thrc"];
            uint32 fec_pre_rsum_thrp = 19 [json_name = "fec-pre-rsum-thrp"];
            uint32 jumbo_frame = 20 [json_name = "jumbo-frame"];
            enum Flowctl {
               Flowctl_ALLX_DISABLED = 0;
               Flowctl_RECEIVEX_ENABLED = 1;
               Flowctl_SENDX_ENABLED = 2;
               Flowctl_ALLX_ENABLED = 3;
               Flowctl_DEFAULTX_CONFIG = 9;
            };
            Flowctl flowctl = 21 [json_name = "flowctl"];
            enum GfMediaType {
               GfMediaType_AUTO = 0;
               GfMediaType_FIBER1000 = 1;
               GfMediaType_FIBER100 = 2;
               GfMediaType_COPPER = 3;
            };
            GfMediaType gf_media_type = 22 [json_name = "gf-media-type"];
            enum HoldUp {
               HoldUp_DISABLED = 0;
               HoldUp_ENABLED = 1;
            };
            HoldUp hold_up = 23 [json_name = "hold-up"];
            enum Txipg {
               Txipg_SHRINK = 0;
               Txipg_NONX_SHRINK = 1;
            };
            Txipg txipg = 24 [json_name = "txipg"];
            enum SwitchSpeed {
               SwitchSpeed_UNDO = 0;
               SwitchSpeed_X_1G = 1;
               SwitchSpeed_X_10G = 10;
               SwitchSpeed_X_25G = 25;
            };
            SwitchSpeed switch_speed = 25 [json_name = "switch-speed"];
            enum PromiscuousMode {
               PromiscuousMode_OFF = 0;
               PromiscuousMode_ON = 1;
            };
            PromiscuousMode promiscuous_mode = 26 [json_name = "promiscuous-mode"];
            enum FlexphySpeed {
               INVALID_ENUM_VALUE_FlexphySpeed = 0;
               FlexphySpeed_X_50GE = 50;
               FlexphySpeed_X_100GE = 100;
            };
            FlexphySpeed flexphy_speed = 27 [json_name = "flexphy-speed"];
         }
         Ethernet ethernet = 13 [json_name = "ethernet"];
         message Laser {
            enum AutoShutEnable {
               AutoShutEnable_DISABLE = 0;
               AutoShutEnable_ENABLE = 1;
            };
            AutoShutEnable auto_shut_enable = 1 [json_name = "auto-shut-enable"];
            uint32 open_time = 2 [json_name = "open-time"];
            uint32 close_time = 3 [json_name = "close-time"];
            enum Status {
               Status_ON = 0;
               Status_OFF = 1;
               Status_OFFLINE = 2;
            };
            Status status = 4 [json_name = "status"];
         }
         Laser laser = 14 [json_name = "laser"];
         message OpticalModule {
            string vendor_name = 1 [json_name = "vendor-name"];
            string vendor_pn = 2 [json_name = "vendor-pn"];
            string trans_bw = 3 [json_name = "trans-bw"];
            enum TransMode {
               TransMode_UNKNOWN = 0;
               TransMode_SINGLEX_MODE = 1;
               TransMode_MULTIX_MODE = 2;
               TransMode_COPPERX_MODE = 3;
            };
            TransMode trans_mode = 4 [json_name = "trans-mode"];
            bool hot_plug = 5 [json_name = "hot-plug"];
            enum Type {
               Type_UNKNOWN = 0;
               Type_SC = 1;
               Type_GBIC = 2;
               Type_SFP = 3;
               Type_ESFP = 4;
               Type_COPPER = 5;
               Type_XFP = 6;
               Type_XENPAK = 7;
               Type_TRANSPONDER = 8;
               Type_CFP = 9;
               Type_SMB = 10;
               Type_SFPX_PLUS = 11;
               Type_CXP = 12;
               Type_QSFP = 13;
               Type_QSFPX_PLUS = 14;
               Type_CFP2 = 15;
               Type_GPS = 16;
               Type_CSFP = 17;
               Type_QSFP28 = 21;
               Type_GPONSFP = 23;
               Type_DWDMSFP = 24;
               Type_CLOCKSFP = 25;
               Type_SFP28 = 26;
               Type_CFP2DCO = 27;
            };
            Type type = 6 [json_name = "type"];
            enum FiberType {
               FiberType_UNKNOWN = 0;
               FiberType_SC = 1;
               FiberType_STYLEX_1X_COPPERX_CONNECTOR = 2;
               FiberType_STYLEX_2X_COPPERX_CONNECTOR = 3;
               FiberType_BNCX_TNC = 4;
               FiberType_COAXIALX_HEADERS = 5;
               FiberType_FIBERX_JACK = 6;
               FiberType_LC = 7;
               FiberType_MTX_RJ = 8;
               FiberType_MU = 9;
               FiberType_SG = 10;
               FiberType_OPTICALX_PIGTAIL = 11;
               FiberType_HSSDCII = 12;
               FiberType_COPPERX_PIGTAIL = 13;
               FiberType_MPO = 14;
            };
            FiberType fiber_type = 7 [json_name = "fiber-type"];
            string wavelength = 8 [json_name = "wavelength"];
            string transmission_distance = 9 [json_name = "transmission-distance"];
            string tx_power = 10 [json_name = "tx-power"];
            string rx_power = 11 [json_name = "rx-power"];
            string rx_high_warn_power = 12 [json_name = "rx-high-warn-power"];
            string rx_low_warn_power = 13 [json_name = "rx-low-warn-power"];
            string tx_high_warn_power = 14 [json_name = "tx-high-warn-power"];
            string tx_low_warn_power = 15 [json_name = "tx-low-warn-power"];
            string rx_high_alarm_power = 16 [json_name = "rx-high-alarm-power"];
            string rx_low_alarm_power = 17 [json_name = "rx-low-alarm-power"];
            string tx_high_alarm_power = 18 [json_name = "tx-high-alarm-power"];
            string tx_low_alarm_power = 19 [json_name = "tx-low-alarm-power"];
            enum Tunable {
               INVALID_ENUM_VALUE_Tunable = 0;
               Tunable_NOTX_SUPPORTED = 1;
               Tunable_NOTX_TUNABLE = 2;
               Tunable_TUNABLE = 3;
               Tunable_SUPPORTED = 4;
            };
            Tunable tunable = 20 [json_name = "tunable"];
            string chromatic_dispersion = 21 [json_name = "chromatic-dispersion"];
            string polarization_mode_dispersion = 22 [json_name = "polarization-mode-dispersion"];
            enum DirectionType {
               INVALID_ENUM_VALUE_DirectionType = 0;
               DirectionType_NOTX_SUPPORTED = 1;
               DirectionType_DUALX_FIBERX_BIDIRECTION = 2;
               DirectionType_SINGLEX_FIBERX_BIDIRECTIONAL = 3;
               DirectionType_DUALX_FIBERX_TWOX_PORTX_BIDIRECTIONAL = 4;
            };
            DirectionType direction_type = 23 [json_name = "direction-type"];
            string total_rx_power = 24 [json_name = "total-rx-power"];
            string total_rx_high_warn = 25 [json_name = "total-rx-high-warn"];
            string total_rx_low_warn = 26 [json_name = "total-rx-low-warn"];
            string total_rx_high_alarm = 27 [json_name = "total-rx-high-alarm"];
            string total_rx_low_alarm = 28 [json_name = "total-rx-low-alarm"];
            int32 bias = 29 [json_name = "bias"];
            int32 voltage = 30 [json_name = "voltage"];
            int32 temperature = 31 [json_name = "temperature"];
            string vendor_oui = 32 [json_name = "vendor-oui"];
            string vendor_rev = 33 [json_name = "vendor-rev"];
            string gpon_sn = 34 [json_name = "gpon-sn"];
            message Channels {
               message Channel {
                  uint32 number = 1 [json_name = "number"];
                  string tx_power = 2 [json_name = "tx-power"];
                  string rx_power = 3 [json_name = "rx-power"];
               }
               repeated Channel channel = 1 [json_name = "channel"];
            }
            Channels channels = 35 [json_name = "channels"];
         }
         OpticalModule optical_module = 15 [json_name = "optical-module"];
         message TransmissionAlarm {
            message TransAlarmIfdowns {
               message TransAlarmIfdown {
                  enum AlarmType {
                     AlarmType_AUAIS = 0;
                     AlarmType_B3TCA = 1;
                     AlarmType_LAIS = 2;
                     AlarmType_LOF = 3;
                     AlarmType_LOM = 4;
                     AlarmType_LOP = 5;
                     AlarmType_LOS = 6;
                     AlarmType_LRDI = 7;
                     AlarmType_LREI = 8;
                     AlarmType_OOF = 9;
                     AlarmType_PAIS = 10;
                     AlarmType_PRDI = 11;
                     AlarmType_PREI = 12;
                     AlarmType_PPLM = 13;
                     AlarmType_RDOOL = 14;
                     AlarmType_RROOL = 15;
                     AlarmType_SDBERE = 16;
                     AlarmType_SFBERE = 17;
                     AlarmType_TROOL = 18;
                     AlarmType_PUNEQ = 19;
                     AlarmType_LCD = 20;
                     AlarmType_WLNK = 21;
                     AlarmType_ODUX_AIS = 22;
                     AlarmType_ODUX_LCK = 23;
                     AlarmType_ODUX_OCI = 24;
                     AlarmType_OTUX_AIS = 25;
                     AlarmType_ODUX_LOM = 26;
                     AlarmType_OTUX_SDX_BER = 27;
                     AlarmType_OTUX_SFX_BER = 28;
                     AlarmType_PMX_BDI = 29;
                     AlarmType_PMX_TIM = 30;
                     AlarmType_RX_LOF = 31;
                     AlarmType_RX_LOS = 32;
                     AlarmType_RX_OOF = 33;
                     AlarmType_SMX_BDI = 34;
                     AlarmType_SMX_IAE = 35;
                     AlarmType_SMX_TIM = 36;
                     AlarmType_B1TCA = 40;
                     AlarmType_B2TCA = 41;
                  };
                  AlarmType alarm_type = 1 [json_name = "alarm-type"];
                  bool ifdown = 2 [json_name = "ifdown"];
                  bool alarm_status = 3 [json_name = "alarm-status"];
                  bool is_in_filtering = 4 [json_name = "is-in-filtering"];
                  bool is_in_suppressing = 5 [json_name = "is-in-suppressing"];
                  bool is_in_aging = 6 [json_name = "is-in-aging"];
                  uint32 flapping_count = 7 [json_name = "flapping-count"];
                  uint32 suppressing_count = 8 [json_name = "suppressing-count"];
                  string figure_of_merit = 9 [json_name = "figure-of-merit"];
               }
               repeated TransAlarmIfdown trans_alarm_ifdown = 1 [json_name = "trans-alarm-ifdown"];
            }
            TransAlarmIfdowns trans_alarm_ifdowns = 1 [json_name = "trans-alarm-ifdowns"];
         }
         TransmissionAlarm transmission_alarm = 16 [json_name = "transmission-alarm"];
      }
      repeated Port port = 1 [json_name = "port"];
   }
   Ports ports = 11 [json_name = "ports"];
   message LogicPorts {
      message LogicPort {
         string position = 1 [json_name = "position"];
         string serial_number = 2 [json_name = "serial-number"];
         enum PortType {
            PortType_UNKNOWN = 0;
            PortType_ETH = 1;
            PortType_POS = 2;
            PortType_CPOS = 3;
            PortType_E1 = 4;
            PortType_GE = 5;
            PortType_X_10GE = 6;
            PortType_GF = 7;
            PortType_X_10GF = 8;
            PortType_X_40GF = 9;
            PortType_X_10GFCOM = 10;
            PortType_X_40GFSPLIT = 11;
            PortType_OTN = 12;
         };
         PortType port_type = 3 [json_name = "port-type"];
         uint32 index = 4 [json_name = "index"];
         enum AdminState {
            AdminState_INACTIVE = 0;
            AdminState_ACTIVE = 1;
            AdminState_NOTSUPPORTED = 2;
         };
         AdminState admin_state = 5 [json_name = "admin-state"];
         enum HardType {
            HardType_UNKNOWN = 0;
            HardType_ETHLANPORT = 1;
            HardType_ETHWANPORT = 2;
            HardType_ETHGEPORT = 3;
            HardType_ETH10GEPORT = 4;
            HardType_ETHGFPORT = 5;
            HardType_ETH10GFPORT = 6;
            HardType_ETH40GFPORT = 7;
            HardType_ETH10GFCOMPORT = 8;
            HardType_ETH40GFSPLITPORT = 9;
            HardType_ETHFEPORT = 10;
            HardType_ETHMGEPORT = 11;
            HardType_POSPORT = 12;
            HardType_OTNPORT = 13;
            HardType_CPOSPORT = 14;
            HardType_E1PORT = 15;
            HardType_ETHCLUSTERPORT = 16;
            HardType_ETHPORT = 17;
            HardType_EPORT = 18;
            HardType_OPORT = 19;
         };
         HardType hard_type = 6 [json_name = "hard-type"];
         uint32 enable_transmission_delay = 7 [json_name = "enable-transmission-delay"];
         enum Level {
            Level_X_0XFF = 0;
            Level_GE = 1;
            Level_FE = 2;
            Level_X_10GE = 3;
         };
         Level level = 8 [json_name = "level"];
      }
      repeated LogicPort logic_port = 1 [json_name = "logic-port"];
   }
   LogicPorts logic_ports = 12 [json_name = "logic-ports"];
   message EntityClasses {
      message EntityClass {
         enum ClassName {
            ClassName_OTHER = 0;
            ClassName_CHASSIS = 1;
            ClassName_MPUMODULE = 4;
            ClassName_LPUMODULE = 5;
            ClassName_SFUMODULE = 6;
            ClassName_CLOCKMODULE = 7;
            ClassName_CARDMODULE = 9;
            ClassName_PORT = 10;
            ClassName_FAN = 16;
            ClassName_POWERSUPPLY = 17;
            ClassName_CONTAINER = 18;
            ClassName_PPMODULE = 4108;
            ClassName_SWFMODULE = 4109;
            ClassName_ECUMODULE = 4110;
            ClassName_ICUMODULE = 4111;
            ClassName_LFE = 4162;
            ClassName_CFMODULE = 4170;
            ClassName_LCD = 4181;
            ClassName_PEM = 5006;
            ClassName_CMUMODULE = 5010;
            ClassName_PIC = 5011;
            ClassName_TSU = 5012;
            ClassName_PM = 5032;
         };
         ClassName class_name = 1 [json_name = "class-name"];
         bool is_resetable = 2 [json_name = "is-resetable"];
         bool is_switchoverable = 3 [json_name = "is-switchoverable"];
      }
      repeated EntityClass entity_class = 1 [json_name = "entity-class"];
   }
   EntityClasses entity_classes = 13 [json_name = "entity-classes"];
   message InconsistentEntitys {
      message InconsistentEntity {
         enum Class {
            Class_OTHER = 0;
            Class_CHASSIS = 1;
            Class_MPUMODULE = 4;
            Class_LPUMODULE = 5;
            Class_SFUMODULE = 6;
            Class_CLOCKMODULE = 7;
            Class_CARDMODULE = 9;
            Class_PORT = 10;
            Class_FAN = 16;
            Class_POWERSUPPLY = 17;
            Class_CONTAINER = 18;
            Class_PPMODULE = 4108;
            Class_SWFMODULE = 4109;
            Class_ECUMODULE = 4110;
            Class_ICUMODULE = 4111;
            Class_LFE = 4162;
            Class_CFMODULE = 4170;
            Class_LCD = 4181;
            Class_PEM = 5006;
            Class_CMUMODULE = 5010;
            Class_PIC = 5011;
            Class_TSU = 5012;
            Class_PM = 5032;
         };
         Class class = 1 [json_name = "class"];
         string position = 2 [json_name = "position"];
         string serial_number = 3 [json_name = "serial-number"];
         enum LogicalType {
            LogicalType_UNKNOWN = 0;
            LogicalType_CHASSIS = 3;
            LogicalType_BOARDSLOT = 4;
            LogicalType_MPUSLOT = 5;
            LogicalType_LPUSLOT = 6;
            LogicalType_SFUSLOT = 7;
            LogicalType_ICUSLOT = 8;
            LogicalType_ECUSLOT = 9;
            LogicalType_CLKSLOT = 10;
            LogicalType_FANSLOT = 11;
            LogicalType_POWERSLOT = 12;
            LogicalType_PICSLOT = 13;
            LogicalType_OFCSLOT = 14;
            LogicalType_LCDSLOT = 15;
            LogicalType_CFCARDSLOT = 16;
            LogicalType_CMUSLOT = 17;
            LogicalType_FNAME8090UNKNOWN = 18;
            LogicalType_FNAME8090WHOLE = 19;
            LogicalType_FNAME8090NE5000EX = 20;
            LogicalType_FNAME8090CLUSTERCENTRAL = 21;
            LogicalType_FNAME8090NE5000EXX_VB = 22;
            LogicalType_CHASSIS1 = 24;
            LogicalType_CHASSIS2 = 25;
            LogicalType_CCCCHASSIS = 26;
            LogicalType_CE585048T4S2QEI = 27;
            LogicalType_CE685048S4QEI = 28;
            LogicalType_CE685048T4QEI = 29;
            LogicalType_CR52MPUA = 30;
            LogicalType_CR52MPUB = 31;
            LogicalType_CR55MPUA = 32;
            LogicalType_C55MPUA = 33;
            LogicalType_C56MPUC = 34;
            LogicalType_CR55MPUAB = 35;
            LogicalType_CR56RPUA = 36;
            LogicalType_CR52LPUA = 37;
            LogicalType_CR52LPUB = 38;
            LogicalType_CR52LPUC = 39;
            LogicalType_CR52LPUE = 40;
            LogicalType_CR52LPUR = 41;
            LogicalType_CR52LPUF = 42;
            LogicalType_CR52LPUG = 43;
            LogicalType_CR52LPUH = 44;
            LogicalType_CR52LPUI = 45;
            LogicalType_CR52LPUK = 46;
            LogicalType_CR52LPUM = 47;
            LogicalType_CR52LPUN = 48;
            LogicalType_CR52SPUC = 49;
            LogicalType_CR56LPUF100A = 50;
            LogicalType_CR56LPUF100B = 51;
            LogicalType_CR56LPUI100A = 52;
            LogicalType_CR56LPUI100B = 53;
            LogicalType_CR56LPUI100C = 54;
            LogicalType_CR56LPUF200A = 55;
            LogicalType_RNRLPUB = 56;
            LogicalType_RNRLPUD = 57;
            LogicalType_RNRLPUF = 58;
            LogicalType_RNRNS = 59;
            LogicalType_RNRGRE = 60;
            LogicalType_CR52SFUA = 61;
            LogicalType_CR52SRUA = 62;
            LogicalType_CR52SFUD = 63;
            LogicalType_CR52SFUF = 64;
            LogicalType_CR52SFUG = 65;
            LogicalType_CR52SFUC = 66;
            LogicalType_CR52SFEA = 67;
            LogicalType_CR52KX_SFEA = 68;
            LogicalType_CR55SFUA = 69;
            LogicalType_CR55ECUA = 70;
            LogicalType_CR55CX_ECUA = 71;
            LogicalType_CR55ICUA = 72;
            LogicalType_CR56SFUF100B = 73;
            LogicalType_CR55SFUI100A = 74;
            LogicalType_CR56SFUF100C = 75;
            LogicalType_CR56SFU200A = 76;
            LogicalType_CR55ECU100A = 77;
            LogicalType_CR52SFEB = 78;
            LogicalType_DE51SRU1A = 79;
            LogicalType_DE51SRU1B = 80;
            LogicalType_DE51SRU1C = 81;
            LogicalType_CR5DSFUFA06C = 82;
            LogicalType_CR5DSFUIK060 = 83;
            LogicalType_BOOTROM = 84;
            LogicalType_FLASH = 85;
            LogicalType_EPLD1 = 86;
            LogicalType_EPLD2 = 87;
            LogicalType_CR52E1XX = 88;
            LogicalType_CR52W1XX = 89;
            LogicalType_CR52EAGF = 90;
            LogicalType_CR52P4UF = 91;
            LogicalType_CR52P1XX = 92;
            LogicalType_CR52P4HF = 93;
            LogicalType_CR52E2XX = 94;
            LogicalType_CR52W2XX = 95;
            LogicalType_CR52P2XX = 96;
            LogicalType_CR52EMGE = 97;
            LogicalType_CR52P8CF = 98;
            LogicalType_CR52EFGE = 99;
            LogicalType_CR52P1UF = 100;
            LogicalType_CR52P2UF = 101;
            LogicalType_CR52E5GF = 102;
            LogicalType_CR52P4CF = 103;
            LogicalType_CR53P1MZ = 104;
            LogicalType_CR52D1MV = 105;
            LogicalType_CR52E4XX = 106;
            LogicalType_CR56P2XX = 107;
            LogicalType_CR56L2XX = 108;
            LogicalType_CR56E2XX = 109;
            LogicalType_CR56D2XX = 110;
            LogicalType_CR56L5XX = 111;
            LogicalType_CR56E5XX = 112;
            LogicalType_CR56P1MZ = 113;
            LogicalType_CR56E1NC = 114;
            LogicalType_CR56EFGF = 115;
            LogicalType_CR52EKGFY = 116;
            LogicalType_CR57EFGF = 117;
            LogicalType_CR56E1NCC = 118;
            LogicalType_CR52P1XZ = 119;
            LogicalType_CR52E1XZ = 120;
            LogicalType_CR52W1XZ = 121;
            LogicalType_SPU = 122;
            LogicalType_TSUA = 123;
            LogicalType_CR56E1MC = 124;
            LogicalType_CR56LAXFA = 125;
            LogicalType_CR55OFCA = 126;
            LogicalType_CR55CX_OFCA = 127;
            LogicalType_CR52OFCB = 128;
            LogicalType_CR55OFC40 = 129;
            LogicalType_CR55OFC100A = 130;
            LogicalType_CR55OFC100B = 131;
            LogicalType_CR52OFCV = 132;
            LogicalType_ETH = 133;
            LogicalType_POS = 134;
            LogicalType_GE = 135;
            LogicalType_X_10GE = 136;
            LogicalType_GF = 137;
            LogicalType_X_10GF = 138;
            LogicalType_X_40GF = 139;
            LogicalType_X_10GFCOM = 140;
            LogicalType_X_40GFSPLIT = 141;
            LogicalType_VSR = 142;
            LogicalType_LFE = 143;
            LogicalType_POWER = 144;
            LogicalType_CLOCK = 145;
            LogicalType_FAN = 146;
            LogicalType_LCD = 147;
            LogicalType_CFCARD = 148;
            LogicalType_CMU = 149;
            LogicalType_CR5D00EKGF60 = 150;
            LogicalType_CR5D00P4XX60 = 151;
            LogicalType_CR5D00P8UF60 = 152;
            LogicalType_CR5D00E4XX60 = 153;
            LogicalType_CR5D00W4XX60 = 154;
            LogicalType_CR5DLPUFA060 = 155;
            LogicalType_CR5D00LEXF60 = 156;
            LogicalType_CR5D00E2NC60 = 157;
            LogicalType_CR5DE1NLAX60 = 158;
            LogicalType_CR5DSFEBA06B = 159;
            LogicalType_CR5D0MPUB460 = 160;
            LogicalType_CR5DSFUFA06B = 161;
            LogicalType_CR5DSFUIE060 = 162;
            LogicalType_CR5D0MPUA450 = 163;
            LogicalType_CR5DECUFA050 = 164;
            LogicalType_CR5DSFUIA050 = 165;
            LogicalType_CR5D00L5XX60 = 166;
            LogicalType_CR5D00E5XX60 = 167;
            LogicalType_CR5D00L2XX60 = 168;
            LogicalType_CR5D00E2XX60 = 169;
            LogicalType_CR5D00EFGF60 = 170;
            LogicalType_CR5D00P1MZ60 = 171;
            LogicalType_CR5D00P2XX60 = 172;
            LogicalType_CR5M00E1MC60 = 173;
            LogicalType_CR5D00E1NC60 = 174;
            LogicalType_CR5D00LAXX60 = 175;
            LogicalType_CR5D0OFCA060 = 176;
            LogicalType_T1XCS = 177;
            LogicalType_T1EXL2 = 178;
            LogicalType_T1EX12 = 179;
            LogicalType_T1EX8 = 180;
            LogicalType_T1EH1 = 181;
            LogicalType_T1EG24 = 182;
            LogicalType_T1CH1 = 183;
            LogicalType_T1CQ4 = 184;
            LogicalType_T1SCA = 185;
            LogicalType_T1FAN = 186;
            LogicalType_T1PIU = 187;
            LogicalType_T1EFI = 188;
            LogicalType_XCA = 189;
            LogicalType_TNU1SCC = 190;
            LogicalType_C52MPUA = 191;
            LogicalType_C52MPUB = 192;
            LogicalType_LPUE = 193;
            LogicalType_LPUF = 194;
            LogicalType_TPA1EFI = 195;
            LogicalType_TNT1EX8 = 196;
            LogicalType_OTHER = 197;
         };
         LogicalType logical_type = 4 [json_name = "logical-type"];
         enum PhysicalType {
            PhysicalType_UNKNOWN = 0;
            PhysicalType_CHASSIS = 3;
            PhysicalType_BOARDSLOT = 4;
            PhysicalType_MPUSLOT = 5;
            PhysicalType_LPUSLOT = 6;
            PhysicalType_SFUSLOT = 7;
            PhysicalType_ICUSLOT = 8;
            PhysicalType_ECUSLOT = 9;
            PhysicalType_CLKSLOT = 10;
            PhysicalType_FANSLOT = 11;
            PhysicalType_POWERSLOT = 12;
            PhysicalType_PICSLOT = 13;
            PhysicalType_OFCSLOT = 14;
            PhysicalType_LCDSLOT = 15;
            PhysicalType_CFCARDSLOT = 16;
            PhysicalType_CMUSLOT = 17;
            PhysicalType_FNAME8090UNKNOWN = 18;
            PhysicalType_FNAME8090WHOLE = 19;
            PhysicalType_FNAME8090NE5000EX = 20;
            PhysicalType_FNAME8090CLUSTERCENTRAL = 21;
            PhysicalType_FNAME8090NE5000EXX_VB = 22;
            PhysicalType_CHASSIS1 = 24;
            PhysicalType_CHASSIS2 = 25;
            PhysicalType_CCCCHASSIS = 26;
            PhysicalType_CE585048T4S2QEI = 27;
            PhysicalType_CE685048S4QEI = 28;
            PhysicalType_CE685048T4QEI = 29;
            PhysicalType_CR52MPUA = 30;
            PhysicalType_CR52MPUB = 31;
            PhysicalType_CR55MPUA = 32;
            PhysicalType_C55MPUA = 33;
            PhysicalType_C56MPUC = 34;
            PhysicalType_CR55MPUAB = 35;
            PhysicalType_CR56RPUA = 36;
            PhysicalType_CR52LPUA = 37;
            PhysicalType_CR52LPUB = 38;
            PhysicalType_CR52LPUC = 39;
            PhysicalType_CR52LPUE = 40;
            PhysicalType_CR52LPUR = 41;
            PhysicalType_CR52LPUF = 42;
            PhysicalType_CR52LPUG = 43;
            PhysicalType_CR52LPUH = 44;
            PhysicalType_CR52LPUI = 45;
            PhysicalType_CR52LPUK = 46;
            PhysicalType_CR52LPUM = 47;
            PhysicalType_CR52LPUN = 48;
            PhysicalType_CR52SPUC = 49;
            PhysicalType_CR56LPUF100A = 50;
            PhysicalType_CR56LPUF100B = 51;
            PhysicalType_CR56LPUI100A = 52;
            PhysicalType_CR56LPUI100B = 53;
            PhysicalType_CR56LPUI100C = 54;
            PhysicalType_CR56LPUF200A = 55;
            PhysicalType_RNRLPUB = 56;
            PhysicalType_RNRLPUD = 57;
            PhysicalType_RNRLPUF = 58;
            PhysicalType_RNRNS = 59;
            PhysicalType_RNRGRE = 60;
            PhysicalType_CR52SFUA = 61;
            PhysicalType_CR52SRUA = 62;
            PhysicalType_CR52SFUD = 63;
            PhysicalType_CR52SFUF = 64;
            PhysicalType_CR52SFUG = 65;
            PhysicalType_CR52SFUC = 66;
            PhysicalType_CR52SFEA = 67;
            PhysicalType_CR52KX_SFEA = 68;
            PhysicalType_CR55SFUA = 69;
            PhysicalType_CR55ECUA = 70;
            PhysicalType_CR55CX_ECUA = 71;
            PhysicalType_CR55ICUA = 72;
            PhysicalType_CR56SFUF100B = 73;
            PhysicalType_CR55SFUI100A = 74;
            PhysicalType_CR56SFUF100C = 75;
            PhysicalType_CR56SFU200A = 76;
            PhysicalType_CR55ECU100A = 77;
            PhysicalType_CR52SFEB = 78;
            PhysicalType_DE51SRU1A = 79;
            PhysicalType_DE51SRU1B = 80;
            PhysicalType_DE51SRU1C = 81;
            PhysicalType_CR5DSFUFA06C = 82;
            PhysicalType_CR5DSFUIK060 = 83;
            PhysicalType_BOOTROM = 84;
            PhysicalType_FLASH = 85;
            PhysicalType_EPLD1 = 86;
            PhysicalType_EPLD2 = 87;
            PhysicalType_CR52E1XX = 88;
            PhysicalType_CR52W1XX = 89;
            PhysicalType_CR52EAGF = 90;
            PhysicalType_CR52P4UF = 91;
            PhysicalType_CR52P1XX = 92;
            PhysicalType_CR52P4HF = 93;
            PhysicalType_CR52E2XX = 94;
            PhysicalType_CR52W2XX = 95;
            PhysicalType_CR52P2XX = 96;
            PhysicalType_CR52EMGE = 97;
            PhysicalType_CR52P8CF = 98;
            PhysicalType_CR52EFGE = 99;
            PhysicalType_CR52P1UF = 100;
            PhysicalType_CR52P2UF = 101;
            PhysicalType_CR52E5GF = 102;
            PhysicalType_CR52P4CF = 103;
            PhysicalType_CR53P1MZ = 104;
            PhysicalType_CR52D1MV = 105;
            PhysicalType_CR52E4XX = 106;
            PhysicalType_CR56P2XX = 107;
            PhysicalType_CR56L2XX = 108;
            PhysicalType_CR56E2XX = 109;
            PhysicalType_CR56D2XX = 110;
            PhysicalType_CR56L5XX = 111;
            PhysicalType_CR56E5XX = 112;
            PhysicalType_CR56P1MZ = 113;
            PhysicalType_CR56E1NC = 114;
            PhysicalType_CR56EFGF = 115;
            PhysicalType_CR52EKGFY = 116;
            PhysicalType_CR57EFGF = 117;
            PhysicalType_CR56E1NCC = 118;
            PhysicalType_CR52P1XZ = 119;
            PhysicalType_CR52E1XZ = 120;
            PhysicalType_CR52W1XZ = 121;
            PhysicalType_SPU = 122;
            PhysicalType_TSUA = 123;
            PhysicalType_CR56E1MC = 124;
            PhysicalType_CR56LAXFA = 125;
            PhysicalType_CR55OFCA = 126;
            PhysicalType_CR55CX_OFCA = 127;
            PhysicalType_CR52OFCB = 128;
            PhysicalType_CR55OFC40 = 129;
            PhysicalType_CR55OFC100A = 130;
            PhysicalType_CR55OFC100B = 131;
            PhysicalType_CR52OFCV = 132;
            PhysicalType_ETH = 133;
            PhysicalType_POS = 134;
            PhysicalType_GE = 135;
            PhysicalType_X_10GE = 136;
            PhysicalType_GF = 137;
            PhysicalType_X_10GF = 138;
            PhysicalType_X_40GF = 139;
            PhysicalType_X_10GFCOM = 140;
            PhysicalType_X_40GFSPLIT = 141;
            PhysicalType_VSR = 142;
            PhysicalType_LFE = 143;
            PhysicalType_POWER = 144;
            PhysicalType_CLOCK = 145;
            PhysicalType_FAN = 146;
            PhysicalType_LCD = 147;
            PhysicalType_CFCARD = 148;
            PhysicalType_CMU = 149;
            PhysicalType_CR5D00EKGF60 = 150;
            PhysicalType_CR5D00P4XX60 = 151;
            PhysicalType_CR5D00P8UF60 = 152;
            PhysicalType_CR5D00E4XX60 = 153;
            PhysicalType_CR5D00W4XX60 = 154;
            PhysicalType_CR5DLPUFA060 = 155;
            PhysicalType_CR5D00LEXF60 = 156;
            PhysicalType_CR5D00E2NC60 = 157;
            PhysicalType_CR5DE1NLAX60 = 158;
            PhysicalType_CR5DSFEBA06B = 159;
            PhysicalType_CR5D0MPUB460 = 160;
            PhysicalType_CR5DSFUFA06B = 161;
            PhysicalType_CR5DSFUIE060 = 162;
            PhysicalType_CR5D0MPUA450 = 163;
            PhysicalType_CR5DECUFA050 = 164;
            PhysicalType_CR5DSFUIA050 = 165;
            PhysicalType_CR5D00L5XX60 = 166;
            PhysicalType_CR5D00E5XX60 = 167;
            PhysicalType_CR5D00L2XX60 = 168;
            PhysicalType_CR5D00E2XX60 = 169;
            PhysicalType_CR5D00EFGF60 = 170;
            PhysicalType_CR5D00P1MZ60 = 171;
            PhysicalType_CR5D00P2XX60 = 172;
            PhysicalType_CR5M00E1MC60 = 173;
            PhysicalType_CR5D00E1NC60 = 174;
            PhysicalType_CR5D00LAXX60 = 175;
            PhysicalType_CR5D0OFCA060 = 176;
            PhysicalType_T1XCS = 177;
            PhysicalType_T1EXL2 = 178;
            PhysicalType_T1EX12 = 179;
            PhysicalType_T1EX8 = 180;
            PhysicalType_T1EH1 = 181;
            PhysicalType_T1EG24 = 182;
            PhysicalType_T1CH1 = 183;
            PhysicalType_T1CQ4 = 184;
            PhysicalType_T1SCA = 185;
            PhysicalType_T1FAN = 186;
            PhysicalType_T1PIU = 187;
            PhysicalType_T1EFI = 188;
            PhysicalType_XCA = 189;
            PhysicalType_TNU1SCC = 190;
            PhysicalType_C52MPUA = 191;
            PhysicalType_C52MPUB = 192;
            PhysicalType_LPUE = 193;
            PhysicalType_LPUF = 194;
            PhysicalType_TPA1EFI = 195;
            PhysicalType_TNT1EX8 = 196;
            PhysicalType_OTHER = 197;
         };
         PhysicalType physical_type = 5 [json_name = "physical-type"];
         enum OperState {
            OperState_UNKNOWN = 0;
            OperState_NORMAL = 1;
            OperState_FAULT = 2;
            OperState_OFFLINE = 3;
            OperState_NOTSUPPORTED = 4;
            OperState_OPTICALNOTEQUIPPED = 5;
            OperState_NOTINSTALL = 6;
            OperState_WRONGTYPE = 7;
            OperState_REGISTERED = 8;
            OperState_UNREGISTERED = 9;
            OperState_POWEROFF = 10;
            OperState_PORTX_PHYSICALX_DOWN = 11;
         };
         OperState oper_state = 6 [json_name = "oper-state"];
      }
      repeated InconsistentEntity inconsistent_entity = 1 [json_name = "inconsistent-entity"];
   }
   InconsistentEntitys inconsistent_entitys = 14 [json_name = "inconsistent-entitys"];
   message OfflineCfgs {
      message Offline {
         enum Class {
            INVALID_ENUM_VALUE_Class = 0;
            Class_CHASSIS = 1;
            Class_BOARD = 3;
            Class_CARD = 8;
         };
         Class class = 1 [json_name = "class"];
         string position = 2 [json_name = "position"];
      }
      repeated Offline offline = 1 [json_name = "offline"];
   }
   OfflineCfgs offline_cfgs = 15 [json_name = "offline-cfgs"];
   message ScheduleReboot {
      string datetime = 1 [json_name = "datetime"];
      string delay_time = 2 [json_name = "delay-time"];
   }
   ScheduleReboot schedule_reboot = 16 [json_name = "schedule-reboot"];
}

