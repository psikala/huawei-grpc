// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sensors/huawei-esqm/huawei-esqm.proto

package huawei_esqm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Esqm_TcpDatas_TcpData_AgeType int32

const (
	Esqm_TcpDatas_TcpData_INVALID_ENUM_VALUE_AgeType  Esqm_TcpDatas_TcpData_AgeType = 0
	Esqm_TcpDatas_TcpData_AgeType_AGINGX_TIME         Esqm_TcpDatas_TcpData_AgeType = 1
	Esqm_TcpDatas_TcpData_AgeType_TCPX_FIN            Esqm_TcpDatas_TcpData_AgeType = 2
	Esqm_TcpDatas_TcpData_AgeType_TCPX_RST            Esqm_TcpDatas_TcpData_AgeType = 3
	Esqm_TcpDatas_TcpData_AgeType_SCTPX_SHUTDOWN      Esqm_TcpDatas_TcpData_AgeType = 4
	Esqm_TcpDatas_TcpData_AgeType_SCTPX_SHUTDOWNX_ACK Esqm_TcpDatas_TcpData_AgeType = 5
	Esqm_TcpDatas_TcpData_AgeType_SCTPX_ABORT         Esqm_TcpDatas_TcpData_AgeType = 6
)

var Esqm_TcpDatas_TcpData_AgeType_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_AgeType",
	1: "AgeType_AGINGX_TIME",
	2: "AgeType_TCPX_FIN",
	3: "AgeType_TCPX_RST",
	4: "AgeType_SCTPX_SHUTDOWN",
	5: "AgeType_SCTPX_SHUTDOWNX_ACK",
	6: "AgeType_SCTPX_ABORT",
}

var Esqm_TcpDatas_TcpData_AgeType_value = map[string]int32{
	"INVALID_ENUM_VALUE_AgeType":  0,
	"AgeType_AGINGX_TIME":         1,
	"AgeType_TCPX_FIN":            2,
	"AgeType_TCPX_RST":            3,
	"AgeType_SCTPX_SHUTDOWN":      4,
	"AgeType_SCTPX_SHUTDOWNX_ACK": 5,
	"AgeType_SCTPX_ABORT":         6,
}

func (x Esqm_TcpDatas_TcpData_AgeType) String() string {
	return proto.EnumName(Esqm_TcpDatas_TcpData_AgeType_name, int32(x))
}

func (Esqm_TcpDatas_TcpData_AgeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 0, 0, 0}
}

type Esqm_TcpDatas_TcpData_FlowType int32

const (
	Esqm_TcpDatas_TcpData_INVALID_ENUM_VALUE_FlowType Esqm_TcpDatas_TcpData_FlowType = 0
	Esqm_TcpDatas_TcpData_FlowType_TCPX_SYN           Esqm_TcpDatas_TcpData_FlowType = 1
	Esqm_TcpDatas_TcpData_FlowType_TCPX_SYNX_ACK      Esqm_TcpDatas_TcpData_FlowType = 2
	Esqm_TcpDatas_TcpData_FlowType_SCTPX_SACK         Esqm_TcpDatas_TcpData_FlowType = 3
	Esqm_TcpDatas_TcpData_FlowType_SCTPX_INIT         Esqm_TcpDatas_TcpData_FlowType = 4
	Esqm_TcpDatas_TcpData_FlowType_SCTPX_INITX_ACK    Esqm_TcpDatas_TcpData_FlowType = 5
)

var Esqm_TcpDatas_TcpData_FlowType_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_FlowType",
	1: "FlowType_TCPX_SYN",
	2: "FlowType_TCPX_SYNX_ACK",
	3: "FlowType_SCTPX_SACK",
	4: "FlowType_SCTPX_INIT",
	5: "FlowType_SCTPX_INITX_ACK",
}

var Esqm_TcpDatas_TcpData_FlowType_value = map[string]int32{
	"INVALID_ENUM_VALUE_FlowType": 0,
	"FlowType_TCPX_SYN":           1,
	"FlowType_TCPX_SYNX_ACK":      2,
	"FlowType_SCTPX_SACK":         3,
	"FlowType_SCTPX_INIT":         4,
	"FlowType_SCTPX_INITX_ACK":    5,
}

func (x Esqm_TcpDatas_TcpData_FlowType) String() string {
	return proto.EnumName(Esqm_TcpDatas_TcpData_FlowType_name, int32(x))
}

func (Esqm_TcpDatas_TcpData_FlowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 0, 0, 1}
}

type Esqm_TcpDatas_TcpData_FlowDirection int32

const (
	Esqm_TcpDatas_TcpData_FlowDirection_INGRESS Esqm_TcpDatas_TcpData_FlowDirection = 0
	Esqm_TcpDatas_TcpData_FlowDirection_EGRESS  Esqm_TcpDatas_TcpData_FlowDirection = 1
)

var Esqm_TcpDatas_TcpData_FlowDirection_name = map[int32]string{
	0: "FlowDirection_INGRESS",
	1: "FlowDirection_EGRESS",
}

var Esqm_TcpDatas_TcpData_FlowDirection_value = map[string]int32{
	"FlowDirection_INGRESS": 0,
	"FlowDirection_EGRESS":  1,
}

func (x Esqm_TcpDatas_TcpData_FlowDirection) String() string {
	return proto.EnumName(Esqm_TcpDatas_TcpData_FlowDirection_name, int32(x))
}

func (Esqm_TcpDatas_TcpData_FlowDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 0, 0, 2}
}

type Esqm_TcpDatas_TcpData_AddressFamily int32

const (
	Esqm_TcpDatas_TcpData_AddressFamily_IPV4 Esqm_TcpDatas_TcpData_AddressFamily = 0
	Esqm_TcpDatas_TcpData_AddressFamily_IPV6 Esqm_TcpDatas_TcpData_AddressFamily = 1
)

var Esqm_TcpDatas_TcpData_AddressFamily_name = map[int32]string{
	0: "AddressFamily_IPV4",
	1: "AddressFamily_IPV6",
}

var Esqm_TcpDatas_TcpData_AddressFamily_value = map[string]int32{
	"AddressFamily_IPV4": 0,
	"AddressFamily_IPV6": 1,
}

func (x Esqm_TcpDatas_TcpData_AddressFamily) String() string {
	return proto.EnumName(Esqm_TcpDatas_TcpData_AddressFamily_name, int32(x))
}

func (Esqm_TcpDatas_TcpData_AddressFamily) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 0, 0, 3}
}

type Esqm_GtpDatas_GtpData_AgeType int32

const (
	Esqm_GtpDatas_GtpData_INVALID_ENUM_VALUE_AgeType Esqm_GtpDatas_GtpData_AgeType = 0
	Esqm_GtpDatas_GtpData_AgeType_AGINGX_TIME        Esqm_GtpDatas_GtpData_AgeType = 1
)

var Esqm_GtpDatas_GtpData_AgeType_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_AgeType",
	1: "AgeType_AGINGX_TIME",
}

var Esqm_GtpDatas_GtpData_AgeType_value = map[string]int32{
	"INVALID_ENUM_VALUE_AgeType": 0,
	"AgeType_AGINGX_TIME":        1,
}

func (x Esqm_GtpDatas_GtpData_AgeType) String() string {
	return proto.EnumName(Esqm_GtpDatas_GtpData_AgeType_name, int32(x))
}

func (Esqm_GtpDatas_GtpData_AgeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 1, 0, 0}
}

type Esqm_GtpDatas_GtpData_FlowType int32

const (
	Esqm_GtpDatas_GtpData_INVALID_ENUM_VALUE_FlowType Esqm_GtpDatas_GtpData_FlowType = 0
	Esqm_GtpDatas_GtpData_FlowType_GTP                Esqm_GtpDatas_GtpData_FlowType = 6
)

var Esqm_GtpDatas_GtpData_FlowType_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_FlowType",
	6: "FlowType_GTP",
}

var Esqm_GtpDatas_GtpData_FlowType_value = map[string]int32{
	"INVALID_ENUM_VALUE_FlowType": 0,
	"FlowType_GTP":                6,
}

func (x Esqm_GtpDatas_GtpData_FlowType) String() string {
	return proto.EnumName(Esqm_GtpDatas_GtpData_FlowType_name, int32(x))
}

func (Esqm_GtpDatas_GtpData_FlowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 1, 0, 1}
}

type Esqm_GtpDatas_GtpData_FlowDirection int32

const (
	Esqm_GtpDatas_GtpData_FlowDirection_INGRESS Esqm_GtpDatas_GtpData_FlowDirection = 0
	Esqm_GtpDatas_GtpData_FlowDirection_EGRESS  Esqm_GtpDatas_GtpData_FlowDirection = 1
)

var Esqm_GtpDatas_GtpData_FlowDirection_name = map[int32]string{
	0: "FlowDirection_INGRESS",
	1: "FlowDirection_EGRESS",
}

var Esqm_GtpDatas_GtpData_FlowDirection_value = map[string]int32{
	"FlowDirection_INGRESS": 0,
	"FlowDirection_EGRESS":  1,
}

func (x Esqm_GtpDatas_GtpData_FlowDirection) String() string {
	return proto.EnumName(Esqm_GtpDatas_GtpData_FlowDirection_name, int32(x))
}

func (Esqm_GtpDatas_GtpData_FlowDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 1, 0, 2}
}

type Esqm_GtpDatas_GtpData_PacketType int32

const (
	Esqm_GtpDatas_GtpData_PacketType_HEARTBEATX_REQ Esqm_GtpDatas_GtpData_PacketType = 0
	Esqm_GtpDatas_GtpData_PacketType_HEARTBEATX_RSQ Esqm_GtpDatas_GtpData_PacketType = 1
)

var Esqm_GtpDatas_GtpData_PacketType_name = map[int32]string{
	0: "PacketType_HEARTBEATX_REQ",
	1: "PacketType_HEARTBEATX_RSQ",
}

var Esqm_GtpDatas_GtpData_PacketType_value = map[string]int32{
	"PacketType_HEARTBEATX_REQ": 0,
	"PacketType_HEARTBEATX_RSQ": 1,
}

func (x Esqm_GtpDatas_GtpData_PacketType) String() string {
	return proto.EnumName(Esqm_GtpDatas_GtpData_PacketType_name, int32(x))
}

func (Esqm_GtpDatas_GtpData_PacketType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 1, 0, 3}
}

type Esqm_GtpDatas_GtpData_AddressFamily int32

const (
	Esqm_GtpDatas_GtpData_AddressFamily_IPV4 Esqm_GtpDatas_GtpData_AddressFamily = 0
	Esqm_GtpDatas_GtpData_AddressFamily_IPV6 Esqm_GtpDatas_GtpData_AddressFamily = 1
)

var Esqm_GtpDatas_GtpData_AddressFamily_name = map[int32]string{
	0: "AddressFamily_IPV4",
	1: "AddressFamily_IPV6",
}

var Esqm_GtpDatas_GtpData_AddressFamily_value = map[string]int32{
	"AddressFamily_IPV4": 0,
	"AddressFamily_IPV6": 1,
}

func (x Esqm_GtpDatas_GtpData_AddressFamily) String() string {
	return proto.EnumName(Esqm_GtpDatas_GtpData_AddressFamily_name, int32(x))
}

func (Esqm_GtpDatas_GtpData_AddressFamily) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 1, 0, 4}
}

type Esqm struct {
	TcpDatas             *Esqm_TcpDatas `protobuf:"bytes,1,opt,name=tcp_datas,json=tcp-datas,proto3" json:"tcp_datas,omitempty"`
	GtpDatas             *Esqm_GtpDatas `protobuf:"bytes,2,opt,name=gtp_datas,json=gtp-datas,proto3" json:"gtp_datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Esqm) Reset()         { *m = Esqm{} }
func (m *Esqm) String() string { return proto.CompactTextString(m) }
func (*Esqm) ProtoMessage()    {}
func (*Esqm) Descriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0}
}

func (m *Esqm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Esqm.Unmarshal(m, b)
}
func (m *Esqm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Esqm.Marshal(b, m, deterministic)
}
func (m *Esqm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Esqm.Merge(m, src)
}
func (m *Esqm) XXX_Size() int {
	return xxx_messageInfo_Esqm.Size(m)
}
func (m *Esqm) XXX_DiscardUnknown() {
	xxx_messageInfo_Esqm.DiscardUnknown(m)
}

var xxx_messageInfo_Esqm proto.InternalMessageInfo

func (m *Esqm) GetTcpDatas() *Esqm_TcpDatas {
	if m != nil {
		return m.TcpDatas
	}
	return nil
}

func (m *Esqm) GetGtpDatas() *Esqm_GtpDatas {
	if m != nil {
		return m.GtpDatas
	}
	return nil
}

type Esqm_TcpDatas struct {
	TcpData              []*Esqm_TcpDatas_TcpData `protobuf:"bytes,1,rep,name=tcp_data,json=tcp-data,proto3" json:"tcp_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Esqm_TcpDatas) Reset()         { *m = Esqm_TcpDatas{} }
func (m *Esqm_TcpDatas) String() string { return proto.CompactTextString(m) }
func (*Esqm_TcpDatas) ProtoMessage()    {}
func (*Esqm_TcpDatas) Descriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 0}
}

func (m *Esqm_TcpDatas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Esqm_TcpDatas.Unmarshal(m, b)
}
func (m *Esqm_TcpDatas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Esqm_TcpDatas.Marshal(b, m, deterministic)
}
func (m *Esqm_TcpDatas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Esqm_TcpDatas.Merge(m, src)
}
func (m *Esqm_TcpDatas) XXX_Size() int {
	return xxx_messageInfo_Esqm_TcpDatas.Size(m)
}
func (m *Esqm_TcpDatas) XXX_DiscardUnknown() {
	xxx_messageInfo_Esqm_TcpDatas.DiscardUnknown(m)
}

var xxx_messageInfo_Esqm_TcpDatas proto.InternalMessageInfo

func (m *Esqm_TcpDatas) GetTcpData() []*Esqm_TcpDatas_TcpData {
	if m != nil {
		return m.TcpData
	}
	return nil
}

type Esqm_TcpDatas_TcpData struct {
	SrcIpAddr               string                              `protobuf:"bytes,1,opt,name=src_ip_addr,json=src-ip-addr,proto3" json:"src_ip_addr,omitempty"`
	DstIpAddr               string                              `protobuf:"bytes,2,opt,name=dst_ip_addr,json=dst-ip-addr,proto3" json:"dst_ip_addr,omitempty"`
	SrcPort                 uint32                              `protobuf:"varint,3,opt,name=src_port,json=src-port,proto3" json:"src_port,omitempty"`
	DstPort                 uint32                              `protobuf:"varint,4,opt,name=dst_port,json=dst-port,proto3" json:"dst_port,omitempty"`
	Protocol                uint32                              `protobuf:"varint,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	AgeType                 Esqm_TcpDatas_TcpData_AgeType       `protobuf:"varint,6,opt,name=age_type,json=age-type,proto3,enum=huawei_esqm.Esqm_TcpDatas_TcpData_AgeType" json:"age_type,omitempty"`
	FlowType                Esqm_TcpDatas_TcpData_FlowType      `protobuf:"varint,7,opt,name=flow_type,json=flow-type,proto3,enum=huawei_esqm.Esqm_TcpDatas_TcpData_FlowType" json:"flow_type,omitempty"`
	FlowDirection           Esqm_TcpDatas_TcpData_FlowDirection `protobuf:"varint,8,opt,name=flow_direction,json=flow-direction,proto3,enum=huawei_esqm.Esqm_TcpDatas_TcpData_FlowDirection" json:"flow_direction,omitempty"`
	PortIfIndex             uint32                              `protobuf:"varint,9,opt,name=port_if_index,json=port-if-index,proto3" json:"port_if_index,omitempty"`
	RouteIfIndex            uint32                              `protobuf:"varint,10,opt,name=route_if_index,json=route-if-index,proto3" json:"route_if_index,omitempty"`
	NextHop                 string                              `protobuf:"bytes,11,opt,name=next_hop,json=next-hop,proto3" json:"next_hop,omitempty"`
	Label                   uint32                              `protobuf:"varint,12,opt,name=label,proto3" json:"label,omitempty"`
	VpnName                 string                              `protobuf:"bytes,13,opt,name=vpn_name,json=vpn-name,proto3" json:"vpn_name,omitempty"`
	CreatedTimestampSec     uint32                              `protobuf:"varint,14,opt,name=created_timestamp_sec,json=created-timestamp-sec,proto3" json:"created_timestamp_sec,omitempty"`
	CreatedTimestampNanoSec uint32                              `protobuf:"varint,15,opt,name=created_timestamp_nano_sec,json=created-timestamp-nano-sec,proto3" json:"created_timestamp_nano_sec,omitempty"`
	PacketNum               uint64                              `protobuf:"varint,16,opt,name=packet_num,json=packet-num,proto3" json:"packet_num,omitempty"`
	RetransNum              uint64                              `protobuf:"varint,17,opt,name=retrans_num,json=retrans-num,proto3" json:"retrans_num,omitempty"`
	RetransRadio            uint64                              `protobuf:"varint,18,opt,name=retrans_radio,json=retrans-radio,proto3" json:"retrans_radio,omitempty"`
	AddressFamily           Esqm_TcpDatas_TcpData_AddressFamily `protobuf:"varint,19,opt,name=address_family,json=address-family,proto3,enum=huawei_esqm.Esqm_TcpDatas_TcpData_AddressFamily" json:"address_family,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                            `json:"-"`
	XXX_unrecognized        []byte                              `json:"-"`
	XXX_sizecache           int32                               `json:"-"`
}

func (m *Esqm_TcpDatas_TcpData) Reset()         { *m = Esqm_TcpDatas_TcpData{} }
func (m *Esqm_TcpDatas_TcpData) String() string { return proto.CompactTextString(m) }
func (*Esqm_TcpDatas_TcpData) ProtoMessage()    {}
func (*Esqm_TcpDatas_TcpData) Descriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 0, 0}
}

func (m *Esqm_TcpDatas_TcpData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Esqm_TcpDatas_TcpData.Unmarshal(m, b)
}
func (m *Esqm_TcpDatas_TcpData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Esqm_TcpDatas_TcpData.Marshal(b, m, deterministic)
}
func (m *Esqm_TcpDatas_TcpData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Esqm_TcpDatas_TcpData.Merge(m, src)
}
func (m *Esqm_TcpDatas_TcpData) XXX_Size() int {
	return xxx_messageInfo_Esqm_TcpDatas_TcpData.Size(m)
}
func (m *Esqm_TcpDatas_TcpData) XXX_DiscardUnknown() {
	xxx_messageInfo_Esqm_TcpDatas_TcpData.DiscardUnknown(m)
}

var xxx_messageInfo_Esqm_TcpDatas_TcpData proto.InternalMessageInfo

func (m *Esqm_TcpDatas_TcpData) GetSrcIpAddr() string {
	if m != nil {
		return m.SrcIpAddr
	}
	return ""
}

func (m *Esqm_TcpDatas_TcpData) GetDstIpAddr() string {
	if m != nil {
		return m.DstIpAddr
	}
	return ""
}

func (m *Esqm_TcpDatas_TcpData) GetSrcPort() uint32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetDstPort() uint32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetAgeType() Esqm_TcpDatas_TcpData_AgeType {
	if m != nil {
		return m.AgeType
	}
	return Esqm_TcpDatas_TcpData_INVALID_ENUM_VALUE_AgeType
}

func (m *Esqm_TcpDatas_TcpData) GetFlowType() Esqm_TcpDatas_TcpData_FlowType {
	if m != nil {
		return m.FlowType
	}
	return Esqm_TcpDatas_TcpData_INVALID_ENUM_VALUE_FlowType
}

func (m *Esqm_TcpDatas_TcpData) GetFlowDirection() Esqm_TcpDatas_TcpData_FlowDirection {
	if m != nil {
		return m.FlowDirection
	}
	return Esqm_TcpDatas_TcpData_FlowDirection_INGRESS
}

func (m *Esqm_TcpDatas_TcpData) GetPortIfIndex() uint32 {
	if m != nil {
		return m.PortIfIndex
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetRouteIfIndex() uint32 {
	if m != nil {
		return m.RouteIfIndex
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *Esqm_TcpDatas_TcpData) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetVpnName() string {
	if m != nil {
		return m.VpnName
	}
	return ""
}

func (m *Esqm_TcpDatas_TcpData) GetCreatedTimestampSec() uint32 {
	if m != nil {
		return m.CreatedTimestampSec
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetCreatedTimestampNanoSec() uint32 {
	if m != nil {
		return m.CreatedTimestampNanoSec
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetPacketNum() uint64 {
	if m != nil {
		return m.PacketNum
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetRetransNum() uint64 {
	if m != nil {
		return m.RetransNum
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetRetransRadio() uint64 {
	if m != nil {
		return m.RetransRadio
	}
	return 0
}

func (m *Esqm_TcpDatas_TcpData) GetAddressFamily() Esqm_TcpDatas_TcpData_AddressFamily {
	if m != nil {
		return m.AddressFamily
	}
	return Esqm_TcpDatas_TcpData_AddressFamily_IPV4
}

type Esqm_GtpDatas struct {
	GtpData              []*Esqm_GtpDatas_GtpData `protobuf:"bytes,1,rep,name=gtp_data,json=gtp-data,proto3" json:"gtp_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Esqm_GtpDatas) Reset()         { *m = Esqm_GtpDatas{} }
func (m *Esqm_GtpDatas) String() string { return proto.CompactTextString(m) }
func (*Esqm_GtpDatas) ProtoMessage()    {}
func (*Esqm_GtpDatas) Descriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 1}
}

func (m *Esqm_GtpDatas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Esqm_GtpDatas.Unmarshal(m, b)
}
func (m *Esqm_GtpDatas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Esqm_GtpDatas.Marshal(b, m, deterministic)
}
func (m *Esqm_GtpDatas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Esqm_GtpDatas.Merge(m, src)
}
func (m *Esqm_GtpDatas) XXX_Size() int {
	return xxx_messageInfo_Esqm_GtpDatas.Size(m)
}
func (m *Esqm_GtpDatas) XXX_DiscardUnknown() {
	xxx_messageInfo_Esqm_GtpDatas.DiscardUnknown(m)
}

var xxx_messageInfo_Esqm_GtpDatas proto.InternalMessageInfo

func (m *Esqm_GtpDatas) GetGtpData() []*Esqm_GtpDatas_GtpData {
	if m != nil {
		return m.GtpData
	}
	return nil
}

type Esqm_GtpDatas_GtpData struct {
	SrcIpAddr            string                              `protobuf:"bytes,1,opt,name=src_ip_addr,json=src-ip-addr,proto3" json:"src_ip_addr,omitempty"`
	DstIpAddr            string                              `protobuf:"bytes,2,opt,name=dst_ip_addr,json=dst-ip-addr,proto3" json:"dst_ip_addr,omitempty"`
	SrcPort              uint32                              `protobuf:"varint,3,opt,name=src_port,json=src-port,proto3" json:"src_port,omitempty"`
	DstPort              uint32                              `protobuf:"varint,4,opt,name=dst_port,json=dst-port,proto3" json:"dst_port,omitempty"`
	Protocol             uint32                              `protobuf:"varint,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	AgeType              Esqm_GtpDatas_GtpData_AgeType       `protobuf:"varint,6,opt,name=age_type,json=age-type,proto3,enum=huawei_esqm.Esqm_GtpDatas_GtpData_AgeType" json:"age_type,omitempty"`
	FlowType             Esqm_GtpDatas_GtpData_FlowType      `protobuf:"varint,7,opt,name=flow_type,json=flow-type,proto3,enum=huawei_esqm.Esqm_GtpDatas_GtpData_FlowType" json:"flow_type,omitempty"`
	FlowDirection        Esqm_GtpDatas_GtpData_FlowDirection `protobuf:"varint,8,opt,name=flow_direction,json=flow-direction,proto3,enum=huawei_esqm.Esqm_GtpDatas_GtpData_FlowDirection" json:"flow_direction,omitempty"`
	PortIfIndex          uint32                              `protobuf:"varint,9,opt,name=port_if_index,json=port-if-index,proto3" json:"port_if_index,omitempty"`
	RouteIfIndex         uint32                              `protobuf:"varint,10,opt,name=route_if_index,json=route-if-index,proto3" json:"route_if_index,omitempty"`
	NextHop              string                              `protobuf:"bytes,11,opt,name=next_hop,json=next-hop,proto3" json:"next_hop,omitempty"`
	Label                uint32                              `protobuf:"varint,12,opt,name=label,proto3" json:"label,omitempty"`
	VpnName              string                              `protobuf:"bytes,13,opt,name=vpn_name,json=vpn-name,proto3" json:"vpn_name,omitempty"`
	HeartbeatTimeSec     uint32                              `protobuf:"varint,14,opt,name=heartbeat_time_sec,json=heartbeat-time-sec,proto3" json:"heartbeat_time_sec,omitempty"`
	HeartbeatTimeNanoSec uint32                              `protobuf:"varint,15,opt,name=heartbeat_time_nano_sec,json=heartbeat-time-nano-sec,proto3" json:"heartbeat_time_nano_sec,omitempty"`
	PacketNum            uint64                              `protobuf:"varint,16,opt,name=packet_num,json=packet-num,proto3" json:"packet_num,omitempty"`
	PacketBytes          uint64                              `protobuf:"varint,17,opt,name=packet_bytes,json=packet-bytes,proto3" json:"packet_bytes,omitempty"`
	PacketType           Esqm_GtpDatas_GtpData_PacketType    `protobuf:"varint,18,opt,name=packet_type,json=packet-type,proto3,enum=huawei_esqm.Esqm_GtpDatas_GtpData_PacketType" json:"packet_type,omitempty"`
	AddressFamily        Esqm_GtpDatas_GtpData_AddressFamily `protobuf:"varint,19,opt,name=address_family,json=address-family,proto3,enum=huawei_esqm.Esqm_GtpDatas_GtpData_AddressFamily" json:"address_family,omitempty"`
	LastIpId             uint32                              `protobuf:"varint,20,opt,name=last_ip_id,json=last-ip-id,proto3" json:"last_ip_id,omitempty"`
	CurrIpId             uint32                              `protobuf:"varint,21,opt,name=curr_ip_id,json=curr-ip-id,proto3" json:"curr_ip_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Esqm_GtpDatas_GtpData) Reset()         { *m = Esqm_GtpDatas_GtpData{} }
func (m *Esqm_GtpDatas_GtpData) String() string { return proto.CompactTextString(m) }
func (*Esqm_GtpDatas_GtpData) ProtoMessage()    {}
func (*Esqm_GtpDatas_GtpData) Descriptor() ([]byte, []int) {
	return fileDescriptor_761887d2510e3815, []int{0, 1, 0}
}

func (m *Esqm_GtpDatas_GtpData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Esqm_GtpDatas_GtpData.Unmarshal(m, b)
}
func (m *Esqm_GtpDatas_GtpData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Esqm_GtpDatas_GtpData.Marshal(b, m, deterministic)
}
func (m *Esqm_GtpDatas_GtpData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Esqm_GtpDatas_GtpData.Merge(m, src)
}
func (m *Esqm_GtpDatas_GtpData) XXX_Size() int {
	return xxx_messageInfo_Esqm_GtpDatas_GtpData.Size(m)
}
func (m *Esqm_GtpDatas_GtpData) XXX_DiscardUnknown() {
	xxx_messageInfo_Esqm_GtpDatas_GtpData.DiscardUnknown(m)
}

var xxx_messageInfo_Esqm_GtpDatas_GtpData proto.InternalMessageInfo

func (m *Esqm_GtpDatas_GtpData) GetSrcIpAddr() string {
	if m != nil {
		return m.SrcIpAddr
	}
	return ""
}

func (m *Esqm_GtpDatas_GtpData) GetDstIpAddr() string {
	if m != nil {
		return m.DstIpAddr
	}
	return ""
}

func (m *Esqm_GtpDatas_GtpData) GetSrcPort() uint32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetDstPort() uint32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetAgeType() Esqm_GtpDatas_GtpData_AgeType {
	if m != nil {
		return m.AgeType
	}
	return Esqm_GtpDatas_GtpData_INVALID_ENUM_VALUE_AgeType
}

func (m *Esqm_GtpDatas_GtpData) GetFlowType() Esqm_GtpDatas_GtpData_FlowType {
	if m != nil {
		return m.FlowType
	}
	return Esqm_GtpDatas_GtpData_INVALID_ENUM_VALUE_FlowType
}

func (m *Esqm_GtpDatas_GtpData) GetFlowDirection() Esqm_GtpDatas_GtpData_FlowDirection {
	if m != nil {
		return m.FlowDirection
	}
	return Esqm_GtpDatas_GtpData_FlowDirection_INGRESS
}

func (m *Esqm_GtpDatas_GtpData) GetPortIfIndex() uint32 {
	if m != nil {
		return m.PortIfIndex
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetRouteIfIndex() uint32 {
	if m != nil {
		return m.RouteIfIndex
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *Esqm_GtpDatas_GtpData) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetVpnName() string {
	if m != nil {
		return m.VpnName
	}
	return ""
}

func (m *Esqm_GtpDatas_GtpData) GetHeartbeatTimeSec() uint32 {
	if m != nil {
		return m.HeartbeatTimeSec
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetHeartbeatTimeNanoSec() uint32 {
	if m != nil {
		return m.HeartbeatTimeNanoSec
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetPacketNum() uint64 {
	if m != nil {
		return m.PacketNum
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetPacketBytes() uint64 {
	if m != nil {
		return m.PacketBytes
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetPacketType() Esqm_GtpDatas_GtpData_PacketType {
	if m != nil {
		return m.PacketType
	}
	return Esqm_GtpDatas_GtpData_PacketType_HEARTBEATX_REQ
}

func (m *Esqm_GtpDatas_GtpData) GetAddressFamily() Esqm_GtpDatas_GtpData_AddressFamily {
	if m != nil {
		return m.AddressFamily
	}
	return Esqm_GtpDatas_GtpData_AddressFamily_IPV4
}

func (m *Esqm_GtpDatas_GtpData) GetLastIpId() uint32 {
	if m != nil {
		return m.LastIpId
	}
	return 0
}

func (m *Esqm_GtpDatas_GtpData) GetCurrIpId() uint32 {
	if m != nil {
		return m.CurrIpId
	}
	return 0
}

func init() {
	proto.RegisterEnum("huawei_esqm.Esqm_TcpDatas_TcpData_AgeType", Esqm_TcpDatas_TcpData_AgeType_name, Esqm_TcpDatas_TcpData_AgeType_value)
	proto.RegisterEnum("huawei_esqm.Esqm_TcpDatas_TcpData_FlowType", Esqm_TcpDatas_TcpData_FlowType_name, Esqm_TcpDatas_TcpData_FlowType_value)
	proto.RegisterEnum("huawei_esqm.Esqm_TcpDatas_TcpData_FlowDirection", Esqm_TcpDatas_TcpData_FlowDirection_name, Esqm_TcpDatas_TcpData_FlowDirection_value)
	proto.RegisterEnum("huawei_esqm.Esqm_TcpDatas_TcpData_AddressFamily", Esqm_TcpDatas_TcpData_AddressFamily_name, Esqm_TcpDatas_TcpData_AddressFamily_value)
	proto.RegisterEnum("huawei_esqm.Esqm_GtpDatas_GtpData_AgeType", Esqm_GtpDatas_GtpData_AgeType_name, Esqm_GtpDatas_GtpData_AgeType_value)
	proto.RegisterEnum("huawei_esqm.Esqm_GtpDatas_GtpData_FlowType", Esqm_GtpDatas_GtpData_FlowType_name, Esqm_GtpDatas_GtpData_FlowType_value)
	proto.RegisterEnum("huawei_esqm.Esqm_GtpDatas_GtpData_FlowDirection", Esqm_GtpDatas_GtpData_FlowDirection_name, Esqm_GtpDatas_GtpData_FlowDirection_value)
	proto.RegisterEnum("huawei_esqm.Esqm_GtpDatas_GtpData_PacketType", Esqm_GtpDatas_GtpData_PacketType_name, Esqm_GtpDatas_GtpData_PacketType_value)
	proto.RegisterEnum("huawei_esqm.Esqm_GtpDatas_GtpData_AddressFamily", Esqm_GtpDatas_GtpData_AddressFamily_name, Esqm_GtpDatas_GtpData_AddressFamily_value)
	proto.RegisterType((*Esqm)(nil), "huawei_esqm.Esqm")
	proto.RegisterType((*Esqm_TcpDatas)(nil), "huawei_esqm.Esqm.TcpDatas")
	proto.RegisterType((*Esqm_TcpDatas_TcpData)(nil), "huawei_esqm.Esqm.TcpDatas.TcpData")
	proto.RegisterType((*Esqm_GtpDatas)(nil), "huawei_esqm.Esqm.GtpDatas")
	proto.RegisterType((*Esqm_GtpDatas_GtpData)(nil), "huawei_esqm.Esqm.GtpDatas.GtpData")
}

func init() {
	proto.RegisterFile("proto/sensors/huawei-esqm/huawei-esqm.proto", fileDescriptor_761887d2510e3815)
}

var fileDescriptor_761887d2510e3815 = []byte{
	// 977 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0xcf, 0x52, 0xdb, 0x46,
	0x18, 0x47, 0x60, 0x40, 0x7c, 0xc6, 0x54, 0xd9, 0x40, 0x50, 0xd4, 0x36, 0xf5, 0x78, 0x32, 0x1d,
	0x4f, 0x33, 0x72, 0x3a, 0x34, 0xd3, 0xc9, 0xa5, 0xe9, 0x18, 0x2c, 0x1c, 0xb5, 0x89, 0x71, 0x64,
	0x41, 0xdd, 0xd3, 0x8e, 0x90, 0x16, 0xd0, 0xd4, 0x96, 0x14, 0x69, 0x1d, 0xc2, 0x7b, 0xf4, 0xd2,
	0x97, 0xc8, 0x53, 0xf4, 0x45, 0x7a, 0xe9, 0x73, 0x74, 0xf6, 0x93, 0xd6, 0xc6, 0xd8, 0xa4, 0x6e,
	0x93, 0x4b, 0x6e, 0xde, 0xdf, 0x3f, 0xed, 0xee, 0x27, 0xfd, 0x0c, 0x8f, 0x92, 0x34, 0xe6, 0xf1,
	0xe3, 0x8c, 0x45, 0x59, 0x9c, 0x66, 0x8f, 0x2f, 0x46, 0xde, 0x25, 0x0b, 0x4d, 0x96, 0xbd, 0x1e,
	0x5e, 0xff, 0xdd, 0x40, 0x15, 0x29, 0xe7, 0x10, 0x15, 0x50, 0xed, 0xf7, 0x5d, 0x28, 0x59, 0xd9,
	0xeb, 0x21, 0x79, 0x0a, 0x1b, 0xdc, 0x4f, 0x68, 0xe0, 0x71, 0x2f, 0xd3, 0x95, 0xaa, 0x52, 0x2f,
	0xef, 0x19, 0x8d, 0x6b, 0xca, 0x86, 0x50, 0x35, 0x5c, 0x3f, 0x69, 0x09, 0x85, 0x23, 0xc4, 0x26,
	0x8a, 0x85, 0xf3, 0x9c, 0x4b, 0xe7, 0xf2, 0x6d, 0xce, 0x36, 0x97, 0xce, 0x73, 0x5e, 0x38, 0x8d,
	0x77, 0x65, 0x50, 0x65, 0x22, 0x79, 0x06, 0xaa, 0xdc, 0x80, 0xae, 0x54, 0x57, 0xea, 0xe5, 0xbd,
	0xda, 0xed, 0xcf, 0x97, 0x3f, 0x1c, 0x55, 0xee, 0xc3, 0xf8, 0x0b, 0x60, 0xbd, 0x40, 0x49, 0x15,
	0xca, 0x59, 0xea, 0xd3, 0x30, 0xa1, 0x5e, 0x10, 0xa4, 0x78, 0x9c, 0x0d, 0x47, 0x40, 0x66, 0x98,
	0x98, 0x02, 0x12, 0x8a, 0x20, 0xe3, 0x63, 0xc5, 0x72, 0xae, 0x08, 0x32, 0x3e, 0x56, 0x18, 0xa0,
	0x8a, 0x8c, 0x24, 0x4e, 0xb9, 0xbe, 0x52, 0x55, 0xea, 0x15, 0x47, 0xac, 0x4d, 0xb1, 0x16, 0x9c,
	0x70, 0x23, 0x57, 0xca, 0x39, 0x61, 0x95, 0x1c, 0xde, 0xb3, 0x1f, 0x0f, 0xf4, 0xd5, 0x9c, 0x93,
	0x6b, 0x72, 0x08, 0xaa, 0x77, 0xce, 0x28, 0xbf, 0x4a, 0x98, 0xbe, 0x56, 0x55, 0xea, 0x5b, 0x7b,
	0xdf, 0xfc, 0xfb, 0x19, 0x1b, 0xcd, 0x73, 0xe6, 0x5e, 0x25, 0xcc, 0x11, 0x5e, 0x53, 0x78, 0x89,
	0x0d, 0x1b, 0x67, 0x83, 0xf8, 0x32, 0x0f, 0x5a, 0xc7, 0xa0, 0x47, 0x0b, 0x04, 0x1d, 0x0e, 0xe2,
	0x4b, 0x4c, 0x42, 0x77, 0x1e, 0xd5, 0x87, 0x2d, 0x8c, 0x0a, 0xc2, 0x94, 0xf9, 0x3c, 0x8c, 0x23,
	0x5d, 0xc5, 0xbc, 0x6f, 0x17, 0xcc, 0x6b, 0x49, 0x9f, 0x83, 0x39, 0xe6, 0x38, 0x87, 0x3c, 0x84,
	0x8a, 0xb8, 0x10, 0x1a, 0x9e, 0xd1, 0x30, 0x0a, 0xd8, 0x5b, 0x7d, 0x03, 0x6f, 0x03, 0x41, 0x33,
	0x3c, 0x33, 0x11, 0x24, 0x5f, 0xc3, 0x56, 0x1a, 0x8f, 0x38, 0x9b, 0xc8, 0x00, 0x65, 0x39, 0x3a,
	0xd1, 0x19, 0xa0, 0x46, 0xec, 0x2d, 0xa7, 0x17, 0x71, 0xa2, 0x97, 0x71, 0x5a, 0xb8, 0x36, 0x2f,
	0xe2, 0x84, 0x6c, 0xc3, 0xea, 0xc0, 0x3b, 0x65, 0x03, 0x7d, 0x13, 0xad, 0xf9, 0x42, 0x38, 0xde,
	0x24, 0x11, 0x8d, 0xbc, 0x21, 0xd3, 0x2b, 0xb9, 0xe3, 0x4d, 0x12, 0x99, 0x62, 0x4d, 0x9e, 0xc0,
	0x8e, 0x9f, 0x32, 0x8f, 0xb3, 0x80, 0xf2, 0x70, 0xc8, 0x32, 0xee, 0x0d, 0x13, 0x9a, 0x31, 0x5f,
	0xdf, 0xc2, 0x04, 0x49, 0x9a, 0x63, 0xd2, 0xcc, 0x98, 0x4f, 0x9e, 0x81, 0x31, 0xeb, 0x8a, 0xbc,
	0x28, 0x46, 0xeb, 0x67, 0x68, 0x35, 0x66, 0xad, 0x42, 0x81, 0xfe, 0x07, 0x00, 0x89, 0xe7, 0xff,
	0xc6, 0x38, 0x8d, 0x46, 0x43, 0x5d, 0xab, 0x2a, 0xf5, 0x92, 0x53, 0x20, 0x66, 0x34, 0x1a, 0x8a,
	0x97, 0x32, 0x65, 0x3c, 0xf5, 0xa2, 0x0c, 0x05, 0x77, 0x50, 0x20, 0x21, 0x54, 0x3c, 0x84, 0x8a,
	0x54, 0xa4, 0x5e, 0x10, 0xc6, 0x3a, 0x41, 0x8d, 0x04, 0x4d, 0x04, 0xc5, 0x4c, 0xc5, 0x2b, 0xcc,
	0xb2, 0x8c, 0x9e, 0x79, 0xc3, 0x70, 0x70, 0xa5, 0xdf, 0x5d, 0x78, 0xa6, 0xcd, 0xdc, 0x78, 0x88,
	0x3e, 0x47, 0xe6, 0x98, 0x79, 0x4e, 0xed, 0x4f, 0x05, 0xd6, 0x8b, 0xd7, 0x91, 0x3c, 0x00, 0xc3,
	0xee, 0x9c, 0x34, 0x5f, 0xd8, 0x2d, 0x6a, 0x75, 0x8e, 0x5f, 0xd2, 0x93, 0xe6, 0x8b, 0x63, 0x8b,
	0x16, 0xac, 0xb6, 0x44, 0x76, 0xe1, 0x6e, 0xb1, 0xa0, 0xcd, 0xb6, 0xdd, 0x69, 0xf7, 0xa9, 0x6b,
	0xbf, 0xb4, 0x34, 0x85, 0x6c, 0x83, 0x26, 0x09, 0xf7, 0xa0, 0xdb, 0xa7, 0x87, 0x76, 0x47, 0x5b,
	0x9e, 0x41, 0x9d, 0x9e, 0xab, 0xad, 0x10, 0x03, 0xee, 0x49, 0xb4, 0x77, 0xe0, 0x76, 0xfb, 0xb4,
	0xf7, 0xfc, 0xd8, 0x6d, 0x1d, 0xfd, 0xd2, 0xd1, 0x4a, 0xe4, 0x2b, 0xf8, 0x7c, 0x3e, 0xd7, 0xa7,
	0xcd, 0x83, 0x9f, 0xb5, 0xd5, 0xeb, 0x3b, 0xc8, 0x05, 0xcd, 0xfd, 0x23, 0xc7, 0xd5, 0xd6, 0x6a,
	0xef, 0x14, 0x50, 0xe5, 0xc7, 0x20, 0x62, 0xe6, 0x9c, 0x43, 0xd2, 0xda, 0x12, 0xd9, 0x81, 0x3b,
	0x72, 0x95, 0x6f, 0xad, 0xf7, 0x6b, 0x47, 0x53, 0xc4, 0xd6, 0x66, 0xe0, 0xfc, 0xc9, 0xcb, 0xe2,
	0xc9, 0x63, 0xae, 0xd8, 0x9b, 0x20, 0x56, 0xe6, 0x10, 0x76, 0xc7, 0x76, 0xb5, 0x12, 0xf9, 0x02,
	0xf4, 0x39, 0x44, 0x71, 0x92, 0x5a, 0x0b, 0x2a, 0x53, 0x1f, 0x1b, 0xb9, 0x0f, 0x3b, 0x53, 0x00,
	0xb5, 0x3b, 0x6d, 0xc7, 0xea, 0xf5, 0xb4, 0x25, 0xa2, 0xc3, 0xf6, 0x34, 0x65, 0xe5, 0x8c, 0x52,
	0xfb, 0x11, 0x2a, 0x53, 0xe3, 0x25, 0xf7, 0x80, 0x4c, 0x01, 0xd4, 0xee, 0x9e, 0x3c, 0xd1, 0x96,
	0xe6, 0xe2, 0xdf, 0x6b, 0x8a, 0xf1, 0x37, 0x80, 0x2a, 0x8b, 0x5c, 0x14, 0xb6, 0xec, 0xfd, 0xdb,
	0x0b, 0x5b, 0xaa, 0xe5, 0x0f, 0x47, 0x95, 0xf5, 0x6f, 0xfc, 0x01, 0xb0, 0x5e, 0xa0, 0x9f, 0x76,
	0x61, 0xdf, 0x3c, 0xe3, 0xff, 0x2e, 0xec, 0x99, 0xa0, 0x0f, 0x2c, 0xec, 0xb9, 0x79, 0x9f, 0x66,
	0x61, 0x37, 0x80, 0x5c, 0x30, 0x2f, 0xe5, 0xa7, 0xcc, 0xe3, 0x58, 0xbe, 0xd7, 0xda, 0x7a, 0xc2,
	0x60, 0xe9, 0x62, 0xd5, 0x3e, 0x85, 0xdd, 0x1b, 0xfa, 0x1b, 0x3d, 0xbd, 0x7b, 0xc3, 0xb4, 0x70,
	0x49, 0xd7, 0x60, 0xb3, 0xe0, 0x4f, 0xaf, 0x38, 0xcb, 0x8a, 0x96, 0x2e, 0x30, 0x13, 0x31, 0x72,
	0x04, 0xe5, 0x42, 0x83, 0x03, 0x27, 0x38, 0x20, 0x73, 0x81, 0x01, 0x75, 0xd1, 0x85, 0x23, 0x2f,
	0x12, 0xc6, 0x43, 0x5f, 0xb4, 0xd1, 0x67, 0xdf, 0xc6, 0xf7, 0x35, 0xba, 0x38, 0xee, 0xc0, 0xcb,
	0x3f, 0xac, 0x30, 0xd0, 0xb7, 0xf1, 0x6e, 0x10, 0x11, 0xdf, 0x55, 0x18, 0x08, 0xde, 0x1f, 0xa5,
	0x69, 0xc1, 0xef, 0xe4, 0xbc, 0x40, 0x72, 0xbe, 0xb6, 0xff, 0xe1, 0x7f, 0x08, 0xb5, 0x1f, 0xfe,
	0x4b, 0x1b, 0x6b, 0xb0, 0x39, 0x2e, 0xca, 0xb6, 0xdb, 0xd5, 0xd6, 0x3e, 0x52, 0x39, 0xfe, 0x04,
	0x30, 0xb9, 0x7d, 0xf2, 0x25, 0xdc, 0x9f, 0xac, 0xe8, 0x73, 0xab, 0xe9, 0xb8, 0xfb, 0x56, 0xd3,
	0xed, 0x53, 0xc7, 0x7a, 0xa5, 0x2d, 0xbd, 0x87, 0xee, 0xbd, 0xfa, 0x08, 0x45, 0x7b, 0xba, 0x86,
	0x0d, 0xf4, 0xdd, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x89, 0xc2, 0xae, 0xc7, 0xd9, 0x0b, 0x00,
	0x00,
}
