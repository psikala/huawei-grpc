// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sensors/huawei-ifm/huawei-ifm.proto

package huawei_ifm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ifm_Interfaces_Interface_Class int32

const (
	Ifm_Interfaces_Interface_Class_MAINX_INTERFACE Ifm_Interfaces_Interface_Class = 0
	Ifm_Interfaces_Interface_Class_SUBX_INTERFACE  Ifm_Interfaces_Interface_Class = 1
)

var Ifm_Interfaces_Interface_Class_name = map[int32]string{
	0: "Class_MAINX_INTERFACE",
	1: "Class_SUBX_INTERFACE",
}

var Ifm_Interfaces_Interface_Class_value = map[string]int32{
	"Class_MAINX_INTERFACE": 0,
	"Class_SUBX_INTERFACE":  1,
}

func (x Ifm_Interfaces_Interface_Class) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Class_name, int32(x))
}

func (Ifm_Interfaces_Interface_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0}
}

type Ifm_Interfaces_Interface_Type int32

const (
	Ifm_Interfaces_Interface_Type_ETHERNET           Ifm_Interfaces_Interface_Type = 0
	Ifm_Interfaces_Interface_Type_GIGABITETHERNET    Ifm_Interfaces_Interface_Type = 2
	Ifm_Interfaces_Interface_Type_ETHX_TRUNK         Ifm_Interfaces_Interface_Type = 4
	Ifm_Interfaces_Interface_Type_IPX_TRUNK          Ifm_Interfaces_Interface_Type = 5
	Ifm_Interfaces_Interface_Type_VIRTUALX_ETHERNET  Ifm_Interfaces_Interface_Type = 6
	Ifm_Interfaces_Interface_Type_SERIAL             Ifm_Interfaces_Interface_Type = 8
	Ifm_Interfaces_Interface_Type_POS                Ifm_Interfaces_Interface_Type = 9
	Ifm_Interfaces_Interface_Type_CPOS               Ifm_Interfaces_Interface_Type = 10
	Ifm_Interfaces_Interface_Type_ATM                Ifm_Interfaces_Interface_Type = 11
	Ifm_Interfaces_Interface_Type_TUNNEL             Ifm_Interfaces_Interface_Type = 14
	Ifm_Interfaces_Interface_Type_VLANIF             Ifm_Interfaces_Interface_Type = 15
	Ifm_Interfaces_Interface_Type_NULL               Ifm_Interfaces_Interface_Type = 18
	Ifm_Interfaces_Interface_Type_LOOPBACK           Ifm_Interfaces_Interface_Type = 19
	Ifm_Interfaces_Interface_Type_X_100GE            Ifm_Interfaces_Interface_Type = 20
	Ifm_Interfaces_Interface_Type_LMPIF              Ifm_Interfaces_Interface_Type = 21
	Ifm_Interfaces_Interface_Type_MTUNNEL            Ifm_Interfaces_Interface_Type = 22
	Ifm_Interfaces_Interface_Type_X_40GE             Ifm_Interfaces_Interface_Type = 23
	Ifm_Interfaces_Interface_Type_X_10GE             Ifm_Interfaces_Interface_Type = 24
	Ifm_Interfaces_Interface_Type_GEBRIEF            Ifm_Interfaces_Interface_Type = 25
	Ifm_Interfaces_Interface_Type_METH               Ifm_Interfaces_Interface_Type = 26
	Ifm_Interfaces_Interface_Type_STACKX_PORT        Ifm_Interfaces_Interface_Type = 27
	Ifm_Interfaces_Interface_Type_SIP                Ifm_Interfaces_Interface_Type = 28
	Ifm_Interfaces_Interface_Type_E1                 Ifm_Interfaces_Interface_Type = 30
	Ifm_Interfaces_Interface_Type_MPX_GROUP          Ifm_Interfaces_Interface_Type = 31
	Ifm_Interfaces_Interface_Type_IMAX_GROUP         Ifm_Interfaces_Interface_Type = 32
	Ifm_Interfaces_Interface_Type_VMETH              Ifm_Interfaces_Interface_Type = 33
	Ifm_Interfaces_Interface_Type_REMOTEX_AP         Ifm_Interfaces_Interface_Type = 35
	Ifm_Interfaces_Interface_Type_VBRIDGE            Ifm_Interfaces_Interface_Type = 36
	Ifm_Interfaces_Interface_Type_ATMX_BUNDLE        Ifm_Interfaces_Interface_Type = 37
	Ifm_Interfaces_Interface_Type_FIBERX_CHANNEL     Ifm_Interfaces_Interface_Type = 38
	Ifm_Interfaces_Interface_Type_INFINIBAND         Ifm_Interfaces_Interface_Type = 39
	Ifm_Interfaces_Interface_Type_VBDIF              Ifm_Interfaces_Interface_Type = 40
	Ifm_Interfaces_Interface_Type_T1                 Ifm_Interfaces_Interface_Type = 41
	Ifm_Interfaces_Interface_Type_T3                 Ifm_Interfaces_Interface_Type = 42
	Ifm_Interfaces_Interface_Type_VC4                Ifm_Interfaces_Interface_Type = 43
	Ifm_Interfaces_Interface_Type_VC12               Ifm_Interfaces_Interface_Type = 44
	Ifm_Interfaces_Interface_Type_GLOBALX_VE         Ifm_Interfaces_Interface_Type = 45
	Ifm_Interfaces_Interface_Type_FABRICX_PORT       Ifm_Interfaces_Interface_Type = 46
	Ifm_Interfaces_Interface_Type_E3                 Ifm_Interfaces_Interface_Type = 48
	Ifm_Interfaces_Interface_Type_VP                 Ifm_Interfaces_Interface_Type = 49
	Ifm_Interfaces_Interface_Type_DCNINTERFACE       Ifm_Interfaces_Interface_Type = 50
	Ifm_Interfaces_Interface_Type_CPOSX_TRUNK        Ifm_Interfaces_Interface_Type = 51
	Ifm_Interfaces_Interface_Type_TRUNKX_SERIAL      Ifm_Interfaces_Interface_Type = 52
	Ifm_Interfaces_Interface_Type_GLOBALX_MPX_GROUP  Ifm_Interfaces_Interface_Type = 53
	Ifm_Interfaces_Interface_Type_OTN                Ifm_Interfaces_Interface_Type = 55
	Ifm_Interfaces_Interface_Type_GLOBALX_IMAX_GROUP Ifm_Interfaces_Interface_Type = 57
	Ifm_Interfaces_Interface_Type_POSX_TRUNK         Ifm_Interfaces_Interface_Type = 59
	Ifm_Interfaces_Interface_Type_GMPLSX_UNI         Ifm_Interfaces_Interface_Type = 63
	Ifm_Interfaces_Interface_Type_WDM                Ifm_Interfaces_Interface_Type = 64
	Ifm_Interfaces_Interface_Type_NVE                Ifm_Interfaces_Interface_Type = 65
	Ifm_Interfaces_Interface_Type_FCOEX_PORT         Ifm_Interfaces_Interface_Type = 67
	Ifm_Interfaces_Interface_Type_VIRTUALX_TEMPLATE  Ifm_Interfaces_Interface_Type = 68
	Ifm_Interfaces_Interface_Type_FC                 Ifm_Interfaces_Interface_Type = 70
	Ifm_Interfaces_Interface_Type_X_4X10GE           Ifm_Interfaces_Interface_Type = 71
	Ifm_Interfaces_Interface_Type_X_10X10GE          Ifm_Interfaces_Interface_Type = 72
	Ifm_Interfaces_Interface_Type_X_3X40GE           Ifm_Interfaces_Interface_Type = 73
	Ifm_Interfaces_Interface_Type_X_4X25GE           Ifm_Interfaces_Interface_Type = 74
	Ifm_Interfaces_Interface_Type_X_25GE             Ifm_Interfaces_Interface_Type = 75
	Ifm_Interfaces_Interface_Type_IMETH              Ifm_Interfaces_Interface_Type = 79
	Ifm_Interfaces_Interface_Type_PWX_VE             Ifm_Interfaces_Interface_Type = 88
	Ifm_Interfaces_Interface_Type_VXX_TUNNEL         Ifm_Interfaces_Interface_Type = 89
	Ifm_Interfaces_Interface_Type_SERVICEIF          Ifm_Interfaces_Interface_Type = 90
	Ifm_Interfaces_Interface_Type_XGIGABITETHERNET   Ifm_Interfaces_Interface_Type = 91
	Ifm_Interfaces_Interface_Type_X_200GE            Ifm_Interfaces_Interface_Type = 92
	Ifm_Interfaces_Interface_Type_VIRTUALX_ODUK      Ifm_Interfaces_Interface_Type = 94
	Ifm_Interfaces_Interface_Type_FLEXE              Ifm_Interfaces_Interface_Type = 95
	Ifm_Interfaces_Interface_Type_FLEXEX_200GE       Ifm_Interfaces_Interface_Type = 96
	Ifm_Interfaces_Interface_Type_X_50X_100GE        Ifm_Interfaces_Interface_Type = 101
	Ifm_Interfaces_Interface_Type_X_50GE             Ifm_Interfaces_Interface_Type = 102
	Ifm_Interfaces_Interface_Type_FLEXEX_50G         Ifm_Interfaces_Interface_Type = 103
	Ifm_Interfaces_Interface_Type_FLEXEX_100G        Ifm_Interfaces_Interface_Type = 104
	Ifm_Interfaces_Interface_Type_FLEXEX_50X_100G    Ifm_Interfaces_Interface_Type = 105
	Ifm_Interfaces_Interface_Type_VIRTUALX_SERIAL    Ifm_Interfaces_Interface_Type = 107
	Ifm_Interfaces_Interface_Type_X_400GE            Ifm_Interfaces_Interface_Type = 108
)

var Ifm_Interfaces_Interface_Type_name = map[int32]string{
	0:   "Type_ETHERNET",
	2:   "Type_GIGABITETHERNET",
	4:   "Type_ETHX_TRUNK",
	5:   "Type_IPX_TRUNK",
	6:   "Type_VIRTUALX_ETHERNET",
	8:   "Type_SERIAL",
	9:   "Type_POS",
	10:  "Type_CPOS",
	11:  "Type_ATM",
	14:  "Type_TUNNEL",
	15:  "Type_VLANIF",
	18:  "Type_NULL",
	19:  "Type_LOOPBACK",
	20:  "Type_X_100GE",
	21:  "Type_LMPIF",
	22:  "Type_MTUNNEL",
	23:  "Type_X_40GE",
	24:  "Type_X_10GE",
	25:  "Type_GEBRIEF",
	26:  "Type_METH",
	27:  "Type_STACKX_PORT",
	28:  "Type_SIP",
	30:  "Type_E1",
	31:  "Type_MPX_GROUP",
	32:  "Type_IMAX_GROUP",
	33:  "Type_VMETH",
	35:  "Type_REMOTEX_AP",
	36:  "Type_VBRIDGE",
	37:  "Type_ATMX_BUNDLE",
	38:  "Type_FIBERX_CHANNEL",
	39:  "Type_INFINIBAND",
	40:  "Type_VBDIF",
	41:  "Type_T1",
	42:  "Type_T3",
	43:  "Type_VC4",
	44:  "Type_VC12",
	45:  "Type_GLOBALX_VE",
	46:  "Type_FABRICX_PORT",
	48:  "Type_E3",
	49:  "Type_VP",
	50:  "Type_DCNINTERFACE",
	51:  "Type_CPOSX_TRUNK",
	52:  "Type_TRUNKX_SERIAL",
	53:  "Type_GLOBALX_MPX_GROUP",
	55:  "Type_OTN",
	57:  "Type_GLOBALX_IMAX_GROUP",
	59:  "Type_POSX_TRUNK",
	63:  "Type_GMPLSX_UNI",
	64:  "Type_WDM",
	65:  "Type_NVE",
	67:  "Type_FCOEX_PORT",
	68:  "Type_VIRTUALX_TEMPLATE",
	70:  "Type_FC",
	71:  "Type_X_4X10GE",
	72:  "Type_X_10X10GE",
	73:  "Type_X_3X40GE",
	74:  "Type_X_4X25GE",
	75:  "Type_X_25GE",
	79:  "Type_IMETH",
	88:  "Type_PWX_VE",
	89:  "Type_VXX_TUNNEL",
	90:  "Type_SERVICEIF",
	91:  "Type_XGIGABITETHERNET",
	92:  "Type_X_200GE",
	94:  "Type_VIRTUALX_ODUK",
	95:  "Type_FLEXE",
	96:  "Type_FLEXEX_200GE",
	101: "Type_X_50X_100GE",
	102: "Type_X_50GE",
	103: "Type_FLEXEX_50G",
	104: "Type_FLEXEX_100G",
	105: "Type_FLEXEX_50X_100G",
	107: "Type_VIRTUALX_SERIAL",
	108: "Type_X_400GE",
}

var Ifm_Interfaces_Interface_Type_value = map[string]int32{
	"Type_ETHERNET":           0,
	"Type_GIGABITETHERNET":    2,
	"Type_ETHX_TRUNK":         4,
	"Type_IPX_TRUNK":          5,
	"Type_VIRTUALX_ETHERNET":  6,
	"Type_SERIAL":             8,
	"Type_POS":                9,
	"Type_CPOS":               10,
	"Type_ATM":                11,
	"Type_TUNNEL":             14,
	"Type_VLANIF":             15,
	"Type_NULL":               18,
	"Type_LOOPBACK":           19,
	"Type_X_100GE":            20,
	"Type_LMPIF":              21,
	"Type_MTUNNEL":            22,
	"Type_X_40GE":             23,
	"Type_X_10GE":             24,
	"Type_GEBRIEF":            25,
	"Type_METH":               26,
	"Type_STACKX_PORT":        27,
	"Type_SIP":                28,
	"Type_E1":                 30,
	"Type_MPX_GROUP":          31,
	"Type_IMAX_GROUP":         32,
	"Type_VMETH":              33,
	"Type_REMOTEX_AP":         35,
	"Type_VBRIDGE":            36,
	"Type_ATMX_BUNDLE":        37,
	"Type_FIBERX_CHANNEL":     38,
	"Type_INFINIBAND":         39,
	"Type_VBDIF":              40,
	"Type_T1":                 41,
	"Type_T3":                 42,
	"Type_VC4":                43,
	"Type_VC12":               44,
	"Type_GLOBALX_VE":         45,
	"Type_FABRICX_PORT":       46,
	"Type_E3":                 48,
	"Type_VP":                 49,
	"Type_DCNINTERFACE":       50,
	"Type_CPOSX_TRUNK":        51,
	"Type_TRUNKX_SERIAL":      52,
	"Type_GLOBALX_MPX_GROUP":  53,
	"Type_OTN":                55,
	"Type_GLOBALX_IMAX_GROUP": 57,
	"Type_POSX_TRUNK":         59,
	"Type_GMPLSX_UNI":         63,
	"Type_WDM":                64,
	"Type_NVE":                65,
	"Type_FCOEX_PORT":         67,
	"Type_VIRTUALX_TEMPLATE":  68,
	"Type_FC":                 70,
	"Type_X_4X10GE":           71,
	"Type_X_10X10GE":          72,
	"Type_X_3X40GE":           73,
	"Type_X_4X25GE":           74,
	"Type_X_25GE":             75,
	"Type_IMETH":              79,
	"Type_PWX_VE":             88,
	"Type_VXX_TUNNEL":         89,
	"Type_SERVICEIF":          90,
	"Type_XGIGABITETHERNET":   91,
	"Type_X_200GE":            92,
	"Type_VIRTUALX_ODUK":      94,
	"Type_FLEXE":              95,
	"Type_FLEXEX_200GE":       96,
	"Type_X_50X_100GE":        101,
	"Type_X_50GE":             102,
	"Type_FLEXEX_50G":         103,
	"Type_FLEXEX_100G":        104,
	"Type_FLEXEX_50X_100G":    105,
	"Type_VIRTUALX_SERIAL":    107,
	"Type_X_400GE":            108,
}

func (x Ifm_Interfaces_Interface_Type) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Type_name, int32(x))
}

func (Ifm_Interfaces_Interface_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 1}
}

type Ifm_Interfaces_Interface_AdminStatus int32

const (
	Ifm_Interfaces_Interface_AdminStatus_DOWN Ifm_Interfaces_Interface_AdminStatus = 0
	Ifm_Interfaces_Interface_AdminStatus_UP   Ifm_Interfaces_Interface_AdminStatus = 1
)

var Ifm_Interfaces_Interface_AdminStatus_name = map[int32]string{
	0: "AdminStatus_DOWN",
	1: "AdminStatus_UP",
}

var Ifm_Interfaces_Interface_AdminStatus_value = map[string]int32{
	"AdminStatus_DOWN": 0,
	"AdminStatus_UP":   1,
}

func (x Ifm_Interfaces_Interface_AdminStatus) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_AdminStatus_name, int32(x))
}

func (Ifm_Interfaces_Interface_AdminStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 2}
}

type Ifm_Interfaces_Interface_LinkProtocol int32

const (
	Ifm_Interfaces_Interface_LinkProtocol_ETHERNET Ifm_Interfaces_Interface_LinkProtocol = 0
	Ifm_Interfaces_Interface_LinkProtocol_PPP      Ifm_Interfaces_Interface_LinkProtocol = 1
	Ifm_Interfaces_Interface_LinkProtocol_HDLC     Ifm_Interfaces_Interface_LinkProtocol = 2
	Ifm_Interfaces_Interface_LinkProtocol_FR       Ifm_Interfaces_Interface_LinkProtocol = 3
	Ifm_Interfaces_Interface_LinkProtocol_ATM      Ifm_Interfaces_Interface_LinkProtocol = 6
	Ifm_Interfaces_Interface_LinkProtocol_TDM      Ifm_Interfaces_Interface_LinkProtocol = 7
)

var Ifm_Interfaces_Interface_LinkProtocol_name = map[int32]string{
	0: "LinkProtocol_ETHERNET",
	1: "LinkProtocol_PPP",
	2: "LinkProtocol_HDLC",
	3: "LinkProtocol_FR",
	6: "LinkProtocol_ATM",
	7: "LinkProtocol_TDM",
}

var Ifm_Interfaces_Interface_LinkProtocol_value = map[string]int32{
	"LinkProtocol_ETHERNET": 0,
	"LinkProtocol_PPP":      1,
	"LinkProtocol_HDLC":     2,
	"LinkProtocol_FR":       3,
	"LinkProtocol_ATM":      6,
	"LinkProtocol_TDM":      7,
}

func (x Ifm_Interfaces_Interface_LinkProtocol) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_LinkProtocol_name, int32(x))
}

func (Ifm_Interfaces_Interface_LinkProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 3}
}

type Ifm_Interfaces_Interface_RouterType int32

const (
	Ifm_Interfaces_Interface_RouterType_PTOP      Ifm_Interfaces_Interface_RouterType = 0
	Ifm_Interfaces_Interface_RouterType_PTOMP     Ifm_Interfaces_Interface_RouterType = 1
	Ifm_Interfaces_Interface_RouterType_BROADCAST Ifm_Interfaces_Interface_RouterType = 2
	Ifm_Interfaces_Interface_RouterType_NBMA      Ifm_Interfaces_Interface_RouterType = 3
	Ifm_Interfaces_Interface_RouterType_INVALID   Ifm_Interfaces_Interface_RouterType = 255
)

var Ifm_Interfaces_Interface_RouterType_name = map[int32]string{
	0:   "RouterType_PTOP",
	1:   "RouterType_PTOMP",
	2:   "RouterType_BROADCAST",
	3:   "RouterType_NBMA",
	255: "RouterType_INVALID",
}

var Ifm_Interfaces_Interface_RouterType_value = map[string]int32{
	"RouterType_PTOP":      0,
	"RouterType_PTOMP":     1,
	"RouterType_BROADCAST": 2,
	"RouterType_NBMA":      3,
	"RouterType_INVALID":   255,
}

func (x Ifm_Interfaces_Interface_RouterType) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_RouterType_name, int32(x))
}

func (Ifm_Interfaces_Interface_RouterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 4}
}

type Ifm_Interfaces_Interface_StatisticMode int32

const (
	Ifm_Interfaces_Interface_INVALID_ENUM_VALUE_StatisticMode Ifm_Interfaces_Interface_StatisticMode = 0
	Ifm_Interfaces_Interface_StatisticMode_INTERFACEX_BASED   Ifm_Interfaces_Interface_StatisticMode = 1
	Ifm_Interfaces_Interface_StatisticMode_VLANX_GROUPX_BASED Ifm_Interfaces_Interface_StatisticMode = 2
)

var Ifm_Interfaces_Interface_StatisticMode_name = map[int32]string{
	0: "INVALID_ENUM_VALUE_StatisticMode",
	1: "StatisticMode_INTERFACEX_BASED",
	2: "StatisticMode_VLANX_GROUPX_BASED",
}

var Ifm_Interfaces_Interface_StatisticMode_value = map[string]int32{
	"INVALID_ENUM_VALUE_StatisticMode": 0,
	"StatisticMode_INTERFACEX_BASED":   1,
	"StatisticMode_VLANX_GROUPX_BASED": 2,
}

func (x Ifm_Interfaces_Interface_StatisticMode) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_StatisticMode_name, int32(x))
}

func (Ifm_Interfaces_Interface_StatisticMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 5}
}

type Ifm_Interfaces_Interface_Dynamic_OperStatus int32

const (
	Ifm_Interfaces_Interface_Dynamic_OperStatus_DOWN Ifm_Interfaces_Interface_Dynamic_OperStatus = 0
	Ifm_Interfaces_Interface_Dynamic_OperStatus_UP   Ifm_Interfaces_Interface_Dynamic_OperStatus = 1
)

var Ifm_Interfaces_Interface_Dynamic_OperStatus_name = map[int32]string{
	0: "OperStatus_DOWN",
	1: "OperStatus_UP",
}

var Ifm_Interfaces_Interface_Dynamic_OperStatus_value = map[string]int32{
	"OperStatus_DOWN": 0,
	"OperStatus_UP":   1,
}

func (x Ifm_Interfaces_Interface_Dynamic_OperStatus) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Dynamic_OperStatus_name, int32(x))
}

func (Ifm_Interfaces_Interface_Dynamic_OperStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0, 0}
}

type Ifm_Interfaces_Interface_Dynamic_PhysicalStatus int32

const (
	Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_DOWN Ifm_Interfaces_Interface_Dynamic_PhysicalStatus = 0
	Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_UP   Ifm_Interfaces_Interface_Dynamic_PhysicalStatus = 1
)

var Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_name = map[int32]string{
	0: "PhysicalStatus_DOWN",
	1: "PhysicalStatus_UP",
}

var Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_value = map[string]int32{
	"PhysicalStatus_DOWN": 0,
	"PhysicalStatus_UP":   1,
}

func (x Ifm_Interfaces_Interface_Dynamic_PhysicalStatus) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_name, int32(x))
}

func (Ifm_Interfaces_Interface_Dynamic_PhysicalStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0, 1}
}

type Ifm_Interfaces_Interface_Dynamic_LinkStatus int32

const (
	Ifm_Interfaces_Interface_Dynamic_LinkStatus_DOWN Ifm_Interfaces_Interface_Dynamic_LinkStatus = 0
	Ifm_Interfaces_Interface_Dynamic_LinkStatus_UP   Ifm_Interfaces_Interface_Dynamic_LinkStatus = 1
)

var Ifm_Interfaces_Interface_Dynamic_LinkStatus_name = map[int32]string{
	0: "LinkStatus_DOWN",
	1: "LinkStatus_UP",
}

var Ifm_Interfaces_Interface_Dynamic_LinkStatus_value = map[string]int32{
	"LinkStatus_DOWN": 0,
	"LinkStatus_UP":   1,
}

func (x Ifm_Interfaces_Interface_Dynamic_LinkStatus) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Dynamic_LinkStatus_name, int32(x))
}

func (Ifm_Interfaces_Interface_Dynamic_LinkStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0, 2}
}

type Ifm_Interfaces_Interface_Dynamic_Ipv4Status int32

const (
	Ifm_Interfaces_Interface_Dynamic_Ipv4Status_DOWN Ifm_Interfaces_Interface_Dynamic_Ipv4Status = 0
	Ifm_Interfaces_Interface_Dynamic_Ipv4Status_UP   Ifm_Interfaces_Interface_Dynamic_Ipv4Status = 1
)

var Ifm_Interfaces_Interface_Dynamic_Ipv4Status_name = map[int32]string{
	0: "Ipv4Status_DOWN",
	1: "Ipv4Status_UP",
}

var Ifm_Interfaces_Interface_Dynamic_Ipv4Status_value = map[string]int32{
	"Ipv4Status_DOWN": 0,
	"Ipv4Status_UP":   1,
}

func (x Ifm_Interfaces_Interface_Dynamic_Ipv4Status) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Dynamic_Ipv4Status_name, int32(x))
}

func (Ifm_Interfaces_Interface_Dynamic_Ipv4Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0, 3}
}

type Ifm_Interfaces_Interface_Dynamic_Ipv6Status int32

const (
	Ifm_Interfaces_Interface_Dynamic_Ipv6Status_DOWN Ifm_Interfaces_Interface_Dynamic_Ipv6Status = 0
	Ifm_Interfaces_Interface_Dynamic_Ipv6Status_UP   Ifm_Interfaces_Interface_Dynamic_Ipv6Status = 1
)

var Ifm_Interfaces_Interface_Dynamic_Ipv6Status_name = map[int32]string{
	0: "Ipv6Status_DOWN",
	1: "Ipv6Status_UP",
}

var Ifm_Interfaces_Interface_Dynamic_Ipv6Status_value = map[string]int32{
	"Ipv6Status_DOWN": 0,
	"Ipv6Status_UP":   1,
}

func (x Ifm_Interfaces_Interface_Dynamic_Ipv6Status) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Dynamic_Ipv6Status_name, int32(x))
}

func (Ifm_Interfaces_Interface_Dynamic_Ipv6Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0, 4}
}

type Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade int32

const (
	Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_GOOD   Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade = 0
	Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_HIGH   Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade = 1
	Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_MIDDLE Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade = 2
	Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_LOW    Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade = 4
)

var Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_name = map[int32]string{
	0: "LinkQualityGrade_GOOD",
	1: "LinkQualityGrade_HIGH",
	2: "LinkQualityGrade_MIDDLE",
	4: "LinkQualityGrade_LOW",
}

var Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_value = map[string]int32{
	"LinkQualityGrade_GOOD":   0,
	"LinkQualityGrade_HIGH":   1,
	"LinkQualityGrade_MIDDLE": 2,
	"LinkQualityGrade_LOW":    4,
}

func (x Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade) String() string {
	return proto.EnumName(Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_name, int32(x))
}

func (Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0, 5}
}

type Ifm struct {
	Global               *Ifm_Global     `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	Interfaces           *Ifm_Interfaces `protobuf:"bytes,2,opt,name=interfaces,proto3" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Ifm) Reset()         { *m = Ifm{} }
func (m *Ifm) String() string { return proto.CompactTextString(m) }
func (*Ifm) ProtoMessage()    {}
func (*Ifm) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0}
}

func (m *Ifm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm.Unmarshal(m, b)
}
func (m *Ifm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm.Marshal(b, m, deterministic)
}
func (m *Ifm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm.Merge(m, src)
}
func (m *Ifm) XXX_Size() int {
	return xxx_messageInfo_Ifm.Size(m)
}
func (m *Ifm) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm proto.InternalMessageInfo

func (m *Ifm) GetGlobal() *Ifm_Global {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *Ifm) GetInterfaces() *Ifm_Interfaces {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type Ifm_Global struct {
	StatisticInterval    uint32   `protobuf:"varint,1,opt,name=statistic_interval,json=statistic-interval,proto3" json:"statistic_interval,omitempty"`
	Ipv4IgnorePrimarySub bool     `protobuf:"varint,2,opt,name=ipv4_ignore_primary_sub,json=ipv4-ignore-primary-sub,proto3" json:"ipv4_ignore_primary_sub,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ifm_Global) Reset()         { *m = Ifm_Global{} }
func (m *Ifm_Global) String() string { return proto.CompactTextString(m) }
func (*Ifm_Global) ProtoMessage()    {}
func (*Ifm_Global) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 0}
}

func (m *Ifm_Global) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm_Global.Unmarshal(m, b)
}
func (m *Ifm_Global) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm_Global.Marshal(b, m, deterministic)
}
func (m *Ifm_Global) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm_Global.Merge(m, src)
}
func (m *Ifm_Global) XXX_Size() int {
	return xxx_messageInfo_Ifm_Global.Size(m)
}
func (m *Ifm_Global) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm_Global.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm_Global proto.InternalMessageInfo

func (m *Ifm_Global) GetStatisticInterval() uint32 {
	if m != nil {
		return m.StatisticInterval
	}
	return 0
}

func (m *Ifm_Global) GetIpv4IgnorePrimarySub() bool {
	if m != nil {
		return m.Ipv4IgnorePrimarySub
	}
	return false
}

type Ifm_Interfaces struct {
	Interface            []*Ifm_Interfaces_Interface `protobuf:"bytes,1,rep,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Ifm_Interfaces) Reset()         { *m = Ifm_Interfaces{} }
func (m *Ifm_Interfaces) String() string { return proto.CompactTextString(m) }
func (*Ifm_Interfaces) ProtoMessage()    {}
func (*Ifm_Interfaces) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1}
}

func (m *Ifm_Interfaces) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm_Interfaces.Unmarshal(m, b)
}
func (m *Ifm_Interfaces) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm_Interfaces.Marshal(b, m, deterministic)
}
func (m *Ifm_Interfaces) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm_Interfaces.Merge(m, src)
}
func (m *Ifm_Interfaces) XXX_Size() int {
	return xxx_messageInfo_Ifm_Interfaces.Size(m)
}
func (m *Ifm_Interfaces) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm_Interfaces.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm_Interfaces proto.InternalMessageInfo

func (m *Ifm_Interfaces) GetInterface() []*Ifm_Interfaces_Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type Ifm_Interfaces_Interface struct {
	Name                 string                                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index                uint32                                     `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Class                Ifm_Interfaces_Interface_Class             `protobuf:"varint,3,opt,name=class,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Class" json:"class,omitempty"`
	Type                 Ifm_Interfaces_Interface_Type              `protobuf:"varint,4,opt,name=type,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Type" json:"type,omitempty"`
	Position             string                                     `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	ParentName           string                                     `protobuf:"bytes,6,opt,name=parent_name,json=parent-name,proto3" json:"parent_name,omitempty"`
	Number               string                                     `protobuf:"bytes,7,opt,name=number,proto3" json:"number,omitempty"`
	Description          string                                     `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	AggregationName      string                                     `protobuf:"bytes,9,opt,name=aggregation_name,json=aggregation-name,proto3" json:"aggregation_name,omitempty"`
	IsL2Switch           bool                                       `protobuf:"varint,10,opt,name=is_l2_switch,json=is-l2-switch,proto3" json:"is_l2_switch,omitempty"`
	AdminStatus          Ifm_Interfaces_Interface_AdminStatus       `protobuf:"varint,11,opt,name=admin_status,json=admin-status,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_AdminStatus" json:"admin_status,omitempty"`
	LinkProtocol         Ifm_Interfaces_Interface_LinkProtocol      `protobuf:"varint,12,opt,name=link_protocol,json=link-protocol,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_LinkProtocol" json:"link_protocol,omitempty"`
	RouterType           Ifm_Interfaces_Interface_RouterType        `protobuf:"varint,13,opt,name=router_type,json=router-type,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_RouterType" json:"router_type,omitempty"`
	ClearIpDf            bool                                       `protobuf:"varint,14,opt,name=clear_ip_df,json=clear-ip-df,proto3" json:"clear_ip_df,omitempty"`
	LinkUpDownTrapEnable bool                                       `protobuf:"varint,15,opt,name=link_up_down_trap_enable,json=link-up-down-trap-enable,proto3" json:"link_up_down_trap_enable,omitempty"`
	StatisticEnable      bool                                       `protobuf:"varint,16,opt,name=statistic_enable,json=statistic-enable,proto3" json:"statistic_enable,omitempty"`
	StatisticMode        Ifm_Interfaces_Interface_StatisticMode     `protobuf:"varint,17,opt,name=statistic_mode,json=statistic-mode,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_StatisticMode" json:"statistic_mode,omitempty"`
	Bandwidth            uint32                                     `protobuf:"varint,18,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Mtu                  uint32                                     `protobuf:"varint,19,opt,name=mtu,proto3" json:"mtu,omitempty"`
	SpreadMtuFlag        bool                                       `protobuf:"varint,20,opt,name=spread_mtu_flag,json=spread-mtu-flag,proto3" json:"spread_mtu_flag,omitempty"`
	StatisticInterval    uint32                                     `protobuf:"varint,21,opt,name=statistic_interval,json=statistic-interval,proto3" json:"statistic_interval,omitempty"`
	VrfName              string                                     `protobuf:"bytes,22,opt,name=vrf_name,json=vrf-name,proto3" json:"vrf_name,omitempty"`
	L2ModeEnable         bool                                       `protobuf:"varint,23,opt,name=l2_mode_enable,json=l2-mode-enable,proto3" json:"l2_mode_enable,omitempty"`
	DownDelayTime        uint32                                     `protobuf:"varint,24,opt,name=down_delay_time,json=down-delay-time,proto3" json:"down_delay_time,omitempty"`
	MacAddress           string                                     `protobuf:"bytes,25,opt,name=mac_address,json=mac-address,proto3" json:"mac_address,omitempty"`
	Dynamic              *Ifm_Interfaces_Interface_Dynamic          `protobuf:"bytes,26,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	MibStatistics        *Ifm_Interfaces_Interface_MibStatistics    `protobuf:"bytes,27,opt,name=mib_statistics,json=mib-statistics,proto3" json:"mib_statistics,omitempty"`
	CommonStatistics     *Ifm_Interfaces_Interface_CommonStatistics `protobuf:"bytes,28,opt,name=common_statistics,json=common-statistics,proto3" json:"common_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *Ifm_Interfaces_Interface) Reset()         { *m = Ifm_Interfaces_Interface{} }
func (m *Ifm_Interfaces_Interface) String() string { return proto.CompactTextString(m) }
func (*Ifm_Interfaces_Interface) ProtoMessage()    {}
func (*Ifm_Interfaces_Interface) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0}
}

func (m *Ifm_Interfaces_Interface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm_Interfaces_Interface.Unmarshal(m, b)
}
func (m *Ifm_Interfaces_Interface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm_Interfaces_Interface.Marshal(b, m, deterministic)
}
func (m *Ifm_Interfaces_Interface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm_Interfaces_Interface.Merge(m, src)
}
func (m *Ifm_Interfaces_Interface) XXX_Size() int {
	return xxx_messageInfo_Ifm_Interfaces_Interface.Size(m)
}
func (m *Ifm_Interfaces_Interface) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm_Interfaces_Interface.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm_Interfaces_Interface proto.InternalMessageInfo

func (m *Ifm_Interfaces_Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Ifm_Interfaces_Interface) GetClass() Ifm_Interfaces_Interface_Class {
	if m != nil {
		return m.Class
	}
	return Ifm_Interfaces_Interface_Class_MAINX_INTERFACE
}

func (m *Ifm_Interfaces_Interface) GetType() Ifm_Interfaces_Interface_Type {
	if m != nil {
		return m.Type
	}
	return Ifm_Interfaces_Interface_Type_ETHERNET
}

func (m *Ifm_Interfaces_Interface) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetAggregationName() string {
	if m != nil {
		return m.AggregationName
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetIsL2Switch() bool {
	if m != nil {
		return m.IsL2Switch
	}
	return false
}

func (m *Ifm_Interfaces_Interface) GetAdminStatus() Ifm_Interfaces_Interface_AdminStatus {
	if m != nil {
		return m.AdminStatus
	}
	return Ifm_Interfaces_Interface_AdminStatus_DOWN
}

func (m *Ifm_Interfaces_Interface) GetLinkProtocol() Ifm_Interfaces_Interface_LinkProtocol {
	if m != nil {
		return m.LinkProtocol
	}
	return Ifm_Interfaces_Interface_LinkProtocol_ETHERNET
}

func (m *Ifm_Interfaces_Interface) GetRouterType() Ifm_Interfaces_Interface_RouterType {
	if m != nil {
		return m.RouterType
	}
	return Ifm_Interfaces_Interface_RouterType_PTOP
}

func (m *Ifm_Interfaces_Interface) GetClearIpDf() bool {
	if m != nil {
		return m.ClearIpDf
	}
	return false
}

func (m *Ifm_Interfaces_Interface) GetLinkUpDownTrapEnable() bool {
	if m != nil {
		return m.LinkUpDownTrapEnable
	}
	return false
}

func (m *Ifm_Interfaces_Interface) GetStatisticEnable() bool {
	if m != nil {
		return m.StatisticEnable
	}
	return false
}

func (m *Ifm_Interfaces_Interface) GetStatisticMode() Ifm_Interfaces_Interface_StatisticMode {
	if m != nil {
		return m.StatisticMode
	}
	return Ifm_Interfaces_Interface_INVALID_ENUM_VALUE_StatisticMode
}

func (m *Ifm_Interfaces_Interface) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *Ifm_Interfaces_Interface) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Ifm_Interfaces_Interface) GetSpreadMtuFlag() bool {
	if m != nil {
		return m.SpreadMtuFlag
	}
	return false
}

func (m *Ifm_Interfaces_Interface) GetStatisticInterval() uint32 {
	if m != nil {
		return m.StatisticInterval
	}
	return 0
}

func (m *Ifm_Interfaces_Interface) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetL2ModeEnable() bool {
	if m != nil {
		return m.L2ModeEnable
	}
	return false
}

func (m *Ifm_Interfaces_Interface) GetDownDelayTime() uint32 {
	if m != nil {
		return m.DownDelayTime
	}
	return 0
}

func (m *Ifm_Interfaces_Interface) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *Ifm_Interfaces_Interface) GetDynamic() *Ifm_Interfaces_Interface_Dynamic {
	if m != nil {
		return m.Dynamic
	}
	return nil
}

func (m *Ifm_Interfaces_Interface) GetMibStatistics() *Ifm_Interfaces_Interface_MibStatistics {
	if m != nil {
		return m.MibStatistics
	}
	return nil
}

func (m *Ifm_Interfaces_Interface) GetCommonStatistics() *Ifm_Interfaces_Interface_CommonStatistics {
	if m != nil {
		return m.CommonStatistics
	}
	return nil
}

type Ifm_Interfaces_Interface_Dynamic struct {
	OperStatus           Ifm_Interfaces_Interface_Dynamic_OperStatus       `protobuf:"varint,1,opt,name=oper_status,json=oper-status,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Dynamic_OperStatus" json:"oper_status,omitempty"`
	PhysicalStatus       Ifm_Interfaces_Interface_Dynamic_PhysicalStatus   `protobuf:"varint,2,opt,name=physical_status,json=physical-status,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Dynamic_PhysicalStatus" json:"physical_status,omitempty"`
	LinkStatus           Ifm_Interfaces_Interface_Dynamic_LinkStatus       `protobuf:"varint,3,opt,name=link_status,json=link-status,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Dynamic_LinkStatus" json:"link_status,omitempty"`
	Mtu                  uint32                                            `protobuf:"varint,4,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Bandwidth            uint64                                            `protobuf:"varint,5,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Ipv4Status           Ifm_Interfaces_Interface_Dynamic_Ipv4Status       `protobuf:"varint,6,opt,name=ipv4_status,json=ipv4-status,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Dynamic_Ipv4Status" json:"ipv4_status,omitempty"`
	Ipv6Status           Ifm_Interfaces_Interface_Dynamic_Ipv6Status       `protobuf:"varint,7,opt,name=ipv6_status,json=ipv6-status,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Dynamic_Ipv6Status" json:"ipv6_status,omitempty"`
	IsControlFlapDamp    bool                                              `protobuf:"varint,8,opt,name=is_control_flap_damp,json=is-control-flap-damp,proto3" json:"is_control_flap_damp,omitempty"`
	MacAddress           string                                            `protobuf:"bytes,9,opt,name=mac_address,json=mac-address,proto3" json:"mac_address,omitempty"`
	LineProtocolUpTime   string                                            `protobuf:"bytes,10,opt,name=line_protocol_up_time,json=line-protocol-up-time,proto3" json:"line_protocol_up_time,omitempty"`
	IsOffline            bool                                              `protobuf:"varint,11,opt,name=is_offline,json=is-offline,proto3" json:"is_offline,omitempty"`
	LinkQualityGrade     Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade `protobuf:"varint,12,opt,name=link_quality_grade,json=link-quality-grade,proto3,enum=huawei_ifm.Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade" json:"link_quality_grade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *Ifm_Interfaces_Interface_Dynamic) Reset()         { *m = Ifm_Interfaces_Interface_Dynamic{} }
func (m *Ifm_Interfaces_Interface_Dynamic) String() string { return proto.CompactTextString(m) }
func (*Ifm_Interfaces_Interface_Dynamic) ProtoMessage()    {}
func (*Ifm_Interfaces_Interface_Dynamic) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 0}
}

func (m *Ifm_Interfaces_Interface_Dynamic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm_Interfaces_Interface_Dynamic.Unmarshal(m, b)
}
func (m *Ifm_Interfaces_Interface_Dynamic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm_Interfaces_Interface_Dynamic.Marshal(b, m, deterministic)
}
func (m *Ifm_Interfaces_Interface_Dynamic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm_Interfaces_Interface_Dynamic.Merge(m, src)
}
func (m *Ifm_Interfaces_Interface_Dynamic) XXX_Size() int {
	return xxx_messageInfo_Ifm_Interfaces_Interface_Dynamic.Size(m)
}
func (m *Ifm_Interfaces_Interface_Dynamic) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm_Interfaces_Interface_Dynamic.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm_Interfaces_Interface_Dynamic proto.InternalMessageInfo

func (m *Ifm_Interfaces_Interface_Dynamic) GetOperStatus() Ifm_Interfaces_Interface_Dynamic_OperStatus {
	if m != nil {
		return m.OperStatus
	}
	return Ifm_Interfaces_Interface_Dynamic_OperStatus_DOWN
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetPhysicalStatus() Ifm_Interfaces_Interface_Dynamic_PhysicalStatus {
	if m != nil {
		return m.PhysicalStatus
	}
	return Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_DOWN
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetLinkStatus() Ifm_Interfaces_Interface_Dynamic_LinkStatus {
	if m != nil {
		return m.LinkStatus
	}
	return Ifm_Interfaces_Interface_Dynamic_LinkStatus_DOWN
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetBandwidth() uint64 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetIpv4Status() Ifm_Interfaces_Interface_Dynamic_Ipv4Status {
	if m != nil {
		return m.Ipv4Status
	}
	return Ifm_Interfaces_Interface_Dynamic_Ipv4Status_DOWN
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetIpv6Status() Ifm_Interfaces_Interface_Dynamic_Ipv6Status {
	if m != nil {
		return m.Ipv6Status
	}
	return Ifm_Interfaces_Interface_Dynamic_Ipv6Status_DOWN
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetIsControlFlapDamp() bool {
	if m != nil {
		return m.IsControlFlapDamp
	}
	return false
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetLineProtocolUpTime() string {
	if m != nil {
		return m.LineProtocolUpTime
	}
	return ""
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

func (m *Ifm_Interfaces_Interface_Dynamic) GetLinkQualityGrade() Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade {
	if m != nil {
		return m.LinkQualityGrade
	}
	return Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_GOOD
}

type Ifm_Interfaces_Interface_MibStatistics struct {
	ReceiveByte            uint64                                                `protobuf:"varint,1,opt,name=receive_byte,json=receive-byte,proto3" json:"receive_byte,omitempty"`
	SendByte               uint64                                                `protobuf:"varint,2,opt,name=send_byte,json=send-byte,proto3" json:"send_byte,omitempty"`
	ReceivePacket          uint64                                                `protobuf:"varint,3,opt,name=receive_packet,json=receive-packet,proto3" json:"receive_packet,omitempty"`
	SendPacket             uint64                                                `protobuf:"varint,4,opt,name=send_packet,json=send-packet,proto3" json:"send_packet,omitempty"`
	ReceiveUnicastPacket   uint64                                                `protobuf:"varint,5,opt,name=receive_unicast_packet,json=receive-unicast-packet,proto3" json:"receive_unicast_packet,omitempty"`
	ReceiveMulticastPacket uint64                                                `protobuf:"varint,6,opt,name=receive_multicast_packet,json=receive-multicast-packet,proto3" json:"receive_multicast_packet,omitempty"`
	ReceiveBroadPacket     uint64                                                `protobuf:"varint,7,opt,name=receive_broad_packet,json=receive-broad-packet,proto3" json:"receive_broad_packet,omitempty"`
	SendUnicastPacket      uint64                                                `protobuf:"varint,8,opt,name=send_unicast_packet,json=send-unicast-packet,proto3" json:"send_unicast_packet,omitempty"`
	SendMulticastPacket    uint64                                                `protobuf:"varint,9,opt,name=send_multicast_packet,json=send-multicast-packet,proto3" json:"send_multicast_packet,omitempty"`
	SendBroadPacket        uint64                                                `protobuf:"varint,10,opt,name=send_broad_packet,json=send-broad-packet,proto3" json:"send_broad_packet,omitempty"`
	ReceiveErrorPacket     uint64                                                `protobuf:"varint,11,opt,name=receive_error_packet,json=receive-error-packet,proto3" json:"receive_error_packet,omitempty"`
	ReceiveDropPacket      uint64                                                `protobuf:"varint,12,opt,name=receive_drop_packet,json=receive-drop-packet,proto3" json:"receive_drop_packet,omitempty"`
	SendErrorPacket        uint64                                                `protobuf:"varint,13,opt,name=send_error_packet,json=send-error-packet,proto3" json:"send_error_packet,omitempty"`
	SendDropPacket         uint64                                                `protobuf:"varint,14,opt,name=send_drop_packet,json=send-drop-packet,proto3" json:"send_drop_packet,omitempty"`
	EthPortErrSts          *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts `protobuf:"bytes,15,opt,name=eth_port_err_sts,json=eth-port-err-sts,proto3" json:"eth_port_err_sts,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                              `json:"-"`
	XXX_unrecognized       []byte                                                `json:"-"`
	XXX_sizecache          int32                                                 `json:"-"`
}

func (m *Ifm_Interfaces_Interface_MibStatistics) Reset() {
	*m = Ifm_Interfaces_Interface_MibStatistics{}
}
func (m *Ifm_Interfaces_Interface_MibStatistics) String() string { return proto.CompactTextString(m) }
func (*Ifm_Interfaces_Interface_MibStatistics) ProtoMessage()    {}
func (*Ifm_Interfaces_Interface_MibStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 1}
}

func (m *Ifm_Interfaces_Interface_MibStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics.Unmarshal(m, b)
}
func (m *Ifm_Interfaces_Interface_MibStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics.Marshal(b, m, deterministic)
}
func (m *Ifm_Interfaces_Interface_MibStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics.Merge(m, src)
}
func (m *Ifm_Interfaces_Interface_MibStatistics) XXX_Size() int {
	return xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics.Size(m)
}
func (m *Ifm_Interfaces_Interface_MibStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics proto.InternalMessageInfo

func (m *Ifm_Interfaces_Interface_MibStatistics) GetReceiveByte() uint64 {
	if m != nil {
		return m.ReceiveByte
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetSendByte() uint64 {
	if m != nil {
		return m.SendByte
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetReceivePacket() uint64 {
	if m != nil {
		return m.ReceivePacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetSendPacket() uint64 {
	if m != nil {
		return m.SendPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetReceiveUnicastPacket() uint64 {
	if m != nil {
		return m.ReceiveUnicastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetReceiveMulticastPacket() uint64 {
	if m != nil {
		return m.ReceiveMulticastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetReceiveBroadPacket() uint64 {
	if m != nil {
		return m.ReceiveBroadPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetSendUnicastPacket() uint64 {
	if m != nil {
		return m.SendUnicastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetSendMulticastPacket() uint64 {
	if m != nil {
		return m.SendMulticastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetSendBroadPacket() uint64 {
	if m != nil {
		return m.SendBroadPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetReceiveErrorPacket() uint64 {
	if m != nil {
		return m.ReceiveErrorPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetReceiveDropPacket() uint64 {
	if m != nil {
		return m.ReceiveDropPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetSendErrorPacket() uint64 {
	if m != nil {
		return m.SendErrorPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetSendDropPacket() uint64 {
	if m != nil {
		return m.SendDropPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics) GetEthPortErrSts() *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts {
	if m != nil {
		return m.EthPortErrSts
	}
	return nil
}

type Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts struct {
	RxPause              uint64   `protobuf:"varint,1,opt,name=rx_pause,json=rx-pause,proto3" json:"rx_pause,omitempty"`
	RxJumboOctets        uint64   `protobuf:"varint,2,opt,name=rx_jumbo_octets,json=rx-jumbo-octets,proto3" json:"rx_jumbo_octets,omitempty"`
	RxCrc                uint64   `protobuf:"varint,3,opt,name=rx_crc,json=rx-crc,proto3" json:"rx_crc,omitempty"`
	RxSymbol             uint64   `protobuf:"varint,4,opt,name=rx_symbol,json=rx-symbol,proto3" json:"rx_symbol,omitempty"`
	RxOverRun            uint64   `protobuf:"varint,5,opt,name=rx_over_run,json=rx-over-run,proto3" json:"rx_over_run,omitempty"`
	RxInrangeLen         uint64   `protobuf:"varint,6,opt,name=rx_inrange_len,json=rx-inrange-len,proto3" json:"rx_inrange_len,omitempty"`
	RxLong               uint64   `protobuf:"varint,7,opt,name=rx_long,json=rx-long,proto3" json:"rx_long,omitempty"`
	RxJabber             uint64   `protobuf:"varint,8,opt,name=rx_jabber,json=rx-jabber,proto3" json:"rx_jabber,omitempty"`
	RxAlignment          uint64   `protobuf:"varint,9,opt,name=rx_alignment,json=rx-alignment,proto3" json:"rx_alignment,omitempty"`
	RxFragment           uint64   `protobuf:"varint,10,opt,name=rx_fragment,json=rx-fragment,proto3" json:"rx_fragment,omitempty"`
	RxUndersize          uint64   `protobuf:"varint,11,opt,name=rx_undersize,json=rx-undersize,proto3" json:"rx_undersize,omitempty"`
	TxPause              uint64   `protobuf:"varint,12,opt,name=tx_pause,json=tx-pause,proto3" json:"tx_pause,omitempty"`
	TxJumboOctets        uint64   `protobuf:"varint,13,opt,name=tx_jumbo_octets,json=tx-jumbo-octets,proto3" json:"tx_jumbo_octets,omitempty"`
	TxOverRun            uint64   `protobuf:"varint,14,opt,name=tx_over_run,json=tx-over-run,proto3" json:"tx_over_run,omitempty"`
	TxUnderRun           uint64   `protobuf:"varint,15,opt,name=tx_under_run,json=tx-under-run,proto3" json:"tx_under_run,omitempty"`
	TxSystem             uint64   `protobuf:"varint,16,opt,name=tx_system,json=tx-system,proto3" json:"tx_system,omitempty"`
	TxLost               uint64   `protobuf:"varint,17,opt,name=tx_lost,json=tx-lost,proto3" json:"tx_lost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) Reset() {
	*m = Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts{}
}
func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) String() string {
	return proto.CompactTextString(m)
}
func (*Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) ProtoMessage() {}
func (*Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 1, 0}
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts.Unmarshal(m, b)
}
func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts.Marshal(b, m, deterministic)
}
func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts.Merge(m, src)
}
func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) XXX_Size() int {
	return xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts.Size(m)
}
func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts proto.InternalMessageInfo

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxPause() uint64 {
	if m != nil {
		return m.RxPause
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxJumboOctets() uint64 {
	if m != nil {
		return m.RxJumboOctets
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxCrc() uint64 {
	if m != nil {
		return m.RxCrc
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxSymbol() uint64 {
	if m != nil {
		return m.RxSymbol
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxOverRun() uint64 {
	if m != nil {
		return m.RxOverRun
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxInrangeLen() uint64 {
	if m != nil {
		return m.RxInrangeLen
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxLong() uint64 {
	if m != nil {
		return m.RxLong
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxJabber() uint64 {
	if m != nil {
		return m.RxJabber
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxAlignment() uint64 {
	if m != nil {
		return m.RxAlignment
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxFragment() uint64 {
	if m != nil {
		return m.RxFragment
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetRxUndersize() uint64 {
	if m != nil {
		return m.RxUndersize
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetTxPause() uint64 {
	if m != nil {
		return m.TxPause
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetTxJumboOctets() uint64 {
	if m != nil {
		return m.TxJumboOctets
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetTxOverRun() uint64 {
	if m != nil {
		return m.TxOverRun
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetTxUnderRun() uint64 {
	if m != nil {
		return m.TxUnderRun
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetTxSystem() uint64 {
	if m != nil {
		return m.TxSystem
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts) GetTxLost() uint64 {
	if m != nil {
		return m.TxLost
	}
	return 0
}

type Ifm_Interfaces_Interface_CommonStatistics struct {
	StatiInterval              uint32   `protobuf:"varint,1,opt,name=stati_interval,json=stati-interval,proto3" json:"stati_interval,omitempty"`
	InByteRate                 uint64   `protobuf:"varint,2,opt,name=in_byte_rate,json=in-byte-rate,proto3" json:"in_byte_rate,omitempty"`
	InBitRate                  uint64   `protobuf:"varint,3,opt,name=in_bit_rate,json=in-bit-rate,proto3" json:"in_bit_rate,omitempty"`
	InPacketRate               uint64   `protobuf:"varint,4,opt,name=in_packet_rate,json=in-packet-rate,proto3" json:"in_packet_rate,omitempty"`
	InUseRate                  string   `protobuf:"bytes,5,opt,name=in_use_rate,json=in-use-rate,proto3" json:"in_use_rate,omitempty"`
	OutByteRate                uint64   `protobuf:"varint,6,opt,name=out_byte_rate,json=out-byte-rate,proto3" json:"out_byte_rate,omitempty"`
	OutBitRate                 uint64   `protobuf:"varint,7,opt,name=out_bit_rate,json=out-bit-rate,proto3" json:"out_bit_rate,omitempty"`
	OutPacketRate              uint64   `protobuf:"varint,8,opt,name=out_packet_rate,json=out-packet-rate,proto3" json:"out_packet_rate,omitempty"`
	OutUseRate                 string   `protobuf:"bytes,9,opt,name=out_use_rate,json=out-use-rate,proto3" json:"out_use_rate,omitempty"`
	ReceiveByte                uint64   `protobuf:"varint,10,opt,name=receive_byte,json=receive-byte,proto3" json:"receive_byte,omitempty"`
	SendByte                   uint64   `protobuf:"varint,11,opt,name=send_byte,json=send-byte,proto3" json:"send_byte,omitempty"`
	ReceivePacket              uint64   `protobuf:"varint,12,opt,name=receive_packet,json=receive-packet,proto3" json:"receive_packet,omitempty"`
	SendPacket                 uint64   `protobuf:"varint,13,opt,name=send_packet,json=send-packet,proto3" json:"send_packet,omitempty"`
	ReceiveUnicastPacket       uint64   `protobuf:"varint,14,opt,name=receive_unicast_packet,json=receive-unicast-packet,proto3" json:"receive_unicast_packet,omitempty"`
	ReceiveMulticastPacket     uint64   `protobuf:"varint,15,opt,name=receive_multicast_packet,json=receive-multicast-packet,proto3" json:"receive_multicast_packet,omitempty"`
	ReceiveBroadPacket         uint64   `protobuf:"varint,16,opt,name=receive_broad_packet,json=receive-broad-packet,proto3" json:"receive_broad_packet,omitempty"`
	SendUnicastPacket          uint64   `protobuf:"varint,17,opt,name=send_unicast_packet,json=send-unicast-packet,proto3" json:"send_unicast_packet,omitempty"`
	SendMulticastPacket        uint64   `protobuf:"varint,18,opt,name=send_multicast_packet,json=send-multicast-packet,proto3" json:"send_multicast_packet,omitempty"`
	SendBroadPacket            uint64   `protobuf:"varint,19,opt,name=send_broad_packet,json=send-broad-packet,proto3" json:"send_broad_packet,omitempty"`
	ReceiveErrorPacket         uint64   `protobuf:"varint,20,opt,name=receive_error_packet,json=receive-error-packet,proto3" json:"receive_error_packet,omitempty"`
	ReceiveDropPacket          uint64   `protobuf:"varint,21,opt,name=receive_drop_packet,json=receive-drop-packet,proto3" json:"receive_drop_packet,omitempty"`
	SendErrorPacket            uint64   `protobuf:"varint,22,opt,name=send_error_packet,json=send-error-packet,proto3" json:"send_error_packet,omitempty"`
	SendDropPacket             uint64   `protobuf:"varint,23,opt,name=send_drop_packet,json=send-drop-packet,proto3" json:"send_drop_packet,omitempty"`
	SendUnicastBit             uint64   `protobuf:"varint,24,opt,name=send_unicast_bit,json=send-unicast-bit,proto3" json:"send_unicast_bit,omitempty"`
	ReceiveUnicastBit          uint64   `protobuf:"varint,25,opt,name=receive_unicast_bit,json=receive-unicast-bit,proto3" json:"receive_unicast_bit,omitempty"`
	SendMulticastBit           uint64   `protobuf:"varint,26,opt,name=send_multicast_bit,json=send-multicast-bit,proto3" json:"send_multicast_bit,omitempty"`
	ReceiveMulticastBit        uint64   `protobuf:"varint,27,opt,name=receive_multicast_bit,json=receive-multicast-bit,proto3" json:"receive_multicast_bit,omitempty"`
	SendBroadBit               uint64   `protobuf:"varint,28,opt,name=send_broad_bit,json=send-broad-bit,proto3" json:"send_broad_bit,omitempty"`
	ReceiveBroadBit            uint64   `protobuf:"varint,29,opt,name=receive_broad_bit,json=receive-broad-bit,proto3" json:"receive_broad_bit,omitempty"`
	SendUnicastBitRate         uint64   `protobuf:"varint,30,opt,name=send_unicast_bit_rate,json=send-unicast-bit-rate,proto3" json:"send_unicast_bit_rate,omitempty"`
	ReceiveUnicastBitRate      uint64   `protobuf:"varint,31,opt,name=receive_unicast_bit_rate,json=receive-unicast-bit-rate,proto3" json:"receive_unicast_bit_rate,omitempty"`
	SendMulticastBitRate       uint64   `protobuf:"varint,32,opt,name=send_multicast_bit_rate,json=send-multicast-bit-rate,proto3" json:"send_multicast_bit_rate,omitempty"`
	ReceiveMulticastBitRate    uint64   `protobuf:"varint,33,opt,name=receive_multicast_bit_rate,json=receive-multicast-bit-rate,proto3" json:"receive_multicast_bit_rate,omitempty"`
	SendBroadBitRate           uint64   `protobuf:"varint,34,opt,name=send_broad_bit_rate,json=send-broad-bit-rate,proto3" json:"send_broad_bit_rate,omitempty"`
	ReceiveBroadBitRate        uint64   `protobuf:"varint,35,opt,name=receive_broad_bit_rate,json=receive-broad-bit-rate,proto3" json:"receive_broad_bit_rate,omitempty"`
	SendUnicastPacketRate      uint64   `protobuf:"varint,36,opt,name=send_unicast_packet_rate,json=send-unicast-packet-rate,proto3" json:"send_unicast_packet_rate,omitempty"`
	ReceiveUnicastPacketRate   uint64   `protobuf:"varint,37,opt,name=receive_unicast_packet_rate,json=receive-unicast-packet-rate,proto3" json:"receive_unicast_packet_rate,omitempty"`
	SendMulticastPacketRate    uint64   `protobuf:"varint,38,opt,name=send_multicast_packet_rate,json=send-multicast-packet-rate,proto3" json:"send_multicast_packet_rate,omitempty"`
	ReceiveMulticastPacketRate uint64   `protobuf:"varint,39,opt,name=receive_multicast_packet_rate,json=receive-multicast-packet-rate,proto3" json:"receive_multicast_packet_rate,omitempty"`
	SendBroadcastPacketRate    uint64   `protobuf:"varint,40,opt,name=send_broadcast_packet_rate,json=send-broadcast-packet-rate,proto3" json:"send_broadcast_packet_rate,omitempty"`
	ReceiveBroadcastPacketRate uint64   `protobuf:"varint,41,opt,name=receive_broadcast_packet_rate,json=receive-broadcast-packet-rate,proto3" json:"receive_broadcast_packet_rate,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) Reset() {
	*m = Ifm_Interfaces_Interface_CommonStatistics{}
}
func (m *Ifm_Interfaces_Interface_CommonStatistics) String() string {
	return proto.CompactTextString(m)
}
func (*Ifm_Interfaces_Interface_CommonStatistics) ProtoMessage() {}
func (*Ifm_Interfaces_Interface_CommonStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1904318f50cad2, []int{0, 1, 0, 2}
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ifm_Interfaces_Interface_CommonStatistics.Unmarshal(m, b)
}
func (m *Ifm_Interfaces_Interface_CommonStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ifm_Interfaces_Interface_CommonStatistics.Marshal(b, m, deterministic)
}
func (m *Ifm_Interfaces_Interface_CommonStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ifm_Interfaces_Interface_CommonStatistics.Merge(m, src)
}
func (m *Ifm_Interfaces_Interface_CommonStatistics) XXX_Size() int {
	return xxx_messageInfo_Ifm_Interfaces_Interface_CommonStatistics.Size(m)
}
func (m *Ifm_Interfaces_Interface_CommonStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Ifm_Interfaces_Interface_CommonStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_Ifm_Interfaces_Interface_CommonStatistics proto.InternalMessageInfo

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetStatiInterval() uint32 {
	if m != nil {
		return m.StatiInterval
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetInByteRate() uint64 {
	if m != nil {
		return m.InByteRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetInBitRate() uint64 {
	if m != nil {
		return m.InBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetInPacketRate() uint64 {
	if m != nil {
		return m.InPacketRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetInUseRate() string {
	if m != nil {
		return m.InUseRate
	}
	return ""
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetOutByteRate() uint64 {
	if m != nil {
		return m.OutByteRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetOutBitRate() uint64 {
	if m != nil {
		return m.OutBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetOutPacketRate() uint64 {
	if m != nil {
		return m.OutPacketRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetOutUseRate() string {
	if m != nil {
		return m.OutUseRate
	}
	return ""
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveByte() uint64 {
	if m != nil {
		return m.ReceiveByte
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendByte() uint64 {
	if m != nil {
		return m.SendByte
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceivePacket() uint64 {
	if m != nil {
		return m.ReceivePacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendPacket() uint64 {
	if m != nil {
		return m.SendPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveUnicastPacket() uint64 {
	if m != nil {
		return m.ReceiveUnicastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveMulticastPacket() uint64 {
	if m != nil {
		return m.ReceiveMulticastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveBroadPacket() uint64 {
	if m != nil {
		return m.ReceiveBroadPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendUnicastPacket() uint64 {
	if m != nil {
		return m.SendUnicastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendMulticastPacket() uint64 {
	if m != nil {
		return m.SendMulticastPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendBroadPacket() uint64 {
	if m != nil {
		return m.SendBroadPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveErrorPacket() uint64 {
	if m != nil {
		return m.ReceiveErrorPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveDropPacket() uint64 {
	if m != nil {
		return m.ReceiveDropPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendErrorPacket() uint64 {
	if m != nil {
		return m.SendErrorPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendDropPacket() uint64 {
	if m != nil {
		return m.SendDropPacket
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendUnicastBit() uint64 {
	if m != nil {
		return m.SendUnicastBit
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveUnicastBit() uint64 {
	if m != nil {
		return m.ReceiveUnicastBit
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendMulticastBit() uint64 {
	if m != nil {
		return m.SendMulticastBit
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveMulticastBit() uint64 {
	if m != nil {
		return m.ReceiveMulticastBit
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendBroadBit() uint64 {
	if m != nil {
		return m.SendBroadBit
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveBroadBit() uint64 {
	if m != nil {
		return m.ReceiveBroadBit
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendUnicastBitRate() uint64 {
	if m != nil {
		return m.SendUnicastBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveUnicastBitRate() uint64 {
	if m != nil {
		return m.ReceiveUnicastBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendMulticastBitRate() uint64 {
	if m != nil {
		return m.SendMulticastBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveMulticastBitRate() uint64 {
	if m != nil {
		return m.ReceiveMulticastBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendBroadBitRate() uint64 {
	if m != nil {
		return m.SendBroadBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveBroadBitRate() uint64 {
	if m != nil {
		return m.ReceiveBroadBitRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendUnicastPacketRate() uint64 {
	if m != nil {
		return m.SendUnicastPacketRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveUnicastPacketRate() uint64 {
	if m != nil {
		return m.ReceiveUnicastPacketRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendMulticastPacketRate() uint64 {
	if m != nil {
		return m.SendMulticastPacketRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveMulticastPacketRate() uint64 {
	if m != nil {
		return m.ReceiveMulticastPacketRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetSendBroadcastPacketRate() uint64 {
	if m != nil {
		return m.SendBroadcastPacketRate
	}
	return 0
}

func (m *Ifm_Interfaces_Interface_CommonStatistics) GetReceiveBroadcastPacketRate() uint64 {
	if m != nil {
		return m.ReceiveBroadcastPacketRate
	}
	return 0
}

func init() {
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Class", Ifm_Interfaces_Interface_Class_name, Ifm_Interfaces_Interface_Class_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Type", Ifm_Interfaces_Interface_Type_name, Ifm_Interfaces_Interface_Type_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_AdminStatus", Ifm_Interfaces_Interface_AdminStatus_name, Ifm_Interfaces_Interface_AdminStatus_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_LinkProtocol", Ifm_Interfaces_Interface_LinkProtocol_name, Ifm_Interfaces_Interface_LinkProtocol_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_RouterType", Ifm_Interfaces_Interface_RouterType_name, Ifm_Interfaces_Interface_RouterType_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_StatisticMode", Ifm_Interfaces_Interface_StatisticMode_name, Ifm_Interfaces_Interface_StatisticMode_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Dynamic_OperStatus", Ifm_Interfaces_Interface_Dynamic_OperStatus_name, Ifm_Interfaces_Interface_Dynamic_OperStatus_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Dynamic_PhysicalStatus", Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_name, Ifm_Interfaces_Interface_Dynamic_PhysicalStatus_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Dynamic_LinkStatus", Ifm_Interfaces_Interface_Dynamic_LinkStatus_name, Ifm_Interfaces_Interface_Dynamic_LinkStatus_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Dynamic_Ipv4Status", Ifm_Interfaces_Interface_Dynamic_Ipv4Status_name, Ifm_Interfaces_Interface_Dynamic_Ipv4Status_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Dynamic_Ipv6Status", Ifm_Interfaces_Interface_Dynamic_Ipv6Status_name, Ifm_Interfaces_Interface_Dynamic_Ipv6Status_value)
	proto.RegisterEnum("huawei_ifm.Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade", Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_name, Ifm_Interfaces_Interface_Dynamic_LinkQualityGrade_value)
	proto.RegisterType((*Ifm)(nil), "huawei_ifm.Ifm")
	proto.RegisterType((*Ifm_Global)(nil), "huawei_ifm.Ifm.Global")
	proto.RegisterType((*Ifm_Interfaces)(nil), "huawei_ifm.Ifm.Interfaces")
	proto.RegisterType((*Ifm_Interfaces_Interface)(nil), "huawei_ifm.Ifm.Interfaces.Interface")
	proto.RegisterType((*Ifm_Interfaces_Interface_Dynamic)(nil), "huawei_ifm.Ifm.Interfaces.Interface.Dynamic")
	proto.RegisterType((*Ifm_Interfaces_Interface_MibStatistics)(nil), "huawei_ifm.Ifm.Interfaces.Interface.MibStatistics")
	proto.RegisterType((*Ifm_Interfaces_Interface_MibStatistics_EthPortErrSts)(nil), "huawei_ifm.Ifm.Interfaces.Interface.MibStatistics.EthPortErrSts")
	proto.RegisterType((*Ifm_Interfaces_Interface_CommonStatistics)(nil), "huawei_ifm.Ifm.Interfaces.Interface.CommonStatistics")
}

func init() {
	proto.RegisterFile("proto/sensors/huawei-ifm/huawei-ifm.proto", fileDescriptor_ae1904318f50cad2)
}

var fileDescriptor_ae1904318f50cad2 = []byte{
	// 2968 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x59, 0xdd, 0x76, 0xdb, 0x46,
	0x92, 0xb6, 0x6c, 0x59, 0x3f, 0x45, 0x89, 0x6a, 0xb5, 0xf5, 0x43, 0xd3, 0x8e, 0xa3, 0x28, 0x8e,
	0x23, 0x67, 0x0d, 0xc5, 0xa6, 0x65, 0x27, 0xeb, 0x6c, 0xb2, 0xe6, 0x0f, 0x24, 0x63, 0xcd, 0xbf,
	0x40, 0x94, 0x4c, 0x67, 0xf7, 0x6c, 0x2f, 0x48, 0x42, 0x32, 0x62, 0x12, 0xe0, 0x02, 0xa0, 0x4c,
	0xed, 0x4d, 0x9e, 0x60, 0xaf, 0xe7, 0x7e, 0x5e, 0x63, 0xee, 0xe6, 0x9c, 0x79, 0x8c, 0xb9, 0x9d,
	0x37, 0x98, 0xeb, 0x99, 0xd3, 0xd5, 0xe8, 0x06, 0x40, 0xca, 0x27, 0x92, 0xaf, 0xc4, 0xae, 0xaa,
	0xef, 0xeb, 0xaa, 0xea, 0xaa, 0x6a, 0x00, 0x82, 0x87, 0x43, 0xdf, 0x0b, 0xbd, 0x6f, 0x03, 0xdb,
	0x0d, 0x3c, 0x3f, 0xf8, 0xf6, 0xdd, 0xc8, 0xfa, 0x60, 0x3b, 0x9a, 0x73, 0x32, 0x48, 0xfc, 0xdc,
	0x45, 0x1b, 0x0a, 0x42, 0xc2, 0x9c, 0x93, 0xc1, 0xf6, 0x5f, 0x5f, 0xc2, 0x0d, 0xe3, 0x64, 0x40,
	0x77, 0x61, 0xee, 0xb4, 0xef, 0x75, 0xac, 0x7e, 0x6e, 0x66, 0x6b, 0x66, 0x27, 0x53, 0xd8, 0xd8,
	0x8d, 0x8d, 0x76, 0x8d, 0x93, 0xc1, 0xee, 0x01, 0x6a, 0xcd, 0xc8, 0x8a, 0xbe, 0x00, 0x70, 0xdc,
	0xd0, 0xf6, 0x4f, 0xac, 0xae, 0x1d, 0xe4, 0xae, 0x23, 0x26, 0x3f, 0x89, 0x31, 0x94, 0x85, 0x99,
	0xb0, 0xce, 0xfb, 0x30, 0x27, 0xd8, 0xe8, 0x2e, 0xd0, 0x20, 0xb4, 0x42, 0x27, 0x08, 0x9d, 0x2e,
	0x43, 0x8b, 0xb3, 0xc8, 0x83, 0x65, 0x33, 0xd6, 0x68, 0x52, 0x43, 0xbf, 0x87, 0x4d, 0x67, 0x78,
	0xb6, 0xc7, 0x9c, 0x53, 0xd7, 0xf3, 0x6d, 0x36, 0xf4, 0x9d, 0x81, 0xe5, 0x9f, 0xb3, 0x60, 0xd4,
	0x41, 0x17, 0x16, 0x4c, 0x54, 0x6b, 0x42, 0xad, 0x45, 0x6a, 0x2d, 0x18, 0x75, 0xf2, 0x7f, 0xff,
	0x09, 0x20, 0x76, 0x87, 0x96, 0x60, 0x51, 0x39, 0x94, 0x9b, 0xd9, 0xba, 0xb1, 0x93, 0x29, 0xdc,
	0xff, 0xb8, 0xf7, 0xf1, 0x4f, 0x33, 0x86, 0xe5, 0xff, 0xf8, 0x13, 0x2c, 0x2a, 0x05, 0xa5, 0x30,
	0xeb, 0x5a, 0x03, 0x1b, 0x9d, 0x5f, 0x34, 0xf1, 0x37, 0x5d, 0x83, 0x9b, 0x8e, 0xdb, 0xb3, 0xc7,
	0xe8, 0xdc, 0xb2, 0x29, 0x16, 0xf4, 0x25, 0xdc, 0xec, 0xf6, 0xad, 0x20, 0xc8, 0xdd, 0xd8, 0x9a,
	0xd9, 0xc9, 0x16, 0xbe, 0xb9, 0xcc, 0xbe, 0xbb, 0x65, 0x8e, 0x30, 0x05, 0x90, 0xfe, 0x08, 0xb3,
	0xe1, 0xf9, 0xd0, 0xce, 0xcd, 0x22, 0xc1, 0xc3, 0x4b, 0x11, 0xb4, 0xce, 0x87, 0xb6, 0x89, 0x30,
	0x9a, 0x87, 0x85, 0xa1, 0x17, 0x38, 0xa1, 0xe3, 0xb9, 0xb9, 0x9b, 0xe8, 0xae, 0x5a, 0xd3, 0x2d,
	0xc8, 0x0c, 0x2d, 0xdf, 0x76, 0x43, 0x86, 0xd1, 0xcc, 0xa1, 0x3a, 0x12, 0x69, 0x18, 0xd4, 0x06,
	0xcc, 0xb9, 0xa3, 0x41, 0xc7, 0xf6, 0x73, 0xf3, 0xa8, 0x8c, 0x56, 0x1c, 0xd9, 0xb3, 0x83, 0xae,
	0xef, 0x0c, 0x91, 0x78, 0x41, 0x20, 0x13, 0x22, 0xfa, 0x0d, 0x10, 0xeb, 0xf4, 0xd4, 0xb7, 0x4f,
	0x2d, 0xbe, 0x14, 0x1b, 0x2c, 0xa2, 0x59, 0x52, 0x2e, 0x76, 0xd9, 0x86, 0x25, 0x27, 0x60, 0xfd,
	0x02, 0x0b, 0x3e, 0x38, 0x61, 0xf7, 0x5d, 0x0e, 0xf0, 0x78, 0x97, 0x9c, 0x40, 0xeb, 0x17, 0x34,
	0x21, 0xa3, 0x2d, 0x58, 0xb2, 0x7a, 0x03, 0xc7, 0x65, 0xbc, 0x52, 0x46, 0x41, 0x2e, 0x83, 0xe9,
	0x78, 0x7c, 0xa9, 0x74, 0x14, 0x39, 0xf0, 0x10, 0x71, 0xa6, 0x60, 0xd1, 0x04, 0x0b, 0x7d, 0x03,
	0xcb, 0x7d, 0xc7, 0x7d, 0xcf, 0xb0, 0x57, 0xba, 0x5e, 0x3f, 0xb7, 0x84, 0xb4, 0x4f, 0x2e, 0x45,
	0x5b, 0x75, 0xdc, 0xf7, 0xcd, 0x08, 0x68, 0x22, 0x8f, 0x26, 0x79, 0xe8, 0xcf, 0x90, 0xf1, 0xbd,
	0x51, 0x68, 0xfb, 0x0c, 0x0f, 0x6f, 0x19, 0x69, 0xbf, 0xbd, 0x14, 0xad, 0x89, 0x38, 0x3c, 0xc2,
	0x88, 0x43, 0xc3, 0x93, 0xdc, 0x82, 0x4c, 0xb7, 0x6f, 0x5b, 0x3e, 0x73, 0x86, 0xac, 0x77, 0x92,
	0xcb, 0x62, 0x92, 0x84, 0x48, 0x73, 0x86, 0x5a, 0xef, 0x84, 0xbe, 0x80, 0x1c, 0x46, 0x33, 0x1a,
	0xb2, 0x9e, 0xf7, 0xc1, 0x65, 0xa1, 0x6f, 0x0d, 0x99, 0xed, 0x5a, 0x9d, 0xbe, 0x9d, 0x5b, 0x41,
	0x73, 0xd4, 0x6b, 0xa3, 0xa1, 0xc6, 0xf5, 0x1a, 0xd7, 0x6b, 0x42, 0xcf, 0xcf, 0x2b, 0xee, 0xce,
	0x08, 0x43, 0x10, 0x13, 0xcb, 0xa5, 0xed, 0x2f, 0x90, 0x8d, 0x6d, 0x07, 0x5e, 0xcf, 0xce, 0xad,
	0x62, 0x7c, 0x85, 0x4b, 0xc5, 0x77, 0x28, 0xa1, 0x35, 0xaf, 0x67, 0x9b, 0x31, 0x93, 0xc6, 0x99,
	0xe8, 0x5d, 0x58, 0xec, 0x58, 0x6e, 0xef, 0x83, 0xd3, 0x0b, 0xdf, 0xe5, 0x28, 0xb6, 0x52, 0x2c,
	0xa0, 0x04, 0x6e, 0x0c, 0xc2, 0x51, 0xee, 0x16, 0xca, 0xf9, 0x4f, 0xba, 0x03, 0x2b, 0xc1, 0xd0,
	0xb7, 0xad, 0x1e, 0x1b, 0x84, 0x23, 0x76, 0xd2, 0xb7, 0x4e, 0x73, 0x6b, 0xe8, 0x76, 0x24, 0xd6,
	0x06, 0xe1, 0x48, 0xe3, 0xe2, 0x8f, 0xcc, 0x9f, 0xf5, 0x8f, 0xce, 0x9f, 0x3c, 0x2c, 0x9c, 0xf9,
	0x27, 0xa2, 0x72, 0x37, 0x44, 0xe7, 0x9c, 0xf9, 0x27, 0xa2, 0x62, 0x1f, 0x40, 0xb6, 0x5f, 0xc0,
	0xd0, 0x65, 0xae, 0x36, 0x71, 0xd3, 0x6c, 0xbf, 0x80, 0x61, 0xc8, 0x4c, 0xed, 0xc0, 0x0a, 0x9e,
	0x44, 0xcf, 0xee, 0x5b, 0xe7, 0x2c, 0x74, 0x06, 0x76, 0x2e, 0x87, 0x1b, 0xa2, 0x58, 0x43, 0xb1,
	0xc6, 0xc5, 0xfc, 0x74, 0x07, 0x56, 0x97, 0x59, 0xbd, 0x9e, 0x6f, 0x07, 0x41, 0xee, 0xb6, 0xe8,
	0xa8, 0x81, 0xd5, 0xd5, 0x22, 0x11, 0xdd, 0x87, 0xf9, 0xde, 0xb9, 0x6b, 0x0d, 0x9c, 0x6e, 0x2e,
	0x8f, 0x23, 0xf8, 0xd1, 0xa5, 0xd2, 0x5d, 0x11, 0x18, 0x53, 0x82, 0xf9, 0xe9, 0x0d, 0x9c, 0x0e,
	0x53, 0x11, 0x07, 0xb9, 0x3b, 0x48, 0x77, 0xb9, 0xd3, 0xab, 0x39, 0x1d, 0x75, 0x80, 0x81, 0xc9,
	0x99, 0xb4, 0x98, 0x89, 0x76, 0x61, 0xb5, 0xeb, 0x0d, 0x06, 0x9e, 0x9b, 0xa4, 0xbf, 0x8b, 0xf4,
	0xcf, 0x2e, 0x37, 0xfa, 0x10, 0x9d, 0xd8, 0x21, 0xe2, 0x4b, 0x6c, 0x92, 0xff, 0xf3, 0x22, 0xcc,
	0x47, 0x51, 0xd1, 0xb7, 0x90, 0xf1, 0x86, 0xb6, 0x2f, 0xa7, 0xc2, 0x0c, 0xd6, 0xe1, 0x77, 0x57,
	0x49, 0xcc, 0x6e, 0x63, 0x68, 0xfb, 0xd1, 0x70, 0x40, 0x2e, 0x39, 0x1b, 0x6c, 0x58, 0x19, 0xbe,
	0x3b, 0x0f, 0x9c, 0xae, 0xd5, 0x97, 0xf4, 0xd7, 0x91, 0xfe, 0x87, 0x2b, 0xd1, 0x37, 0x23, 0x8e,
	0x68, 0x0b, 0xc5, 0x29, 0xb7, 0x79, 0x0b, 0x19, 0x6c, 0xda, 0x68, 0x8b, 0x1b, 0x9f, 0x10, 0x01,
	0x1f, 0x44, 0x32, 0x02, 0x6c, 0xf0, 0x88, 0x3a, 0xea, 0x96, 0xd9, 0xb8, 0x5b, 0x52, 0xdd, 0xc5,
	0xaf, 0x83, 0xd9, 0x64, 0x77, 0xbd, 0x85, 0x0c, 0xde, 0xb8, 0x91, 0x2b, 0x73, 0x9f, 0xe0, 0x8a,
	0x31, 0x3c, 0xdb, 0x93, 0xae, 0xe0, 0xf5, 0x1c, 0x47, 0xe9, 0x0c, 0xcf, 0x9e, 0x4b, 0xea, 0xf9,
	0x4f, 0xa3, 0x7e, 0x9e, 0xa0, 0x7e, 0x2e, 0xa9, 0x0b, 0xb0, 0xe6, 0x04, 0xac, 0xeb, 0xb9, 0xa1,
	0xef, 0xf5, 0xf9, 0x04, 0x18, 0xb2, 0x9e, 0x35, 0x18, 0xe2, 0xa5, 0xb4, 0x60, 0xae, 0x39, 0x81,
	0x16, 0xe9, 0xf8, 0x18, 0x18, 0x6a, 0x5c, 0x37, 0xd9, 0x6d, 0x8b, 0xd3, 0xdd, 0xb6, 0x07, 0xeb,
	0x7d, 0xc7, 0xb5, 0xd5, 0xcd, 0xc0, 0x87, 0x2a, 0xf6, 0x2f, 0xa0, 0x2d, 0x2a, 0xd5, 0xb8, 0xe7,
	0x13, 0x15, 0xbb, 0xf8, 0x1e, 0x80, 0x13, 0x30, 0xef, 0xe4, 0x84, 0xab, 0xf1, 0x8e, 0x5a, 0x30,
	0xc1, 0x09, 0xb4, 0x48, 0x42, 0x07, 0x40, 0xf1, 0xb0, 0xff, 0x77, 0x64, 0xf5, 0x9d, 0xf0, 0x9c,
	0x9d, 0xfa, 0x56, 0xcf, 0x8e, 0x2e, 0x9d, 0x1f, 0xaf, 0x7c, 0xe6, 0x3f, 0x0b, 0x96, 0x03, 0x4e,
	0x62, 0x22, 0xb1, 0x16, 0x11, 0x6b, 0x48, 0xbc, 0xbd, 0x07, 0x10, 0x57, 0x37, 0xbd, 0x05, 0x2b,
	0xf1, 0x8a, 0x55, 0x1a, 0x6f, 0xea, 0xe4, 0x1a, 0x5d, 0x85, 0xe5, 0x84, 0xf0, 0xa8, 0x49, 0x66,
	0xb6, 0x5f, 0x42, 0x36, 0x5d, 0xb4, 0x74, 0x13, 0x6e, 0xa5, 0x25, 0x12, 0xbd, 0x0e, 0xab, 0x13,
	0x0a, 0x64, 0xd8, 0x03, 0x88, 0x6b, 0x92, 0xef, 0x1b, 0xaf, 0x12, 0xfb, 0x26, 0x84, 0x12, 0x15,
	0x97, 0x0f, 0x47, 0xc5, 0xab, 0x04, 0x2a, 0x21, 0x4c, 0xa0, 0x9e, 0xa7, 0x50, 0xcf, 0x2f, 0x42,
	0x3d, 0x4f, 0xa2, 0x7e, 0x03, 0x32, 0x99, 0x41, 0x7a, 0x1b, 0xd6, 0x27, 0x65, 0xec, 0xa0, 0xd1,
	0xa8, 0x90, 0x6b, 0x17, 0xaa, 0x5e, 0x19, 0x07, 0xaf, 0xc8, 0x0c, 0xbd, 0x03, 0x9b, 0x53, 0xaa,
	0x9a, 0x51, 0xa9, 0x54, 0x75, 0x72, 0x9d, 0xe6, 0x60, 0x6d, 0x4a, 0x59, 0x6d, 0xbc, 0x21, 0xb3,
	0xf9, 0xbf, 0x00, 0x2c, 0xa7, 0x66, 0x29, 0x7f, 0x0a, 0xf2, 0xed, 0xae, 0xed, 0x9c, 0xd9, 0xac,
	0x73, 0x1e, 0x8a, 0x87, 0xcb, 0x59, 0x53, 0xca, 0x34, 0x2e, 0xe3, 0xfd, 0x1b, 0xd8, 0x6e, 0x4f,
	0x18, 0x5c, 0x17, 0xfd, 0xcb, 0x05, 0x42, 0xfb, 0x00, 0xb2, 0x92, 0x61, 0x68, 0x75, 0xdf, 0xdb,
	0x21, 0x4e, 0x93, 0x59, 0x53, 0x4a, 0x35, 0x21, 0xe5, 0xd5, 0x8f, 0x2c, 0x91, 0xd1, 0x2c, 0x1a,
	0xa1, 0x48, 0x5a, 0x3c, 0x87, 0x0d, 0xc9, 0x34, 0x72, 0x9d, 0xae, 0x15, 0x84, 0xd2, 0x58, 0x0c,
	0x0d, 0xa9, 0xd5, 0x22, 0xad, 0xc4, 0xbd, 0x80, 0x9c, 0xc4, 0x0d, 0x46, 0xfd, 0x30, 0x85, 0x9c,
	0x43, 0xa4, 0xd4, 0x6b, 0x4a, 0x2f, 0xb1, 0x05, 0x58, 0x53, 0xf1, 0xfb, 0x9e, 0xa5, 0xdc, 0x9b,
	0x47, 0xdc, 0x9a, 0xca, 0x03, 0xd7, 0x49, 0xcc, 0x63, 0xb8, 0x85, 0x91, 0x4c, 0x38, 0xb9, 0x80,
	0x10, 0x54, 0x4d, 0x7a, 0xb8, 0x07, 0xeb, 0x88, 0x98, 0x72, 0x6f, 0x11, 0x31, 0xa8, 0x9c, 0xf6,
	0xed, 0x11, 0xac, 0x8a, 0xbc, 0x27, 0x1d, 0x03, 0x44, 0xac, 0x8a, 0xfc, 0x27, 0xbd, 0x4a, 0x44,
	0x62, 0xfb, 0xbe, 0xe7, 0x4b, 0x40, 0x26, 0x1d, 0x09, 0xea, 0x12, 0x91, 0x48, 0x4c, 0xcf, 0xf7,
	0x86, 0x12, 0xb2, 0x24, 0x22, 0x91, 0x10, 0xae, 0x9a, 0xf4, 0x29, 0xb5, 0xc5, 0x72, 0xc2, 0xa7,
	0x14, 0x3f, 0x7f, 0xbe, 0xe3, 0xd6, 0x49, 0xf2, 0x2c, 0x1a, 0xa3, 0x3c, 0xc5, 0xdc, 0x07, 0x62,
	0x87, 0xef, 0xd8, 0xd0, 0xf3, 0x43, 0xce, 0xce, 0x82, 0x30, 0xc0, 0xe7, 0xc7, 0x4c, 0xe1, 0xe5,
	0xd5, 0x9f, 0x11, 0x76, 0xf5, 0xf0, 0x5d, 0xd3, 0xf3, 0x43, 0xdd, 0xf7, 0x0f, 0xc3, 0xc0, 0xe4,
	0xcc, 0x1a, 0x67, 0xe6, 0xee, 0x69, 0x41, 0x18, 0xe4, 0xff, 0x34, 0x0b, 0xcb, 0x29, 0x1b, 0xfe,
	0xe4, 0xe5, 0x8f, 0xd9, 0xd0, 0x1a, 0x05, 0xb2, 0x0b, 0x16, 0xfc, 0xb1, 0x86, 0x6b, 0xfe, 0x44,
	0xe5, 0x8f, 0xd9, 0xaf, 0xa3, 0x41, 0xc7, 0x63, 0x5e, 0x37, 0xb4, 0xc3, 0x20, 0xea, 0x83, 0x15,
	0x7f, 0xac, 0xa1, 0x58, 0x13, 0x62, 0xfe, 0xee, 0xe2, 0x8f, 0x59, 0xd7, 0xef, 0x46, 0x5d, 0x30,
	0xe7, 0x8f, 0xb5, 0xae, 0xdf, 0xe5, 0x3d, 0xe4, 0x8f, 0x59, 0x70, 0x3e, 0xe8, 0x78, 0xfd, 0xa8,
	0xf6, 0x17, 0xfd, 0xb1, 0x26, 0x04, 0xbc, 0x37, 0xfc, 0x31, 0xf3, 0xce, 0x6c, 0x9f, 0xf9, 0x23,
	0x37, 0x2a, 0xf7, 0x8c, 0x3f, 0xd6, 0xb8, 0x48, 0xf3, 0x47, 0x2e, 0x76, 0xd9, 0x98, 0x39, 0xae,
	0x6f, 0xb9, 0xa7, 0x36, 0xeb, 0xdb, 0x6e, 0x54, 0xd9, 0x59, 0x7f, 0xac, 0x45, 0x52, 0xad, 0x6f,
	0xbb, 0x34, 0x07, 0xf3, 0xfe, 0x98, 0xf5, 0x3d, 0xf7, 0x34, 0x2a, 0xe1, 0x79, 0x7f, 0xac, 0xf1,
	0x65, 0xe4, 0xc1, 0xaf, 0x56, 0x87, 0xbf, 0x58, 0x2d, 0x28, 0x0f, 0x84, 0x00, 0xe7, 0xc0, 0x98,
	0x59, 0x7d, 0xe7, 0xd4, 0x1d, 0xd8, 0xae, 0x2c, 0xcc, 0x25, 0x7f, 0xac, 0x29, 0x59, 0xe4, 0xe5,
	0x89, 0x6f, 0x9d, 0xa2, 0x09, 0x28, 0x2f, 0xa5, 0x28, 0x62, 0x19, 0xb9, 0x3d, 0xdb, 0x0f, 0x9c,
	0xff, 0xb3, 0xa3, 0xda, 0xe3, 0x2c, 0x4a, 0xc6, 0xf3, 0x1c, 0xca, 0x3c, 0x8b, 0x42, 0x5b, 0x08,
	0x13, 0x79, 0x0e, 0x27, 0xf2, 0x2c, 0x6a, 0x6b, 0x25, 0x9c, 0xc8, 0xf3, 0x16, 0x64, 0xc2, 0x44,
	0xc6, 0x44, 0x51, 0x65, 0xc2, 0x44, 0xc6, 0xb6, 0x61, 0x29, 0x8c, 0x7c, 0x41, 0x93, 0x15, 0xe1,
	0x4b, 0x18, 0xf9, 0x82, 0x36, 0x77, 0x61, 0x31, 0xe4, 0xa7, 0x12, 0x84, 0xf6, 0x00, 0x5f, 0x3c,
	0x66, 0xcd, 0xc5, 0x90, 0x9f, 0x0a, 0x17, 0xf0, 0x5c, 0x86, 0x3c, 0x97, 0x41, 0x88, 0xaf, 0x1a,
	0xb3, 0xe6, 0x7c, 0xc8, 0x73, 0x19, 0x84, 0xf9, 0xbf, 0xad, 0x00, 0x99, 0x7c, 0x68, 0xe4, 0x47,
	0x84, 0xcf, 0x8b, 0x93, 0x9f, 0x19, 0x84, 0x34, 0x7e, 0xc4, 0xe7, 0x2f, 0x9e, 0x2e, 0x0e, 0x53,
	0xe6, 0x5b, 0x6a, 0xa2, 0x2e, 0x39, 0x2e, 0xce, 0x53, 0x8d, 0xcb, 0x78, 0x78, 0xdc, 0xc6, 0x09,
	0x85, 0x89, 0xa8, 0xa5, 0x0c, 0x37, 0x71, 0x42, 0x61, 0xf1, 0x00, 0xb2, 0x8e, 0x1b, 0xf5, 0x94,
	0x30, 0x12, 0x55, 0x95, 0x75, 0xdc, 0xa8, 0xa3, 0x92, 0x4c, 0xa3, 0x20, 0xda, 0x4c, 0xbc, 0x8d,
	0x73, 0xa6, 0x51, 0x10, 0xed, 0x75, 0x1f, 0x96, 0xbd, 0x51, 0x98, 0x70, 0x48, 0x54, 0x16, 0x17,
	0x26, 0x3c, 0xda, 0x86, 0x25, 0xb4, 0x92, 0x2e, 0x89, 0xea, 0x5a, 0x42, 0x23, 0xe9, 0xd3, 0x0e,
	0xac, 0x70, 0x9b, 0xa4, 0x53, 0xa2, 0xd0, 0xb8, 0x38, 0xe5, 0x55, 0xc4, 0xa6, 0xdc, 0x12, 0xcf,
	0x42, 0xc8, 0xa6, 0xfc, 0x9a, 0xbc, 0x9a, 0xe0, 0xf7, 0xae, 0xa6, 0xcc, 0xef, 0x5f, 0x4d, 0x4b,
	0x97, 0xb9, 0x9a, 0x96, 0xaf, 0x72, 0x35, 0x65, 0x3f, 0xf9, 0x6a, 0x5a, 0xf9, 0xc4, 0xab, 0x89,
	0x5c, 0xfd, 0x6a, 0x5a, 0xfd, 0x84, 0xab, 0x89, 0x5e, 0xf9, 0x6a, 0xba, 0x75, 0xd5, 0xab, 0x69,
	0xed, 0xea, 0x57, 0xd3, 0xfa, 0x15, 0xaf, 0xa6, 0x8d, 0xab, 0x5c, 0x4d, 0x9b, 0x1f, 0xb9, 0x9a,
	0xa4, 0xad, 0xcc, 0x6a, 0xc7, 0x09, 0xf1, 0x8d, 0x5a, 0xda, 0xca, 0x94, 0x76, 0x9c, 0x94, 0xdf,
	0x49, 0xf3, 0xdb, 0x69, 0xbf, 0x93, 0x88, 0x5d, 0xa0, 0x13, 0x27, 0xc0, 0x01, 0x79, 0x04, 0xd0,
	0x89, 0xf4, 0x73, 0xfb, 0x3d, 0x58, 0x9f, 0xae, 0x29, 0x0e, 0xb9, 0x23, 0x4e, 0x6c, 0xba, 0xa0,
	0x38, 0x8a, 0x4f, 0xa7, 0xf8, 0xc4, 0xb8, 0xf9, 0x5d, 0xd1, 0x0b, 0x89, 0xe3, 0xe2, 0x76, 0x8f,
	0x60, 0x35, 0x5d, 0x75, 0xdc, 0xf4, 0x33, 0x91, 0xc5, 0x74, 0xc9, 0x45, 0xbe, 0x4c, 0x66, 0x46,
	0x34, 0xf4, 0xbd, 0x44, 0xf5, 0x24, 0x82, 0x15, 0x9d, 0x9d, 0xe8, 0x8a, 0x29, 0xe0, 0xe7, 0xe9,
	0xae, 0x98, 0xc2, 0x7e, 0x0f, 0x9b, 0xd3, 0xd9, 0x12, 0xd0, 0x2d, 0x84, 0x6e, 0x4e, 0xa7, 0x4c,
	0x20, 0x7f, 0x82, 0xfc, 0x85, 0x79, 0x13, 0xe0, 0x2f, 0x10, 0x9c, 0xbf, 0x30, 0x79, 0x02, 0x2f,
	0x7b, 0x4b, 0xa5, 0x45, 0x00, 0xb7, 0x13, 0xbd, 0xa5, 0x12, 0x23, 0x10, 0x89, 0xa9, 0x31, 0x01,
	0xfa, 0x32, 0x3d, 0x35, 0x26, 0x70, 0x2f, 0x20, 0x77, 0x41, 0x17, 0x0b, 0xe4, 0x7d, 0x91, 0x9f,
	0x0b, 0x5a, 0x59, 0x60, 0x5f, 0xc2, 0x9d, 0x8b, 0x27, 0x95, 0x80, 0x7f, 0x85, 0xf0, 0x3b, 0x17,
	0x8f, 0x2b, 0x95, 0xa7, 0x0b, 0x27, 0x82, 0x20, 0x78, 0x20, 0xf2, 0x74, 0xe1, 0x58, 0x10, 0xf8,
	0x0a, 0x7c, 0xf6, 0xb1, 0x99, 0x27, 0x28, 0xbe, 0x46, 0x8a, 0xcf, 0x3e, 0x36, 0xf8, 0xd2, 0x5e,
	0x60, 0x6a, 0xa6, 0x28, 0x76, 0x12, 0x5e, 0x28, 0x8b, 0x8f, 0x79, 0x71, 0x31, 0xc5, 0xc3, 0xb4,
	0x17, 0x17, 0xb2, 0x6c, 0xff, 0x1b, 0xdc, 0xc4, 0xef, 0xe2, 0xfc, 0x5d, 0x0c, 0x7f, 0xb0, 0x5a,
	0xd1, 0xa8, 0xb7, 0x99, 0x51, 0x6f, 0xe9, 0xe6, 0x7e, 0xb1, 0xac, 0x93, 0x6b, 0xfc, 0x75, 0x4b,
	0xa8, 0x0e, 0x8f, 0x4a, 0x49, 0xcd, 0xcc, 0xf6, 0xff, 0x67, 0x60, 0xb6, 0x75, 0x3e, 0xb4, 0xf9,
	0xbb, 0x20, 0xff, 0xcb, 0xf4, 0xd6, 0x2b, 0xdd, 0xac, 0xeb, 0x2d, 0x81, 0x42, 0xd1, 0x81, 0x71,
	0x50, 0x2c, 0x19, 0x2d, 0xa5, 0xb9, 0xce, 0xdf, 0x26, 0xa5, 0x71, 0x9b, 0xb5, 0xcc, 0xa3, 0xfa,
	0x6b, 0x32, 0x4b, 0x29, 0x64, 0x51, 0x68, 0x34, 0xa5, 0xec, 0x26, 0xcd, 0xc3, 0x06, 0xca, 0x8e,
	0x0d, 0xb3, 0x75, 0x54, 0xac, 0xb6, 0x63, 0xfa, 0x39, 0xba, 0x02, 0x19, 0xd4, 0x1d, 0xea, 0xa6,
	0x51, 0xac, 0x92, 0x05, 0xba, 0x04, 0x0b, 0x28, 0x68, 0x36, 0x0e, 0xc9, 0x22, 0x5d, 0x86, 0x45,
	0x5c, 0x95, 0xf9, 0x12, 0x94, 0xb2, 0xd8, 0xaa, 0x91, 0x8c, 0xc2, 0xb6, 0x8e, 0xea, 0x75, 0xbd,
	0x4a, 0xb2, 0x4a, 0x70, 0x5c, 0x2d, 0xd6, 0x8d, 0x7d, 0xb2, 0xa2, 0xe0, 0xf5, 0xa3, 0x6a, 0x95,
	0x50, 0x15, 0x5e, 0xb5, 0xd1, 0x68, 0x96, 0x8a, 0xe5, 0xd7, 0xe4, 0x16, 0x25, 0xb0, 0x84, 0xa2,
	0x36, 0x7b, 0xf2, 0xf8, 0xf1, 0x81, 0x4e, 0xd6, 0x68, 0x16, 0x40, 0x18, 0xd5, 0x9a, 0xc6, 0x3e,
	0x59, 0x57, 0x16, 0xb5, 0x68, 0x9b, 0x0d, 0xb5, 0x4d, 0x9b, 0xed, 0x71, 0xc8, 0x66, 0x42, 0xf0,
	0x84, 0x0b, 0x72, 0x0a, 0x73, 0xa0, 0x97, 0x4c, 0x43, 0xdf, 0x27, 0xb7, 0x95, 0x27, 0x35, 0xbd,
	0xf5, 0x8a, 0xe4, 0xe9, 0x1a, 0x10, 0x11, 0x76, 0xab, 0x58, 0x7e, 0xdd, 0x66, 0xcd, 0x86, 0xd9,
	0x22, 0x77, 0x54, 0x78, 0x87, 0x46, 0x93, 0xdc, 0xa5, 0x19, 0x98, 0x17, 0xf9, 0x7d, 0x42, 0xee,
	0xa9, 0xbc, 0xd6, 0x9a, 0x6d, 0x76, 0x60, 0x36, 0x8e, 0x9a, 0xe4, 0x73, 0x75, 0x00, 0x46, 0xad,
	0x28, 0x85, 0x5b, 0xca, 0xfd, 0x63, 0xdc, 0xe9, 0x0b, 0x65, 0x64, 0xea, 0xb5, 0x46, 0x4b, 0x6f,
	0xb3, 0x62, 0x93, 0x7c, 0xa9, 0xfc, 0x3b, 0x2e, 0x99, 0x46, 0xe5, 0x40, 0x27, 0xf7, 0x95, 0x43,
	0xc5, 0x56, 0xad, 0xcd, 0x4a, 0x47, 0x75, 0xfe, 0x86, 0xfe, 0x15, 0xdd, 0x84, 0x5b, 0x28, 0xdd,
	0x37, 0x4a, 0xba, 0xd9, 0x66, 0xe5, 0x57, 0x45, 0x4c, 0xc1, 0x83, 0x78, 0xeb, 0xfa, 0xbe, 0x51,
	0x37, 0x4a, 0xc5, 0x7a, 0x85, 0x7c, 0x1d, 0x6f, 0x5d, 0xaa, 0x18, 0xfb, 0x64, 0x47, 0x05, 0xd0,
	0x7a, 0x42, 0x1e, 0xc6, 0x8b, 0xa7, 0xe4, 0x1b, 0x15, 0xe8, 0x71, 0x79, 0x8f, 0xfc, 0x8b, 0xca,
	0xcd, 0x71, 0xf9, 0x49, 0x81, 0x3c, 0x52, 0xdc, 0x07, 0xd5, 0x46, 0x89, 0x57, 0xcb, 0xb1, 0x4e,
	0x34, 0xba, 0x0e, 0xab, 0xc2, 0x93, 0x62, 0xc9, 0x34, 0xca, 0x51, 0xc6, 0x76, 0xe3, 0x1c, 0x3d,
	0x25, 0x8f, 0xd5, 0xe2, 0xb8, 0x49, 0x9e, 0x28, 0x40, 0xa5, 0x5c, 0x8f, 0x4b, 0xbd, 0xa0, 0xe2,
	0xe4, 0x05, 0x25, 0x2b, 0xf4, 0x29, 0xdd, 0x00, 0x2a, 0x9c, 0xe3, 0xeb, 0xb6, 0x2c, 0xc6, 0x3d,
	0x55, 0xb9, 0xd2, 0x95, 0x38, 0xfb, 0xcf, 0x54, 0x0c, 0x8d, 0x56, 0x9d, 0x7c, 0x47, 0xef, 0xc0,
	0x66, 0xca, 0x32, 0x71, 0x26, 0xff, 0xaa, 0x22, 0x4a, 0xec, 0xf9, 0x43, 0x1c, 0x66, 0xad, 0x59,
	0x3d, 0x6c, 0xb3, 0xa3, 0xba, 0x41, 0xfe, 0x5d, 0x91, 0xbe, 0xa9, 0xd4, 0xc8, 0x4b, 0xb5, 0xaa,
	0x1f, 0xeb, 0xa4, 0xa8, 0x00, 0xfb, 0xe5, 0x86, 0x1e, 0x25, 0xa0, 0x3c, 0xdd, 0x5b, 0x2d, 0xbd,
	0xd6, 0xac, 0x16, 0x5b, 0x3a, 0xa9, 0xa8, 0x7c, 0xec, 0x97, 0xc9, 0xbe, 0xaa, 0xfd, 0x36, 0xdb,
	0x6b, 0x63, 0x95, 0x1e, 0xa8, 0x9a, 0xe2, 0x65, 0x2b, 0x64, 0xaf, 0x12, 0x66, 0x4f, 0xdb, 0x58,
	0xdd, 0x46, 0x0a, 0x59, 0x78, 0x76, 0xa0, 0x93, 0xff, 0x48, 0x14, 0x3c, 0x0a, 0x5e, 0xab, 0xa3,
	0x37, 0xb0, 0xea, 0x1a, 0xca, 0xa0, 0xf9, 0x06, 0xcf, 0xaf, 0xad, 0x9c, 0x3f, 0x6e, 0xb7, 0x65,
	0xbf, 0xbe, 0x55, 0x0e, 0x1c, 0xea, 0xe6, 0xb1, 0x51, 0xd6, 0x8d, 0x7d, 0xf2, 0x0b, 0x1f, 0x60,
	0x82, 0x7a, 0x72, 0xe0, 0xfc, 0x67, 0xa2, 0x57, 0x0b, 0xd8, 0xab, 0xff, 0xa5, 0xce, 0x4d, 0x45,
	0xdf, 0xa8, 0x1c, 0xbd, 0x26, 0xff, 0xad, 0xdc, 0xd9, 0xaf, 0xea, 0x6d, 0x9d, 0xb0, 0xb8, 0x7a,
	0xf8, 0x5a, 0xc2, 0xff, 0x47, 0x15, 0x43, 0x9b, 0x3d, 0x7b, 0x2c, 0x07, 0x80, 0x9d, 0x08, 0xee,
	0x19, 0x17, 0x9c, 0xc4, 0x89, 0x17, 0xe8, 0x67, 0x8f, 0x0f, 0xc8, 0xa9, 0xc2, 0x46, 0x42, 0x0e,
	0x26, 0xef, 0xd4, 0xb4, 0x54, 0xa6, 0x91, 0xc6, 0x51, 0x1a, 0xe5, 0x6a, 0x54, 0x64, 0xef, 0x13,
	0x61, 0xed, 0xa1, 0x07, 0xfd, 0xed, 0xef, 0x20, 0x93, 0xf8, 0xaf, 0x1c, 0xdf, 0x2a, 0xb1, 0x94,
	0xdf, 0xed, 0x28, 0x64, 0x93, 0x52, 0xfc, 0x70, 0xf7, 0x87, 0x19, 0x58, 0x4a, 0xfe, 0xe3, 0x4d,
	0x7e, 0x9a, 0x93, 0xeb, 0xe4, 0x60, 0x5f, 0x13, 0x1f, 0xf9, 0x94, 0xaa, 0xd9, 0x6c, 0x92, 0x19,
	0x9e, 0xa9, 0x94, 0xf4, 0x55, 0xa5, 0x5a, 0x16, 0xb3, 0x3e, 0x25, 0xde, 0x37, 0xc9, 0x8d, 0x29,
	0x06, 0x3e, 0x95, 0xe7, 0xa6, 0xa4, 0xad, 0x4a, 0x8d, 0xcc, 0x6f, 0xff, 0x06, 0x10, 0xff, 0xeb,
	0x8e, 0xd3, 0xc5, 0x2b, 0xd6, 0x6c, 0x35, 0x9a, 0xc2, 0xa1, 0xb4, 0xb0, 0xc6, 0x1d, 0xca, 0xc1,
	0x5a, 0x42, 0x5a, 0x32, 0x1b, 0xc5, 0x4a, 0xb9, 0x78, 0x18, 0xdd, 0x3f, 0x09, 0x4d, 0xbd, 0x54,
	0x2b, 0x92, 0x1b, 0x74, 0x13, 0x68, 0x42, 0x68, 0xd4, 0x8f, 0x8b, 0x55, 0xa3, 0x42, 0xfe, 0x31,
	0xb3, 0xfd, 0x1b, 0x2c, 0xa7, 0xfe, 0xb7, 0x46, 0xef, 0xc3, 0x56, 0xa4, 0x66, 0x7a, 0xfd, 0xa8,
	0xc6, 0x8e, 0x8b, 0xd5, 0x23, 0x9d, 0xa5, 0x6c, 0xc8, 0x35, 0xba, 0x0d, 0xf7, 0x52, 0xa2, 0xf8,
	0xde, 0x6c, 0xb3, 0x52, 0xf1, 0x50, 0xaf, 0x90, 0x19, 0xce, 0x94, 0xb6, 0xe1, 0xf7, 0x4f, 0xd4,
	0xfd, 0xd2, 0xea, 0x7a, 0x67, 0x0e, 0xbf, 0x87, 0x3f, 0xfd, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x80, 0x24, 0x69, 0x15, 0x9f, 0x20, 0x00, 0x00,
}
